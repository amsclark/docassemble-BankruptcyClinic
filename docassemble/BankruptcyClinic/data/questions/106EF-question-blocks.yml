table: prop_priority_claims_table
rows: prop.priority_claims
columns:
  - Name: row_item.name
  - Type: row_item.type
  - Total Claim: row_item.total_claim
  - Date Incurred: row_item.date_incurred
edit:
  - name
  - type
  - total_claim
  - incurred_date
---
section: schedule_ef
question: |
  Do any creditors have priority unsecured claims against you?
yesno: prop.priority_claims.there_are_any
---
section: schedule_ef
question: |
  Are there any more creditors that have priority unsecured claims?
yesno: prop.priority_claims.there_is_another
under: |
  ${ prop_priority_claims_table }
---
section: schedule_ef
question: |
  Tell the court about a priority unsecured claim
fields:
  - Creditors Name: prop.priority_claims[i].name
    default: Some creditor
  - Number: prop.priority_claims[i].number
    default: 1111
  - Street: prop.priority_claims[i].street
    default: 3rd pl s
  - City: prop.priority_claims[i].city
    default: tampa
  - State: prop.priority_claims[i].state
    default: Florida
  - Zip: prop.priority_claims[i].zip
    default: 99999
  - note: Details about debt
  - Who incurred the debt?: prop.priority_claims[i].who
    choices:
      - Debtor 1 only
      - Debtor 2 only
      - Debtor 1 and Debtor 2 only
      - At least one of the debtors and another
    default: Debtor 1 only
  - This claim is for a community debt.: prop.priority_claims[i].community_debt
    datatype: yesnoradio
    default: True
  - Is the claim subject to offset?: prop.priority_claims[i].subject_to_offset
    datatype: yesnoradio
    default: False
  - Last 4 digits of account number: prop.priority_claims[i].account_number
    default: 9999
    datatype: number
  - When was the debt incurred?: prop.priority_claims[i].date_incurred
    datatype: date
    default: 01/01/23
  - note: As of the date you file, the claim is
  - Contingent: prop.priority_claims[i].contingent
    datatype: yesno
    default: False
  - Unliquified: prop.priority_claims[i].unliquified
    datatype: yesno
    default: False
  - Disputed: prop.priority_claims[i].disputed
    datatype: yesno
    default: False
  - Type of PRIORITY unsecured claim: prop.priority_claims[i].type
    choices:
      - Domestic support obligations
      - Taxes and certain other debts you owe the government
      - Claims for death or personal injury while you were intoxicated
      - Other
    default: Other
  - Specify other unsecured claim type: prop.priority_claims[i].other_type
    required: True
    default: Other
    show if: 
      variable: prop.priority_claims[i].type
      is: Other
  - note: Claim value
  - Total Claim: prop.priority_claims[i].total_claim
    datatype: currency
    default: 400
  - Priority Amount: prop.priority_claims[i].priority_amount
    datatype: currency
    default: 100
  - Nonpriority Amount: prop.priority_claims[i].nonpriority_amount
    datatype: currency
    default: 400
  - Do others need to be notifed about debt?: prop.priority_claims[i].has_notify
    default: True
    datatype: yesnoradio
  - Name: prop.priority_claims[i].other_name
    default: Other name
    show if: prop.priority_claims[i].has_notify
  - Number: prop.priority_claims[i].other_number
    default: 1111
    show if: prop.priority_claims[i].has_notify
  - Street: prop.priority_claims[i].other_street
    default: 23rd Ave
    show if: prop.priority_claims[i].has_notify
  - City: prop.priority_claims[i].other_city
    default: Tampa
    show if: prop.priority_claims[i].has_notify
  - State: prop.priority_claims[i].other_state
    default: Florida
    show if: prop.priority_claims[i].has_notify
  - Zip: prop.priority_claims[i].other_zip
    default: 99999
    show if: prop.priority_claims[i].has_notify
---
table: prop_nonpriority_claims_table
rows: prop.nonpriority_claims
columns:
  - Name: row_item.name
  - Type: row_item.type
  - Total Claim: row_item.total_claim
  - Date Incurred: row_item.date_incurred
edit:
  - name
  - type
  - total_claim
  - incurred_date
---
section: schedule_ef
question: |
  Do any creditors have nonpriority unsecured claims against you?
yesno: prop.nonpriority_claims.there_are_any
---
section: schedule_ef
question: |
  Are there any more creditors that have nonpriority unsecured claims?
yesno: prop.nonpriority_claims.there_is_another
under: |
  ${ prop_nonpriority_claims_table }  
---
section: schedule_ef
question: |
  Tell the court about a nonpriority unsecured claim
fields:
  - Creditors Name: prop.nonpriority_claims[i].name
    default: Some creditor
  - Number: prop.nonpriority_claims[i].number
    default: 1111
  - Street: prop.nonpriority_claims[i].street
    default: 3rd pl s
  - City: prop.nonpriority_claims[i].city
    default: tampa
  - State: prop.nonpriority_claims[i].state
    default: Florida
  - Zip: prop.nonpriority_claims[i].zip
    default: 99999
  - note: Details about debt
  - Who incurred the debt?: prop.nonpriority_claims[i].who
    choices:
      - Debtor 1 only
      - Debtor 2 only
      - Debtor 1 and Debtor 2 only
      - At least one of the debtors and another
    default: Debtor 1 only
  - This claim is for a community debt.: prop.nonpriority_claims[i].community_debt
    datatype: yesnoradio
    default: True
  - Is the claim subject to offset?: prop.nonpriority_claims[i].subject_to_offset
    datatype: yesnoradio
    default: False
  - Last 4 digits of account number: prop.nonpriority_claims[i].account_number
    default: 9999
    datatype: number
  - When was the debt incurred?: prop.nonpriority_claims[i].date_incurred
    datatype: date
    default: 01/01/23
  - note: As of the date you file, the claim is
  - Contingent: prop.nonpriority_claims[i].contingent
    datatype: yesno
    default: False
  - Unliquified: prop.nonpriority_claims[i].unliquified
    datatype: yesno
    default: False
  - Disputed: prop.nonpriority_claims[i].disputed
    datatype: yesno
    default: False
  - Type of PRIORITY unsecured claim: prop.nonpriority_claims[i].type
    choices:
      - Student loans
      - Obligations arising out of a separation agreement or divorce that you did not report as priority claims
      - Debts to pension or profit-sharing plans, and other similar debts
      - Other
    default: Other
  - Specify other unsecured claim type: prop.nonpriority_claims[i].other_type
    required: True
    default: Other
    show if: 
      variable: prop.nonpriority_claims[i].type
      is: Other
  - note: Claim value
  - Total Claim: prop.nonpriority_claims[i].total_claim
    datatype: currency
    default: 400
  - Do others need to be notifed about debt?: prop.nonpriority_claims[i].has_notify
    default: True
    datatype: yesnoradio
  - Name: prop.nonpriority_claims[i].other_name
    default: Other name
    show if: prop.nonpriority_claims[i].has_notify
  - Number: prop.nonpriority_claims[i].other_number
    default: 1111
    show if: prop.nonpriority_claims[i].has_notify
  - Street: prop.nonpriority_claims[i].other_street
    default: 23rd Ave
    show if: prop.nonpriority_claims[i].has_notify
  - City: prop.nonpriority_claims[i].other_city
    default: Tampa
    show if: prop.nonpriority_claims[i].has_notify
  - State: prop.nonpriority_claims[i].other_state
    default: Florida
    show if: prop.nonpriority_claims[i].has_notify
  - Zip: prop.nonpriority_claims[i].other_zip
    default: 99999
    show if: prop.nonpriority_claims[i].has_notify
---
event: schedule_ef
section: schedule_ef
question: |
  Review Unsecured Claims
review:
  - note: |
      <br>
      ### Priority Unsecured Claims
      % if len(prop.priority_claims) > 0:
        ${ prop_priority_claims_table }
        ${ prop.priority_claims.add_action() }
      % else:
        No priority claims listed
        ${ prop.priority_claims.add_action() }
      % endif
      <br>
      ### Non-priority Unsecured Claims
      % if len(prop.nonpriority_claims) > 0:
        ${ prop_nonpriority_claims_table }
        ${ prop.nonpriority_claims.add_action() }
      % else:
        No priority claims listed
        ${ prop.nonpriority_claims.add_action() }
      % endif
---
event: schedule_ef_attach
section: schedule_ef
question: Schedule EF Attachment
continue button field: schedule_ef_attach
attachment:
  pdf template file: form_b106ef.pdf
  variable name: ef_attach
  code: unsecured_claims
---
code: |
  debtor_name = debtor[0].name.first + " " + debtor[0].name.middle + " " + debtor[0].name.last
  if len(debtor) > 1:
    debtor2_name = debtor[1].name.first + " " + debtor[1].name.middle + " " + debtor[1].name.last
  else:
    debtor2_name = ''
  unsecured_claims = {}
  unsecured_claims['debtor1_name_1'] = debtor_name
  unsecured_claims['debtor1_name_2'] = debtor_name
  unsecured_claims['debtor1_name_3'] = debtor_name
  unsecured_claims['debtor1_name_4'] = debtor_name
  unsecured_claims['debtor1_name_5'] = debtor_name
  unsecured_claims['debtor1_name_6'] = debtor_name  
  unsecured_claims['debtor1_name_7'] = debtor_name 
  unsecured_claims['debtor2_name_1'] = debtor2_name
  unsecured_claims['bankruptcy_district'] = current_district
  unsecured_claims['case_number_1'] = case_number
  unsecured_claims['case_number_2'] = case_number
  unsecured_claims['case_number_3'] = case_number
  unsecured_claims['case_number_4'] = case_number
  unsecured_claims['case_number_5'] = case_number
  unsecured_claims['case_number_6'] = case_number
  unsecured_claims['case_number_7'] = case_number
  unsecured_claims['isAmended'] = amended_filing
  unsecured_claims['noPriorityUnsecuredCreditors'] = True if len(prop.priority_claims) == 0 else False
  unsecured_claims['hasPriorityUnsecuredCreditors'] = True if len(prop.priority_claims) > 0 else False
  clm = 1
  for claim in prop.priority_claims:
    unsecured_claims['name'+str(clm)] = claim.name
    unsecured_claims['acct'+str(clm)] = claim.account_number
    unsecured_claims['totalClaim'+str(clm)] = currency(claim.total_claim)
    unsecured_claims['priorityAmount'+str(clm)] = currency(claim.priority_amount)
    unsecured_claims['nonpriorityAmount'+str(clm)] = currency(claim.nonpriority_amount)
    unsecured_claims['street'+str(clm)] = str(claim.number) + " " + claim.street
    unsecured_claims['dateIncurred'+str(clm)] = format_date(claim.date_incurred, format='MM/dd/yyyy')
    unsecured_claims['city'+str(clm)] = claim.city
    unsecured_claims['state'+str(clm)] = claim.state
    unsecured_claims['zip'+str(clm)] = claim.zip
    unsecured_claims['isContingent'+str(clm)] = claim.contingent
    unsecured_claims['isUnliquidated'+str(clm)] = claim.unliquified
    unsecured_claims['isDebtor1Only'+str(clm)] = True if claim.who == 'Debtor 1 only' else False
    unsecured_claims['isDebtor2Only'+str(clm)] = True if claim.who == 'Debtor 2 only' else False
    unsecured_claims['isDisputed'+str(clm)] = claim.disputed
    unsecured_claims['isBoth'+str(clm)] = True if claim.who == 'Debtor 1 and Debtor 2 only' else False
    unsecured_claims['isOneDebtor'+str(clm)] = True if claim.who == 'At least one of the debtors and another' else False
    unsecured_claims['isDomestic'+str(clm)] = True if claim.type == 'Domestic support obligations' else False
    unsecured_claims['isCommunity'+str(clm)] = claim.community_debt
    unsecured_claims['isTaxes'+str(clm)] = True if claim.type == 'Taxes and certain other debts you owe the government' else False,
    unsecured_claims['isDeath'+str(clm)] = True if claim.type == 'Claims for death or personal injury while you were intoxicated' else False
    unsecured_claims['isOther'+str(clm)] = True if claim.type == 'Other' else False
    if claim.type == 'Other':
      unsecured_claims['otherDesc'+str(clm)] = claim.other_type
    unsecured_claims['notSubjectToOffset'+str(clm)] = True if claim.subject_to_offset == False else False
    unsecured_claims['isSubjectToOffset'+str(clm)] = True if claim.subject_to_offset == True else False
    clm += 1
    
    
  unsecured_claims['noNonpriorityUnsecuredCreditors'] = True if len(prop.nonpriority_claims) == 0 else False
  unsecured_claims['hasNonpriorityUnsecuredCreditors'] = True if len(prop.nonpriority_claims) > 0 else False
  clm = 1
  for claim in prop.nonpriority_claims:
    unsecured_claims['nonName'+str(clm)] = claim.name
    unsecured_claims['nonAcct'+str(clm)] = claim.account_number
    unsecured_claims['nonTotalClaim'+str(clm)] = currency(claim.total_claim)
    unsecured_claims['nonAddress'+str(clm)] = str(claim.number) + " " + claim.street
    unsecured_claims['nonDate'+str(clm)] = format_date(claim.date_incurred, format='MM/dd/yyyy')
    unsecured_claims['nonCity'+str(clm)] = claim.city
    unsecured_claims['nonState'+str(clm)] = claim.state
    unsecured_claims['nonZip'+str(clm)] = claim.zip
    unsecured_claims['nonIsContingent'+str(clm)] = claim.contingent
    unsecured_claims['nonIsUnliquidated'+str(clm)] = claim.unliquified
    unsecured_claims['nonIsDisputed'+str(clm)] = claim.disputed
    unsecured_claims['nonIsDebtor1Only'+str(clm)] = True if claim.who == 'Debtor 1 only' else False
    unsecured_claims['nonIsDebtor2Only'+str(clm)] = True if claim.who == 'Debtor 2 only' else False
    unsecured_claims['nonIsBoth'+str(clm)] = True if claim.who == 'Debtor 1 and Debtor 2 only' else False
    unsecured_claims['nonIsOneDebtor'+str(clm)] = True if claim.who == 'At least one of the debtors and another' else False
    unsecured_claims['nonIsLoan'+str(clm)] = True if claim.type == 'Student loans' else False
    unsecured_claims['nonIsObligation'+str(clm)] = True if claim.type == 'Obligations arising out of a separation agreement or divorce that you did not report as priority claims' else False
    unsecured_claims['nonIsCommunity'+str(clm)] = claim.community_debt
    unsecured_claims['nonIsPension'+str(clm)] = True if claim.type == 'Debts to pension or profit-sharing plans, and other similar debts' else False
    unsecured_claims['nonIsOther'+str(clm)] = True if claim.type == 'Other' else False
    if claim.type == 'Other':
      unsecured_claims['nonOtherDesc'+str(clm)] = claim.other_type
    unsecured_claims['nonNotSubjectToOffset'+str(clm)] = True if claim.subject_to_offset == False else False
    unsecured_claims['nonIsSubjectToOffset'+str(clm)] = True if claim.subject_to_offset == True else False
    clm += 1

  clm = 1
  ref = 1
  for claim in prop.priority_claims:
    if claim.has_notify:
      unsecured_claims['notiName'+str(clm)] = claim.other_name
      unsecured_claims['notiStreet'+str(clm)] = str(claim.other_number) + " " + claim.other_street
      unsecured_claims['notiRefLine'+str(clm)] = str(ref)
      unsecured_claims['notiIsPriority'+str(clm)] = True
      unsecured_claims['notiIsNonpriority'+str(clm)] = False
      unsecured_claims['notiCity'+str(clm)] = claim.other_city
      unsecured_claims['notiState'+str(clm)] = claim.other_state
      unsecured_claims['notiZip'+str(clm)] = claim.other_zip
      unsecured_claims['notiAcct'+str(clm)] = claim.account_number
      clm += 1
    ref += 1
  
  clm = 1
  ref = 1
  for claim in prop.priority_claims:
    if claim.has_notify:
      unsecured_claims['notiName'+str(clm)] = claim.other_name
      unsecured_claims['notiStreet'+str(clm)] = str(claim.other_number) + " " + claim.other_street
      unsecured_claims['notiRefLine'+str(clm)] = str(ref)
      unsecured_claims['notiIsPriority'+str(clm)] = False
      unsecured_claims['notiIsNonpriority'+str(clm)] = True
      unsecured_claims['notiCity'+str(clm)] = claim.other_city
      unsecured_claims['notiState'+str(clm)] = claim.other_state
      unsecured_claims['notiZip'+str(clm)] = claim.other_zip
      unsecured_claims['notiAcct'+str(clm)] = claim.account_number
      clm += 1
    ref += 1
  
  unsecured_claims['domesticTotal'] = currency(sum(claim.total_claim for claim in list(filter(lambda x: x.type == 'Domestic support obligations', prop.priority_claims))))
  unsecured_claims['taxTotal'] = currency(sum(claim.total_claim for claim in list(filter(lambda x: x.type == 'Taxes and certain other debts you owe the government', prop.priority_claims))))
  unsecured_claims['deathTotal'] = currency(sum(claim.total_claim for claim in list(filter(lambda x: x.type == 'Claims for death or personal injury while you were intoxicated', prop.priority_claims))))
  unsecured_claims['otherP1Total'] = currency(sum(claim.total_claim for claim in list(filter(lambda x: x.type == 'Other', prop.priority_claims))))
  unsecured_claims['p1Total'] = currency(unsecured_claims['domesticTotal'] + unsecured_claims['taxTotal'] + unsecured_claims['deathTotal'] + unsecured_claims['otherP1Total'])
  
  unsecured_claims['loansTotal'] = currency(sum(claim.total_claim for claim in list(filter(lambda x: x.type == 'Student loans', prop.nonpriority_claims))))
  unsecured_claims['obligationsTotal'] = currency(sum(claim.total_claim for claim in list(filter(lambda x: x.type == 'Obligations arising out of a separation agreement or divorce that you did not report as priority claims', prop.nonpriority_claims))))
  unsecured_claims['pensionsTotal'] = currency(sum(claim.total_claim for claim in list(filter(lambda x: x.type == 'Debts to pension or profit-sharing plans, and other similar debts', prop.nonpriority_claims))))
  unsecured_claims['otherP2Total'] = currency(sum(claim.total_claim for claim in list(filter(lambda x: x.type == 'Other', prop.nonpriority_claims))))
  unsecured_claims['p2Total'] = currency(unsecured_claims['loansTotal'] + unsecured_claims['obligationsTotal'] + unsecured_claims['pensionsTotal'] + unsecured_claims['otherP2Total'])