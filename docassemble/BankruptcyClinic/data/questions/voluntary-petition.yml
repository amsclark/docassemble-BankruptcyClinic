modules:
  - .courts_list
  - .county_list
---
include:
  - mandatory-initial-code.yml
  - 101-question-blocks.yml
  - 101A-question-blocks.yml
  - 103A-question-blocks.yml
  - 103B-question-blocks.yml
  - 106AB-question-blocks.yml
  - 106C-question-blocks.yml
  - 106D-question-blocks.yml
  - 106EF-question-blocks.yml
  - 106G-question-blocks.yml
  - 106H-question-blocks.yml
  - 106I-question-blocks.yml
  - 106J-question-blocks.yml
  - 108-question-blocks.yml
  - 122A-question-blocks.yml
  - 107-question-blocks.yml
  - 121-question-blocks.yml
---
metadata:
  title: Voluntary Petition for Individuals Filing for Bankruptcy
  short title: Petition for Chapter 7 Bankruptcy
---
sections:
  - Introduction
  - district: District & Case
  - identify: Indentify Debtor(s)
  - schedule_ab: Property
  - schedule_c: Exemptions
  - schedule_d: Secured Creditors
  - schedule_ef: Unsecured Creditors
  - schedule_g: Contracts and Leases
  - schedule_h: Codebtors
  - schedule_i: Your Income
  - schedule_j: Expenses
  - form_108: Statment of Intention
  - form_122a: Monthly Income
  - form_107: Statement of Financial Affairs
  - case_det: Case Details
  - sole_prop: Sole Proprietorship(s)
  - haz_prop: Hazardous Property
  - credit_counsel: Credit Counseling
  - report: Reporting
  - Other
  - fin: Finish Up
---
features:
  navigation: True
  progress bar: True
  navigation back button: false
  css:
    - https://cdnjs.cloudflare.com/ajax/libs/animate.css/3.5.2/animate.min.css
    - styles.css
    - https://fonts.googleapis.com/css2?family=Roboto:wght@300;400&display=swap
    - bootstrap-theme.css
---
images:
  ssn: ssn-itin-helper.png
---
objects:
  - case: DAObject
  - case.previous_bankruptcy: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - case.pending_bankruptcy: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - business: DAObject
  - business.business: |
      DAList.using(
        object_type=DAObject,
        minimum_number=1,
        complete_attribute='complete')
  - hazardous_property: DAObject
  - hazardous_property.property: |
        DAList.using(
        object_type=DAObject,
        minimum_number=1,
        complete_attribute='complete')
  - debtor[i].counseling: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - reporting: DAObject
  - debtor: |
      DAList.using(
        object_type=DAObject,
        minimum_number=1,
        complete_attribute='complete',
        ask_number=True)
  - debtor[i].name: |
      DAObject.using(
        complete_attribute='complete')
  - debtor[i].address: |
      DAObject.using(
        complete_attribute='complete')
  - debtor[i].tax_id: |
      DAObject.using(
        complete_attribute='complete')
  - debtor[i].alias: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - debtor[i].district_info: |
      DAObject.using(
        complete_attribute='complete')
  - debtor[i].income: |
      DAObject.using(
        complete_attribute='complete')
  - debtor[i].expenses: |
      DAObject.using(
        complete_attribute='complete')
  - debtor[i].expenses.dependents: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - debtor[i].ssn_info: |
      DAObject.using(
        complete_attribute='complete')
  - payment: |
      DAObject.using(
        complete_attribute='complete')
  - payment.payments: |
      DAList.using(
        object_type=DAObject,
        minimum_number=1,
        complete_attribute='complete')
  - family: |
      DAObject.using(
        complete_attribute='complete')
  - prop: |
      DAObject.using(
        complete_attribute='complete')
  - prop.exemptions: |
      DAObject.using(
        complete_attribute='complete')
  - prop.accounts: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - prop.vehicles: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - prop.owers: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - additional: |
      DAObject.using(
        complete_attribute='complete')
  - additional.bankruptcies: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - prop.interests: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - prop.ab_vehicles: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - prop.ab_other_vehicles: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - prop.financial_assets: |
      DAObject.using(
        complete_attribute='complete')
  - prop.financial_assets.deposits: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - prop.financial_assets.bonds_and_stocks: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - prop.financial_assets.non_traded_stock: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - prop.financial_assets.corporate_bonds: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - prop.financial_assets.retirement_accounts: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - prop.financial_assets.prepayments: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - prop.financial_assets.annuities: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - prop.financial_assets.edu_accounts: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - prop.owed_property: |
      DAObject.using(
        complete_attribute='complete')
  - prop.business_property: |
      DAObject.using(
        complete_attribute='complete')
  - prop.business_property.others: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - prop.farming_property: |
      DAObject.using(
        complete_attribute='complete')
  - prop.exempt_property: |
      DAObject.using(
        complete_attribute='complete')
  - prop.exempt_property.properties: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - prop.creditors: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - prop.creditors[i].other_notify: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - prop.priority_claims: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - prop.nonpriority_claims: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - prop.contracts_and_leases: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - debtors: |
      DAObject.using(
        complete_attribute='complete')
  - debtors.codebtors: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - secured_claims: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - personal_leases: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - monthly_income: |
      DAObject.using(
        complete_attribute='complete')
  - financial_affairs: |
      DAObject.using(
        complete_attribute='complete')
  - financial_affairs.consumer_debt_payments: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - financial_affairs.insider_payments: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - financial_affairs.insider_benefits: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - financial_affairs.lawsuits: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - financial_affairs.levies: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - financial_affairs.gifts: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - financial_affairs.bankruptcy_payments: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - financial_affairs.creditor_help: |
      DAObject.using(
        complete_attribute='complete')
  - financial_affairs.other_transfers: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - financial_affairs.self_settled_trust: |
      DAObject.using(
        complete_attribute='complete')
  - financial_affairs.instruments: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')
  - financial_affairs.deposit_box: |
      DAObject.using(
        complete_attribute='complete')
  - financial_affairs.storage_unit: |
      DAObject.using(
        complete_attribute='complete')
  - financial_affairs.held_property: |
      DAObject.using(
        complete_attribute='complete')
  - financial_affairs.environment: |
      DAObject.using(
        complete_attribute='complete')
  - financial_affairs.businesses: |
      DAList.using(
        object_type=DAObject,
        complete_attribute='complete')


---
mandatory: true
code: |
  introduction_screen
  current_district
  chapter = "Chapter 7"
  amended_filing
  if amended_filing == True:
    case_number
  district_final
  filing_status
  if filing_status == "Filing individually":
    debtor.target_number = 1
    debtor[0].expenses.joint_case = False
  else:
    debtor.target_number = 2
    debtor[0].expenses.joint_case = True
  debtor.gather()
  debtor[0].expenses.other_household
  debtor[0].expenses.dependents.gather()
  debtor_final


  #106AB
  property_intro
  prop.interests.gather()
  prop.ab_vehicles.gather()
  prop.ab_other_vehicles.gather()
  prop.has_household_goods
  prop.has_collectibles
  prop.has_hobby_equipment
  prop.has_firearms
  prop.has_clothes
  prop.has_jewlery
  prop.has_animals
  prop.has_other_household_items
  prop.financial_assets.has_cash
  prop.financial_assets.deposits.gather()
  prop.financial_assets.bonds_and_stocks.gather()
  prop.financial_assets.non_traded_stock.gather()
  prop.financial_assets.corporate_bonds.gather()
  prop.financial_assets.retirement_accounts.gather()

  prop.financial_assets.prepayments.gather()
  prop.financial_assets.annuities.gather()

  prop.financial_assets.edu_accounts.gather()
  prop.financial_assets.has_future_property_interest
  prop.financial_assets.has_ip_interest
  prop.financial_assets.has_intangible_interest
  prop.owed_property.has_tax_refund
  prop.owed_property.has_family_support
  prop.owed_property.has_other_amounts
  prop.owed_property.has_insurance_interest
  prop.owed_property.has_trust
  prop.owed_property.has_third_party
  prop.owed_property.has_contingent_claims
  prop.owed_property.has_other_assets
  prop.business_property.has_property
  if prop.business_property.has_property == True:
    prop.business_property.has_ar
    prop.business_property.has_equipment
    prop.business_property.has_machinery
    prop.business_property.has_inventory
    prop.business_property.has_lists

  prop.farming_property.has_property
  if prop.farming_property.has_property == True:
    prop.farming_property.has_animals
    prop.farming_property.has_crops
    prop.farming_property.has_equipment
    prop.farming_property.has_supplies
    prop.farming_property.has_commercial
  prop.has_other_prop

  #106C
  #prop.exempt_property.exemption_type
  #prop.exempt_property.properties.gather()
  prop.exempt_property.claim_homestead_exemption = False

  #107
  financial_affairs.debtor_count = len(debtor)
  financial_affairs.marital_status

  financial_affairs.lived_with_spouse
  financial_affairs.employed
  if len(debtor) > 1 and financial_affairs.marital_status == False:
    financial_affairs.debtor2_employed
  financial_affairs.had_other_income
  if len(debtor) > 1 and financial_affairs.marital_status == False:
    financial_affairs.debtor2_had_other_income
  financial_affairs.primarily_consumer_debts

  #financial_affairs.large_debt_payments
  financial_affairs.consumer_debt_payments.gather()

  financial_affairs.insider_payments.gather()
  financial_affairs.insider_benefits.gather()
  financial_affairs.lawsuits.gather()
  financial_affairs.levies.gather()
  financial_affairs.has_refusal
  financial_affairs.other_assignee
  financial_affairs.gifts.gather()
  financial_affairs.has_charity
  financial_affairs.has_disaster
  financial_affairs.bankruptcy_payments.gather()
  financial_affairs.has_creditor_help
  financial_affairs.other_transfers.gather()
  financial_affairs.has_self_settled_trust
  financial_affairs.instruments.gather()
  financial_affairs.has_deposit_box
  financial_affairs.has_storage_unit
  financial_affairs.has_held_property
  financial_affairs.environment.has_liability
  financial_affairs.environment.has_release
  financial_affairs.environment.has_proceeding
  financial_affairs.business_types
  if financial_affairs.business_types['A sole proprietor or self-employed in a trade, profession, or other activity, either full-time or part-time'] or financial_affairs.business_types['A member of a limited liability company (LLC) or limited liability partnership (LLP)'] or financial_affairs.business_types['A partner in a partnership'] or financial_affairs.business_types['An officer, director, or managing executive of a corporation'] or financial_affairs.business_types['An owner of at least 5% of the voting or equity securities of a corporation']:
    financial_affairs.businesses.there_are_any = True
  financial_affairs.businesses.gather()
  financial_affairs.has_statement

  #106D
  prop.creditors.gather()

  #106EF
  prop.priority_claims.gather()
  prop.nonpriority_claims.gather()

  #106G
  prop.contracts_and_leases.gather()
  personal_leases.gather()

  #106H
  debtors.community_property

  #106I - Income
  debtor[0].income.employment
  debtor[0].income.income_amount_1
  debtor[0].income.overtime_pay_1
  debtor[0].income.tax_deduction
  debtor[0].income.mandatory_contributions
  debtor[0].income.voluntary_contributions
  debtor[0].income.fund_loans
  debtor[0].income.insurance
  debtor[0].income.domestic_support
  debtor[0].income.union_dues
  debtor[0].income.other_deduction
  debtor[0].income.net_rental_business
  debtor[0].income.interest_and_dividends
  debtor[0].income.family_support
  debtor[0].income.unemployment
  debtor[0].income.social_security
  debtor[0].income.other_govt_assist
  debtor[0].income.pension
  debtor[0].income.other_monthly_income
  if len(debtor) > 1 and financial_affairs.marital_status:
    debtor[1].income.employment
    if debtor[1].income.employment == 'Employed':
      debtor[1].income.income_amount_1
      debtor[1].income.overtime_pay_1
      debtor[1].income.tax_deduction
      debtor[1].income.mandatory_contributions
      debtor[1].income.voluntary_contributions
      debtor[1].income.fund_loans
      debtor[1].income.insurance
      debtor[1].income.domestic_support
      debtor[1].income.union_dues
      debtor[1].income.other_deduction
      debtor[1].income.net_rental_business
      debtor[1].income.interest_and_dividends
      debtor[1].income.family_support
      debtor[1].income.unemployment
      debtor[1].income.social_security
      debtor[1].income.other_govt_assist
      debtor[1].income.pension
      debtor[1].income.other_monthly_income
    else:
      debtor[1].income.income_amount_1 = 0
      debtor[1].income.overtime_pay_1 = 0
      debtor[1].income.tax_deduction = 0
      debtor[1].income.mandatory_contributions = 0
      debtor[1].income.voluntary_contributions = 0
      debtor[1].income.fund_loans = 0
      debtor[1].income.insurance = 0
      debtor[1].income.domestic_support = 0
      debtor[1].income.union_dues = 0
      debtor[1].income.other_deduction = 0
      debtor[1].income.net_rental_business = 0
      debtor[1].income.interest_and_dividends = 0
      debtor[1].income.family_support = 0
      debtor[1].income.unemployment = 0
      debtor[1].income.social_security = 0
      debtor[1].income.other_govt_assist = 0
      debtor[1].income.pension = 0
      debtor[1].income.other_monthly_income = 0


  #106j - Expenses
  debtor[0].expenses.rent_expense
  debtor[0].expenses.real_estate_taxes
  debtor[0].expenses.renters_insurance
  debtor[0].expenses.upkeep_expenses
  debtor[0].expenses.owners_dues
  debtor[0].expenses.additional_mortgage_payments
  debtor[0].expenses.util_electric
  debtor[0].expenses.util_garbage
  debtor[0].expenses.util_other
  debtor[0].expenses.house_supplies
  debtor[0].expenses.childcare
  debtor[0].expenses.clothing
  debtor[0].expenses.personal_care
  debtor[0].expenses.medical
  debtor[0].expenses.transportation
  debtor[0].expenses.entertainment
  debtor[0].expenses.charity
  debtor[0].expenses.life_insurance
  debtor[0].expenses.health_insurance
  debtor[0].expenses.vehicle_insurance
  debtor[0].expenses.other_insurance
  debtor[0].expenses.other_tax_specify
  debtor[0].expenses.other_tax_amount
  debtor[0].expenses.vehicle1_payments
  debtor[0].expenses.vehicle2_payments
  debtor[0].expenses.other_payment1_specify
  debtor[0].expenses.other_payment1_amount
  debtor[0].expenses.other_payment2_specify
  debtor[0].expenses.other_payment2_amount
  debtor[0].expenses.alimony
  debtor[0].expenses.other_support_specify
  debtor[0].expenses.other_support_amount
  debtor[0].expenses.change_in_expense


  #122a - Income and means test
  monthly_income.non_consumer_debts
  if monthly_income.non_consumer_debts == False and monthly_income.disabled_veteran == False and monthly_income.reservists == False:
    monthly_income.filing_status
    monthly_income.gross_wages1
    if monthly_income.filing_status == "Married and your spouse is filing with you.":
      monthly_income.gross_wages2
    monthly_income.reviewed


  case.payment_method
  if case.payment_method == '2':
    new_sub_section = {}
    new_sub_section["payment_installments"] = "Pay in Installments"
    new_main_section = {}
    new_main_section["case_det"] = "Case Detail"
    new_main_section["subsections"] = [new_sub_section]
    the_sections = nav.get_sections()
    the_sections[3] = new_main_section
  elif case.payment_method == '3':
    new_sub_section = {}
    new_sub_section["waive_fee"] = "Waive Fees"
    new_main_section = {}
    new_main_section["case_det"] = "Case Detail"
    new_main_section["subsections"] = [new_sub_section]
    the_sections = nav.get_sections()
    the_sections[3] = new_main_section
  case.has_previous_bankruptcy
  if case.has_previous_bankruptcy:
    case.previous_bankruptcy.there_are_any = True
    case.previous_bankruptcy.gather()
  case.has_pending_bankruptcy
  if case.has_pending_bankruptcy:
    case.pending_bankruptcy.there_are_any = True
    case.pending_bankruptcy.gather()
  case.rents_residence
  if case.rents_residence:
    case.eviction_judgement
    if case.eviction_judgement:
      landlord_name
  else:
    case.eviction_judgement = False
  if case.payment_method == '2':
    #Go through installments form
    installment_payment_intro
    payment.bankruptcy_code = '1'
    payment.payment_on_petition
    if payment.payment_on_petition == True:
      payment.initial_payment_amount
    payment.payments.gather()
    payment.complete = True
    installment_payment_end
  elif case.payment_method == '3':
    waive_fee_intro
    family.you
    family.has_spouce
    family.has_dependents
    family.dependent_count
    family.total_number
    family.you_income
    family.spouse_income
    family.assistance_income
    family.governmental_assistance
    family.income_change
    family.cannot_pay_explain
    family.average_monthly_expenses
    family.has_others_with_expenses
    family.has_other_expense_payers
    family.expense_changes
    family.complete = True
    prop.cash_on_hand
    prop.has_bank_accounts
    if prop.has_bank_accounts == True:
      prop.accounts.there_are_any = True
      prop.accounts.gather()
    prop.has_home
    if prop.has_home == True:
      prop.mortgage_street
      prop.mortgage_city
      prop.mortgage_state
      prop.mortgage_zip
      prop.mortgage_current_value
      prop.mortgage_amount_owed
      prop.has_other_real_estate
      if prop.has_other_real_estate == True:
        prop.other_mortgage_street
        prop.other_mortgage_city
        prop.other_mortgage_state
        prop.other_mortgage_zip
        prop.other_mortgage_current_value
        prop.other_mortgage_amount_owed
    prop.vehicles.gather()
    prop.other_asset_description
    prop.other_asset_value
    prop.other_asset_owed
    prop.owers.gather()
    if len(prop.owers) > 0:
      prop.will_receive_ower_payment
    prop.complete = True
    additional.paid_for_services
    additional.promised_for_services
    additional.behalf_for_services
    additional.bankruptcies.gather()
    additional.complete = True

  case.complete = True
  case_final
  business.has_business
  if business.has_business:
    business.business.there_are_any = True
    business.business.gather()
  #business.business_file_type
  business.complete = True
  business_final
  hazardous_property.has_property
  if hazardous_property.has_property:
    hazardous_property.property.there_are_any = True
    hazardous_property.property.gather()
  hazardous_property.complete = True
  hazard_final
  for debt in debtor:
    debt.counseling.counseling_type
    if debt.counseling.counseling_type == '4':
      debt.counseling.counseling_type_name = 'Not Required'
      debt.counseling.not_required_reason
    elif debt.counseling.counseling_type == '1':
      debt.counseling.counseling_type_name = 'Briefed w/ Certificate'
      debt.counseling.not_required_reason = 'NA'
    elif debt.counseling.counseling_type == '2':
      debt.counseling.counseling_type_name = 'Briefed wo/ Certificate'
      debt.counseling.not_required_reason = 'NA'
    elif debt.counseling.counseling_type == '3':
      debt.counseling.counseling_type_name = 'Exigent circumstances'
      debt.counseling.not_required_reason = 'NA'
  counseling_final
  reporting.reporting_type
  reporting.funds_for_creditors
  #reporting.creditor_estimate
  #reporting.assets_estimate
  #reporting.liabilities_estimate
  reporting.complete = True


  #if case.rents_residence:
  #  if case.eviction_judgement:
   #   attach_101a
  #    if wish_to_stay == True:
  #      attach_101b
  #if case.payment_method == '2':
   # form_103a_attach
  #if case.payment_method == '3':
  #  form_103b_attach
  #schedule_ab_attach
  #schedule_c_attach
  #schedule_d_attach
  #schedule_ef_attach
  #schedule_g_attach
  #schedule_h_attach
  #schedule_i_attach
  #schedule_j_attach
  #form_107_attach
  #form_108_attach
  #form_121_attach
  #form_122a_attach
  #print_101
  conclusion_screen
---
question: |
  Interview questions complete!
buttons:
  - Exit
section: fin
mandatory: True
---
code: |
  debtor[i].name.first
  debtor[i].name.last
  debtor[i].address.address
  debtor[i].address.city
  debtor[i].address.state
  debtor[i].address.zip
  debtor[i].address.unit #use for county
  debtor[i].alias.gather()
  debtor[i].district_info.is_current_district
  if not debtor[i].district_info.is_current_district:
    debtor[i].district_info.other_district_reason
  debtor[i].complete = True
---
code: |
  debtor[i].alias[j].first_name
  debtor[i].alias[j].last_name
  debtor[i].alias[j].business
  debtor[i].alias[j].complete = True
---
code: |
  debtor[i].ssn_info.no_ssn
  debtor[i].ssn_info.no_itin
  debtor.ssn_info.complete = True
---
code: |
  case.previous_bankruptcy[i].district
  case.previous_bankruptcy[i].when
  case.previous_bankruptcy[i].case_number
  case.previous_bankruptcy[i].complete = True
---
code: |
  case.pending_bankruptcy[i].debtor
  case.pending_bankruptcy[i].relationship
  case.pending_bankruptcy[i].district
  case.pending_bankruptcy[i].when
  case.pending_bankruptcy[i].case_number
  case.pending_bankruptcy[i].complete = True
---
code: |
  business.business[i].name
  business.business[i].street
  business.business[i].city
  business.business[i].state
  business.business[i].zip
  business.business[i].type
  if business.business[i].type == '1':
    business.business[i].type_name = 'Health Care Business'
  elif business.business[i].type == '2':
    business.business[i].type_name = 'Single Asset Real Estate'
  elif business.business[i].type == '3':
    business.business[i].type_name = 'Stockbroker'
  elif business.business[i].type == '4':
    business.business[i].type_name = 'Commodity Broker'
  elif business.business[i].type == '5':
    business.business[i].type_name = 'None of the above'
  business.business[i].complete = True
---
code: |
  hazardous_property.property[i].hazard
  hazardous_property.property[i].immediate_attention_reason
  hazardous_property.property[i].street
  hazardous_property.property[i].city
  hazardous_property.property[i].state
  hazardous_property.property[i].zip
  hazardous_property.property[i].complete = True
---
code: |
  payment.payments[i].amount
  payment.payments[i].proposed_date
  payment.payments[i].complete = True
---
code: |
  additional.bankruptcies[i].district
  additional.bankruptcies[i].when
  additional.bankruptcies[i].case_number
  additional.bankruptcies[i].complete = True
---
code: |
  prop.accounts[i].type
  prop.accounts[i].institution
  prop.accounts[i].amount
  prop.accounts[i].complete = True
---
code: |
  prop.vehicles[i].make
  prop.vehicles[i].model
  prop.vehicles[i].year
  prop.vehicles[i].milage
  prop.vehicles[i].current_value
  prop.vehicles[i].amount_owed
  prop.vehicles[i].complete = True
---
code: |
  prop.owers[i].name
  prop.owers[i].amount
  prop.owers[i].complete = True
---
code: |
  prop.interests[i].street
  prop.interests[i].city
  prop.interests[i].state
  prop.interests[i].zip
  prop.interests[i].county
  prop.interests[i].type
  #prop.interests[i].other_type
  prop.interests[i].who
  prop.interests[i].current_value
  prop.interests[i].current_owed_amount
  prop.interests[i].current_owned_value = prop.interests[i].current_value - prop.interests[i].current_owed_amount
  prop.interests[i].ownership_interest
  prop.interests[i].is_community_property
  prop.interests[i].other_info
  prop.interests[i].complete = True
---
code: |
  prop.ab_vehicles[i].make
  prop.ab_vehicles[i].model
  prop.ab_vehicles[i].year
  prop.ab_vehicles[i].milage
  prop.ab_vehicles[i].who
  prop.ab_vehicles[i].current_value
  if prop.ab_vehicles[i].has_loan:
    prop.ab_vehicles[i].current_owned_value = prop.ab_vehicles[i].current_value - prop.ab_vehicles[i].current_owed_amount
  else:
    prop.ab_vehicles[i].current_owned_value = prop.ab_vehicles[i].current_value
  prop.ab_vehicles[i].is_community_property
  prop.ab_vehicles[i].complete = True
---
code: |
  prop.ab_other_vehicles[i].make
  prop.ab_other_vehicles[i].model
  prop.ab_other_vehicles[i].year
  prop.ab_other_vehicles[i].who
  prop.ab_other_vehicles[i].other_info
  prop.ab_other_vehicles[i].current_value
  if prop.ab_other_vehicles[i].has_loan:
    prop.ab_other_vehicles[i].current_owned_value = prop.ab_other_vehicles[i].current_value - prop.ab_other_vehicles[i].current_owed_amount
  else:
    prop.ab_other_vehicles[i].current_owned_value = prop.ab_other_vehicles[i].current_value
  prop.ab_other_vehicles[i].is_community_property
  prop.ab_other_vehicles[i].complete = True
---
code: |
  prop.financial_assets.deposits[i].type
  prop.financial_assets.deposits[i].institution
  prop.financial_assets.deposits[i].amount
  prop.financial_assets.deposits[i].complete = True
---
code: |
  prop.financial_assets.bonds_and_stocks[i].institution
  prop.financial_assets.bonds_and_stocks[i].amount
  prop.financial_assets.bonds_and_stocks[i].complete = True
---
code: |
  prop.financial_assets.non_traded_stock[i].entity
  prop.financial_assets.non_traded_stock[i].ownership_percent
  prop.financial_assets.non_traded_stock[i].value
  prop.financial_assets.non_traded_stock[i].complete = True
---
code: |
  prop.financial_assets.corporate_bonds[i].issuer
  prop.financial_assets.corporate_bonds[i].amount
  prop.financial_assets.corporate_bonds[i].complete = True
---
code: |
  prop.financial_assets.retirement_accounts[i].type
  prop.financial_assets.retirement_accounts[i].institution
  prop.financial_assets.retirement_accounts[i].amount
  prop.financial_assets.retirement_accounts[i].complete = True
---
code: |
  prop.financial_assets.prepayments[i].type
  prop.financial_assets.prepayments[i].institution
  prop.financial_assets.prepayments[i].amount
  prop.financial_assets.prepayments[i].complete = True
---
code: |
  prop.financial_assets.annuities[i].issuer
  prop.financial_assets.annuities[i].amount
  prop.financial_assets.annuities[i].complete = True
---
code: |
  prop.financial_assets.edu_accounts[i].institution
  prop.financial_assets.edu_accounts[i].amount
  prop.financial_assets.edu_accounts[i].complete = True
---
code: |
  prop.exempt_property.properties[i].description
  prop.exempt_property.properties[i].value
  prop.exempt_property.properties[i].not_full_exemption
  prop.exempt_property.properties[i].complete = True
---
code: |
  prop.creditors[i].name
  prop.creditors[i].street
  prop.creditors[i].city
  prop.creditors[i].state
  prop.creditors[i].zip
  prop.creditors[i].who
  prop.creditors[i].community_debt
  prop.creditors[i].incurred_date
  prop.creditors[i].prop_description
  prop.creditors[i].contingent
  prop.creditors[i].unliquidated
  prop.creditors[i].disputed
  prop.creditors[i].agreement
  prop.creditors[i].lien
  prop.creditors[i].lawsuit
  prop.creditors[i].has_other_lien_type
  prop.creditors[i].account_number
  prop.creditors[i].claim_amount
  prop.creditors[i].collateral_value
  prop.creditors[i].notify.gather()
  prop.creditors[i].complete = True
---
code: |
  prop.creditors[i].notify[j].other_name
  prop.creditors[i].notify[j].other_street
  prop.creditors[i].notify[j].other_city
  prop.creditors[i].notify[j].other_state
  prop.creditors[i].notify[j].other_zip
  prop.creditors[i].notify[j].complete = True
---
code: |
  prop.priority_claims[i].name
  prop.priority_claims[i].street
  prop.priority_claims[i].city
  prop.priority_claims[i].state
  prop.priority_claims[i].zip
  prop.priority_claims[i].who
  prop.priority_claims[i].account_number
  prop.priority_claims[i].date_incurred
  prop.priority_claims[i].contingent
  prop.priority_claims[i].unliquified
  prop.priority_claims[i].disputed
  prop.priority_claims[i].type
  prop.priority_claims[i].total_claim
  prop.priority_claims[i].priority_amount
  prop.priority_claims[i].nonpriority_amount
  prop.priority_claims[i].complete = True
---
code: |
  prop.nonpriority_claims[i].name
  prop.nonpriority_claims[i].street
  prop.nonpriority_claims[i].city
  prop.nonpriority_claims[i].state
  prop.nonpriority_claims[i].zip
  prop.nonpriority_claims[i].who
  prop.nonpriority_claims[i].account_number
  prop.nonpriority_claims[i].date_incurred
  prop.nonpriority_claims[i].contingent
  prop.nonpriority_claims[i].unliquified
  prop.nonpriority_claims[i].disputed
  prop.nonpriority_claims[i].type
  prop.nonpriority_claims[i].total_claim
  prop.nonpriority_claims[i].complete = True
---
code: |
  prop.contracts_and_leases[i].name
  prop.contracts_and_leases[i].street
  prop.contracts_and_leases[i].city
  prop.contracts_and_leases[i].state
  prop.contracts_and_leases[i].zip
  prop.contracts_and_leases[i].description
  prop.contracts_and_leases[i].complete = True
---
code: |
  debtors.codebtors[i].name
  debtors.codebtors[i].street
  debtors.codebtors[i].city
  debtors.codebtors[i].state
  debtors.codebtors[i].zip
  debtors.codebtors[i].schedule
  debtors.codebtors[i].schedule_line
  debtors.codebtors[i].complete = True
---
code: |
  secured_claims[i].creditor_name
  secured_claims[i].property_description
  secured_claims[i].property_action
  secured_claims[i].complete = True
---
code: |
  personal_leases[i].name
  personal_leases[i].description
  personal_leases[i].lease_assumed
  personal_leases[i].complete = True
---
code: |
  debtor[i].expenses.dependents[j].relationship
  debtor[i].expenses.dependents[j].age
  debtor[i].expenses.dependents[j].same_residence
  debtor[i].expenses.dependents[j].complete = True
---
code: |
  financial_affairs.consumer_debt_payments[i].creditor_name
  financial_affairs.consumer_debt_payments[i].creditor_street
  financial_affairs.consumer_debt_payments[i].creditor_city
  financial_affairs.consumer_debt_payments[i].creditor_state
  financial_affairs.consumer_debt_payments[i].creditor_zip
  financial_affairs.consumer_debt_payments[i].total_amount
  financial_affairs.consumer_debt_payments[i].amount_owed
  financial_affairs.consumer_debt_payments[i].payment_for
  financial_affairs.consumer_debt_payments[i].complete = True
---
code: |
  financial_affairs.insider_payments[i].insider_name
  financial_affairs.insider_payments[i].street
  financial_affairs.insider_payments[i].city
  financial_affairs.insider_payments[i].state
  financial_affairs.insider_payments[i].zip
  financial_affairs.insider_payments[i].total_amount
  financial_affairs.insider_payments[i].amount_owed
  financial_affairs.insider_payments[i].reason
  financial_affairs.insider_payments[i].complete = True
---
code: |
  financial_affairs.insider_benefits[i].insider_name
  financial_affairs.insider_benefits[i].street
  financial_affairs.insider_benefits[i].city
  financial_affairs.insider_benefits[i].state
  financial_affairs.insider_benefits[i].zip
  financial_affairs.insider_benefits[i].total_amount
  financial_affairs.insider_benefits[i].amount_owed
  financial_affairs.insider_benefits[i].reason
  financial_affairs.insider_benefits[i].complete = True
---
code: |
  financial_affairs.lawsuits[i].case_title
  financial_affairs.lawsuits[i].case_number
  financial_affairs.lawsuits[i].nature_of_case
  financial_affairs.lawsuits[i].court_name
  financial_affairs.lawsuits[i].court_street
  financial_affairs.lawsuits[i].court_city
  financial_affairs.lawsuits[i].court_state
  financial_affairs.lawsuits[i].court_zip
  financial_affairs.lawsuits[i].case_status
  financial_affairs.lawsuits[i].payment_method = 2
  financial_affairs.lawsuits[i].complete = True
---
code: |
  financial_affairs.levies[i].creditor_name
  financial_affairs.levies[i].creditor_street
  financial_affairs.levies[i].creditor_city
  financial_affairs.levies[i].creditor_state
  financial_affairs.levies[i].creditor_zip
  financial_affairs.levies[i].property_description
  financial_affairs.levies[i].property_action
  financial_affairs.levies[i].property_value
  financial_affairs.levies[i].complete = True
---
code: |
  financial_affairs.gifts[i].person_name
  financial_affairs.gifts[i].street
  financial_affairs.gifts[i].city
  financial_affairs.gifts[i].state
  financial_affairs.gifts[i].zip
  financial_affairs.gifts[i].relationship
  financial_affairs.gifts[i].description
  financial_affairs.gifts[i].date_1
  financial_affairs.gifts[i].value_1
  financial_affairs.gifts[i].complete = True
---
code: |
  financial_affairs.bankruptcy_payments[i].name
  financial_affairs.bankruptcy_payments[i].street
  financial_affairs.bankruptcy_payments[i].city
  financial_affairs.bankruptcy_payments[i].state
  financial_affairs.bankruptcy_payments[i].zip
  financial_affairs.bankruptcy_payments[i].email_or_website
  financial_affairs.bankruptcy_payments[i].property_description
  financial_affairs.bankruptcy_payments[i].date_1
  financial_affairs.bankruptcy_payments[i].value_1
  financial_affairs.bankruptcy_payments[i].complete = True
---
code: |
  financial_affairs.other_transfers[i].name
  financial_affairs.other_transfers[i].street
  financial_affairs.other_transfers[i].city
  financial_affairs.other_transfers[i].state
  financial_affairs.other_transfers[i].zip
  financial_affairs.other_transfers[i].relationship
  financial_affairs.other_transfers[i].property_description
  financial_affairs.other_transfers[i].exchange_description
  financial_affairs.other_transfers[i].date
  financial_affairs.other_transfers[i].complete = True
---
code: |
  financial_affairs.instruments[i].name
  financial_affairs.instruments[i].street
  financial_affairs.instruments[i].city
  financial_affairs.instruments[i].state
  financial_affairs.instruments[i].zip
  financial_affairs.instruments[i].account_number
  financial_affairs.instruments[i].account_type
  financial_affairs.instruments[i].date
  financial_affairs.instruments[i].last_balance
  financial_affairs.instruments[i].complete = True
---
code: |
  financial_affairs.businesses[i].name
  financial_affairs.businesses[i].street
  financial_affairs.businesses[i].city
  financial_affairs.businesses[i].state
  financial_affairs.businesses[i].zip
  financial_affairs.businesses[i].nature
  financial_affairs.businesses[i].accountant
  financial_affairs.businesses[i].ein
  financial_affairs.businesses[i].from_date
  financial_affairs.businesses[i].to
  financial_affairs.businesses[i].complete = True
---
event: review_answers
question: |
  Revisit questions
subquestion: |
  Here are the questions you've answered so far. Click to revisit.
review:
  - note: |
      <br>
      ### Part 1: Identify Yourself
      % if len(debtor) > 0:
      **Debtors**
      ${ debtor_table }

      ${ debtor.add_action() }
      % endif

#Property
  - note: |
      <br>
      ### Property Interests
      % if len(prop.interests) > 0:
        ${ prop_interests_table }
        ${ prop.interests.add_action() }
      % else:
        No property interests currently listed.
        ${ prop.interests.add_action() }
      % endif
  - note: |
      <br>
      ### Vehicles
      % if len(prop.ab_vehicles) > 0:
        ${ prop_ab_vehicles_table }
        ${ prop.ab_vehicles.add_action() }
      % else:
        No vehicles currently listed.
        ${ prop.ab_vehicles.add_action() }
      % endif
  - note: |
      <br>
      ### Other Vehicles
      % if len(prop.ab_other_vehicles) > 0:
        ${ prop_ab_other_vehicles_table }
        ${ prop.ab_other_vehicles.add_action() }
      % else:
        No other vehicles currently listed
        ${ prop.ab_other_vehicles.add_action() }
      % endif
  - note: |
      <br>
      ### Personal and household items
  - Revisit: prop.has_household_goods
    button: |
      % if prop.has_household_goods:
        Owns any household goods and furnishings: Yes
      % else:
        Owns any household goods and furnishings: No
      % endif
  - Revisit: prop.household_goods_description
    button: |
      Household Goods Description:
      ${ prop.household_goods_description }

      Total Value: ${ prop.household_goods_value }
    show if: prop.has_household_goods
  - Revisit: prop.has_electronics
    button: |
      % if prop.has_electronics:
        Owns electronics of value: Yes
      % else:
        Owns electronics of value: No
      % endif
  - Revisit: prop.electronics_description
    button: |
      Electronics Description:
      ${ prop.electronics_description }

      Total Value: ${ prop.electronics_value }
    show if: prop.has_electronics
  - Revisit: prop.has_collectibles
    button: |
      % if prop.has_collectables:
        Owns collectables: Yes
      % else:
        Owns collectables: No
      % endif
  - Revisit: prop.collectibles_description
    button: |
      Collectables Description:
      ${ prop.collectibles_description }

      Total Value: ${ prop.collectibles_value }
    show if: prop.has_collectibles
  - Revisit: prop.has_hobby_equipment
    button: |
      % if prop.has_hobby_equipment:
        Owns Hobby Equipment: Yes
      % else:
        Owns Hobby Equipment: No
      % endif
  - Revisit: prop.hobby_equipment_description
    button: |
      Hobby Equipment Description:
      ${ prop.hobby_equipment_description }

      Total Value: ${ prop.hobby_equipment_value }
    show if: prop.has_hobby_equipment
  - Revisit: prop.has_firearms
    button: |
      % if prop.has_firearms:
        Owns Firearms: Yes
      % else:
        Owns Firearms: No
      % endif
  - Revisit: prop.firearms_description
    button: |
      Firearms Description:
      ${ prop.firearms_description }

      Total Value: ${ prop.firearms_value }
    show if: prop.has_firearms
  - Revisit: prop.has_clothes
    button: |
      % if prop.has_clothes:
        Owns Clothes of Value: Yes
      % else:
        Owns Clothes of Value: No
      % endif
  - Revisit: prop.clothes_description
    button: |
      Clothes Description:
      ${ prop.clothes_description }

      Total Value: ${ prop.clothes_value }
    show if: prop.has_clothes
  - Revisit: prop.has_jewlery
    button: |
      % if prop.has_jewlery:
        Owns Jewlery: Yes
      % else:
        Owns Jewlery: No
      % endif
  - Revisit: prop.jewlery_description
    button: |
      Jewlery Description:
      ${ prop.jewlery_description }

      Total Value: ${ prop.jewlery_value }
    show if: prop.has_jewlery
  - Revisit: prop.has_animals
    button: |
      % if prop.has_animals:
        Owns Animals: Yes
      % else:
        Owns Animals: No
      % endif
  - Revisit: prop.animal_description
    button: |
      Animals Description:
      ${ prop.animal_description }

      Total Value: ${ prop.animal_value }
    show if: prop.has_animals
  - Revisit: prop.has_other_household_items
    button: |
      % if prop.has_other_household_items:
        Has Other Household Items: Yes
      % else:
        Has Other Household Items: No
      % endif
  - Revisit: prop.other_household_items_description
    button: |
      Other Household Items:
      ${ prop.other_household_items_description }

      Total Value: ${ prop.other_household_items_value }
    show if: prop.has_other_household_items
  - Revisit: prop.has_cash
    button: |
      % if prop.has_cash:
        Has cash on hand: Yes
      % else:
        Has cash on hand: No
      % endif
  - Revisit: prop.cash_value
    button: |
      Cash Value: ${ prop.cash_value }
    show if: prop.has_cash
  - note: |
      <br>
      ### Financial Assets

      Deposits
      % if len(prop.financial_assets.deposits) > 0:
        ${ financial_deposits_table }
        ${ prop.financial_assets.deposits.add_action() }
      % else:
        No deposits currently listed.
        ${ prop.financial_assets.deposits.add_action() }
      % endif

      Bonds & Stocks
      % if len(prop.financial_assets.bonds_and_stocks) > 0:
        ${ financial_bonds_table }
        ${ prop.financial_assets.bonds_and_stocks.add_action() }
      % else:
        No Stocks & Bonds
        ${ prop.financial_assets.bonds_and_stocks.add_action() }
      % endif

      Non Traded Stock
      % if len(prop.financial_assets.non_traded_stock) > 0:
        ${ financial_non_traded_stock_table }
        ${ prop.financial_assets.non_traded_stock.add_action() }
      % else:
        No Non Traded Stock
        ${ prop.financial_assets.non_traded_stock.add_action() }
      % endif

      Corporate Bonds
      % if len(prop.financial_assets.corporate_bonds) > 0:
        ${ financial_corporate_bonds_table }
        ${ prop.financial_assets.corporate_bonds.add_action() }
      % else:
        No Corporate Bonds
        ${ prop.financial_assets.corporate_bonds.add_action() }
      % endif

      Retirement Accounts
      % if len(prop.financial_assets.retirement_accounts) > 0:
        ${ financial_retirement_accounts_table }
        ${ prop.financial_assets.retirement_accounts.add_action() }
      % else:
        No Retirement Accounts
        ${ prop.financial_assets.retirement_accounts.add_action() }
      % endif

      Prepayments
      % if len(prop.financial_assets.prepayments) > 0:
        ${ financial_prepayments_table }
        ${ prop.financial_assets.prepayments.add_action() }
      % else:
        No Prepayments
        ${ prop.financial_assets.prepayments.add_action() }
      % endif

      Annuities
      % if len(prop.financial_assets.annuities) > 0:
        ${ financial_annuities_table }
        ${ prop.financial_assets.annuities.add_action() }
      % else:
        No Annuities
        ${ prop.financial_assets.annuities.add_action() }
      % endif

      Education Accounts
      % if len(prop.financial_assets.edu_accounts) > 0:
        ${ financial_edu_account_table }
        ${ prop.financial_assets.edu_account.add_action() }
      % else:
        No Education Accounts
        ${ prop.financial_assets.edu_account.add_action() }
      % endif
  - Revisit: prop.financial_assets.has_future_property_interest
    button: |
      % if prop.financial_assets.has_future_property_interest:
        Has Future Property Interests: Yes
      % else:
        Has Future Property Interests: No
      % endif
  - Revisit: prop.financial_assets.future_property_interest_description
    button: |
      Future Property Interests:
      ${ prop.financial_assets.future_property_interest_description }

      Total Value: ${ prop.financial_assets.future_property_interest_value }
    show if: prop.financial_assets.has_future_property_interest
  - Revisit: prop.financial_assets.has_ip_interest
    button: |
      % if prop.financial_assets.has_ip_interest:
        Has IP Interests: Yes
      % else:
        Has IP Interests: No
      % endif
  - Revisit: prop.financial_assets.ip_interest_description
    button: |
      IP Interests:
      ${ prop.financial_assets.ip_interest_description }

      Total Value: ${ prop.financial_assets.ip_interest_value }
    show if: prop.financial_assets.has_ip_interest
  - Revisit: prop.financial_assets.has_intangible_interest
    button: |
      % if prop.financial_assets.has_intangible_interest:
        Has Intangible Interests: Yes
      % else:
        Has Intangible Interests: No
      % endif
  - Revisit: prop.financial_assets.intangible_interest_description
    button: |
      Intangible Interests:
      ${ prop.financial_assets.intangible_interest_description }

      Total Value: ${ prop.financial_assets.intangible_interest_value }
    show if: prop.financial_assets.has_intangible_interest
  - note: |
      ### Money or Property Owed
  - Revisit: prop.owed_property.has_tax_refund
    button: |
      % if prop.owed_property.has_tax_refund:
        Has Tax Refund: Yes
      % else:
        Has Tax Refund: No
      % endif
  - Revisit: prop.owed_property.tax_refund_description
    button: |
      Tax Refund:
      ${ prop.owed_property.tax_refund_description }

      Federal Value: ${ prop.owed_property.tax_refund_federal }
      State Value: ${ prop.owed_property.tax_refund_state }
      Local Value: ${ prop.owed_property.tax_refund_local }
    show if: prop.owed_property.has_tax_refund
  - Revisit: prop.owed_property.has_family_support
    button: |
      % if prop.owed_property.has_family_support:
        Has Family Support: Yes
      % else:
        Has Family Support: No
      % endif
  - Revisit: prop.owed_property.family_support_description
    button: |
      Family Support:
      ${ prop.owed_property.family_support_description }

      Alimony Amount: ${ prop.owed_property.family_support_alimony }
      Maintenance Amount: ${ prop.owed_property.family_support_maintenance }
      Support Amount: ${ prop.owed_property.family_support_support }
      Divorce Settlement Amount: ${ prop.owed_property.family_support_divorce }
      Property Settlement Amount: ${ prop.owed_property.family_support_settlment }
    show if: prop.owed_property.has_family_support
  - Revisit: prop.owed_property.has_other_amounts
    button: |
      % if prop.owed_property.has_other_amounts:
        Has other owed debts: Yes
      % else:
        Hos other owed debts: No
      % endif
  - Revisit: prop.owed_property.other_amounts_description
    button: |
      Other Amounts:
      ${ prop.owed_property.other_amounts_description }

      Total Value: ${ prop.owed_property.other_amounts_value }
    show if: prop.owed_property.has_other_amounts
  - Revisit: prop.owed_property.has_insurance_interest
    button: |
      % if prop.owed_property.has_insurance_interest:
        Has interest in insurance policies: Yes
      % else:
        Has interest in insurance policies: No
      % endif
  - Revisit: prop.owed_property.first_insurance_interest_name
    button: |
      % if prop.owed_property.first_insurance_interest_name:
        Insurance Interest 1:
        Name: ${ prop.owed_property.first_insurance_interest_name }
        Beneficiary: ${ prop.owed_property.first_insurance_beneficiary }
        Amount: ${ prop.owed_property.first_insurance_interest_amount }
      % endif

      % if prop.owed_property.second_insurance_interest_name:
        Insurance Interest 2:
        Name: ${ prop.owed_property.second_insurance_interest_name }
        Beneficiary: ${ prop.owed_property.second_insurance_beneficiary }
        Amount: ${ prop.owed_property.second_insurance_interest_amount }
      % endif

      % if prop.owed_property.third_insurance_interest_name:
        Insurance Interest 3:
        Name: ${ prop.owed_property.third_insurance_interest_name }
        Beneficiary: ${ prop.owed_property.third_insurance_beneficiary }
        Amount: ${ prop.owed_property.third_insurance_interest_amount }
      % endif
  - Revisit: prop.owed_property.has_trust
    button: |
      % if prop.owed_property.has_trust:
        Has interest in trust: Yes
      % else:
        Has interest in trust: No
      % endif
  - Revisit: prop.owed_property.trust_description
    button: |
      Trust Description
      ${ prop.owed_property.trust_description }

      Trust Value: ${ prop.owed_property.trust_amount }
    show if: prop.owed_property.has_trust
  - Revisit: prop.owed_property.has_third_party
    button: |
      % if prop.owed_property.has_third_party:
        Has claims against third parties: Yes
      % else:
        Has claims against third parties: No
      % endif
  - Revisit: prop.owed_property.third_party_description
    button: |
      Third Party Claims:
      ${ prop.owed_property.third_party_description }

      Total Value: ${ prop.owed_property.third_party_amount }
    show if: prop.owed_property.has_third_party
  - Revisit: prop.owed_property.has_contingent_claims
    button: |
      % if prop.owed_property.has_contingent_claims:
        Has other contingent claims: Yes
      % else:
        Has other contingent claims: No
      % endif
  - Revisit: prop.owed_property.contingent_claims_description
    button: |
      Contingent Claims:
      ${ prop.owed_property.contingent_claims_description }

      Total Value: ${ prop.owed_property.contingent_claims_amount }
    show if: prop.owed_property.has_contingent_claims
  - Revisit: prop.owed_property.has_other_assets
    button: |
      % if prop.owed_property.has_other_assets:
        Has other assets: Yes
      % else:
        Has other assets: No
      % endif
  - Revisit: prop.owed_property.other_assets_description
    button: |
      Other Assets:
      ${ prop.owed_property.other_assets_description }

      Total Value: ${ prop.owed_property.other_assets_amount }
    show if: prop.owed_property.has_other_assets
  - note: |
      <br>
      ### Business Related Property
  - Revisit: prop.business_property.has_property
    button: |
      % if prop.business_property.has_property:
        Has business property: Yes
      % else:
        Has business property: No
      % endif
  - Revisit: prop.business_property.has_ar
    button: |
      % if prop.business_property.has_ar:
        Business has Accounts Receivables: Yes
        ${ prop.business_property.ar_description }
        Total Value: ${ prop.business_property.ar_amount }
      % else:
        Business has Accounts Receivables: No
      % endif

      % if prop.business_property.has_equipment:
        Business has office equipment, furnishings, and supplies: Yes
        ${ prop.business_property.equipment_description }
        Total Value: ${ prop.business_property.equipment_amount }
      % else:
        Business has office equipment, furnishings, and supplies: No
      % endif

      % if prop.business_property.has_machinery:
        Business has machinery: Yes
        ${ prop.business_property.machinery_description }
        Total Value: ${ prop.business_property.machinery_amount }
      % else:
        Business has machinery: No
      % endif

      % if prop.business_property.has_inventory:
        Business has inventory: Yes
        ${ prop.business_property.inventory_description }
        Total Value: ${ prop.business_property.inventory_amount }
      % else:
        Business has inventory: No
      % endif

      % if prop.business_property.has_lists:
        Business has lists: Yes
        ${ prop.business_property.lists_description }
        Total Value: ${ prop.business_property.lists_amount }
      % else:
        Business has lists: No
      % endif
  - note: |
      <br>
      ### Farm or commercial fishing related property
  - Revisit: prop.farming_property.has_property
    button: |
      % if prop.farming_property.has_property:
        Has farming property: Yes
      % else:
        Has farming property: No
      % endif
  - Revisit: prop.farming_property.has_animals
    button: |
      % if prop.farming_property.has_animals:
        Farm has animals: Yes
        ${ prop.farming_property.animal_description }
        Total Value: ${ prop.farming_property.animal_amount }
      % else:
        Farm has animals: No
      % endif

      % if prop.farming_property.has_crops:
        Farm has crops: Yes
        ${ prop.farming_property.crop_description }
        Total Value: ${ prop.farming_property.crop_amount }
      % else:
        Farm has crops: No
      % endif

      % if prop.farming_property.has_equipment:
        Farm has equipment: Yes
        ${ prop.farming_property.equipment_description }
        Total Value: ${ prop.farming_property.equipment_amount }
      % else:
        Farm has equipment: No
      % endif

      % if prop.farming_property.has_supplies:
        Farm has supplies: Yes
        ${ prop.farming_property.supplies_description }
        Total Value: ${ prop.farming_property.supplies_amount }
      % else:
        Farm has supplies: No
      % endif

      % if prop.farming_property.has_commercial:
        Farm has commercial fishing: Yes
        ${ prop.farming_property.commercial_description }
        Total Value: ${ prop.farming_property.commercial_amount }
      % else:
        Farm has commercial fishing: No
      % endif
    show if: prop.farming_property.has_property
  - Revisit: prop.has_other_prop
    button: |
      % if prop.has_other_prop:
        Has other property: Yes
        ${ prop.other_prop_description }
        Total Value: ${ prop.other_prop_value }
      % else:
        Has other property: No
      % endif

#exempt property
  - note: |
      <br>
      ### Exempt Property
      % if len(prop.exempt_property.properties) > 0:
        ${ prop_exempt_table }
        ${ prop.exempt_property.properties.add_action() }
      % else:
        No exempt property listed
        ${ prop.exempt_property.properties.add_action() }
      % endif
  - Revisit: prop.exempt_property.claim_homestead_exemption
    button: |
      % if prop.exempt_property.claim_homestead_exemption:
        Claiming Homestead Exemption: Yes
      % else:
        Claiming Homestead Exemption: No
      % endif
      % if prop.exempt_property.homestead_within_timeframe:
        Aquired within 1,215 days: Yes
      % else:
        Aquired within 1,215 days: No
      % endif
#Secured Claims
  - note: |
      <br>
      ### Secured Claims
      % if len(prop.creditors) > 0:
        ${ prop_creditors_table }
        ${ prop.creditors.add_action() }
      % else:
        No Secured Claims listed
        ${ prop.creditors.add_action() }
      % endif

#Unsecured Claims
  - note: |
      <br>
      ### Priority Unsecured Claims
      % if len(prop.priority_claims) > 0:
        ${ prop_priority_claims_table }
        ${ prop.priority_claims.add_action() }
      % else:
        No priority claims listed
        ${ prop.priority_claims.add_action() }
      % endif
      <br>
      ### Non-priority Unsecured Claims
      % if len(prop.nonpriority_claims) > 0:
        ${ prop_nonpriority_claims_table }
        ${ prop.nonpriority_claims.add_action() }
      % else:
        No priority claims listed
        ${ prop.nonpriority_claims.add_action() }
      % endif

#Executory contracts or unexpired leases
  - note: |
      <br>
      ### Executory contracts or unexpired leases
      % if len(prop.contracts_and_leases) > 0:
        ${ prop_contracts_and_leases_table }
        ${ prop.contracts_and_leases.add_action() }
      % else:
        No executory contracts or unexpired leases
        ${ prop.contracts_and_leases.add_action() }
      % endif

#Codebtors
  - note: |
      <br>
      ### Codebtors
      % if len(debtors.codebtors) > 0:
        ${ codebtors_table }
        ${ debtors.codebtors.add_action() }
      % else:
        No codebtors
        ${ debtors.codebtors.add_action() }
      % endif
  - Revisit: debtors.community_property
    button: |
      % if debtors.community_property:
        Lived in community property state: Yes
      % else:
        Lived in community property state: No
      % endif

      % if debtors.had_spouce:
        Had spouse: Yes
        Spouse Name: ${ debtors.spouse_name }
        State: ${ debtors.spouse_state }
        Street: ${ debtors.spouse_street }
        City: ${ debtors.spouse_city }
        Zip: ${ debtors.spouse_zip }
      % else:
        Had spouse: No
      % endif

#employment info
  - note: |
      <br>
      ### Your employement
      Employment Status: ${ debtor[0].income.employment }
      % if debtor[0].income.employment:
        Occupation: ${ debtor[0].income.occupation }
        Employer: ${ debtor[0].income.employer }
        Employment Length: ${ debtor[0].income.employment_length }

        Employer Address
        Street: ${ debtor[0].income.employer_street }
        City: ${ debtor[0].income.employer_city }
        State: ${ debtor[0].income.employer_state }
        Zip: ${ debtor[0].income.employer_zip }
      % endif

      ### Income
      Monthly gross wages: ${ debtor[0].income.income_amount }
      Overtime pay: ${ debtor[0].income.overtime_pay }
      Tax Deduction: ${ debtor[0].income.tax_deduction }
      Mandatory Contributions: ${ debtor[0].income.mandatory_contributions }
      Voluntary Contributions: ${ debtor[0].income.voluntary_contributions }
      Retirement Fund Loans: ${ debtor[0].income.fund_loans }
      Insurance: ${ debtor[0].income.insurance }
      Domestic support obligations: ${ debtor[0].income.domestic_support }
      Union dues: ${ debtor[0].income.union_dues }

      % if debtor[0].income.other_deduction:
        Has other deductions: Yes
        Other deductions:
        ${ debtor[0].income.specify_other_deduction }
        Other deductions Value: ${ debtor[0].income.other_deduction_amount }
      % else:
        Has other deductions: No
      % endif

      Regular Income
      Rental Property Income: ${ debtor[0].income.net_rental_business }
      Interest and dividends: ${ debtor[0].income.interest_and_dividends }
      Family Support: ${ debtor[0].income.family_support }
      Unemployment: ${ debtor[0].income.unemployment }
      Social Security: ${ debtor[0].income.social_security }
      Other Govt Assistance: ${ debtor[0].income.other_govt_assist }
      Pension: ${ debtor[0].income.pension }

      Other Income
      % if debtor[0].income.other_monthly_income:
        Has other monthly income: Yes
        Income Type:
        ${ debtor[0].income.specify_monthly_income }
        Income Amount: ${ debtor[0].income.other_monthly_amount }
      % else:
        Has other monthly income: No
      % endif
  - note: |
      <br>
      ### Other Debtor
      Employment Status: ${ debtor[1].income.employment }
      % if debtor[1].income.employment:
        Occupation: ${ debtor[1].income.occupation }
        Employer: ${ debtor[1].income.employer }
        Employment Length: ${ debtor[1].income.employment_length }

        Employer Address
        Street: ${ debtor[1].income.employer_street }
        City: ${ debtor[1].income.employer_city }
        State: ${ debtor[1].income.employer_state }
        Zip: ${ debtor[1].income.employer_zip }
      % endif

      ### Income
      Monthly gross wages: ${ debtor[1].income.income_amount }
      Overtime pay: ${ debtor[1].income.overtime_pay }
      Tax Deduction: ${ debtor[1].income.tax_deduction }
      Mandatory Contributions: ${ debtor[1].income.mandatory_contributions }
      Voluntary Contributions: ${ debtor[1].income.voluntary_contributions }
      Retirement Fund Loans: ${ debtor[1].income.fund_loans }
      Insurance: ${ debtor[1].income.insurance }
      Domestic support obligations: ${ debtor[1].income.domestic_support }
      Union dues: ${ debtor[1].income.union_dues }

      % if debtor[1].income.other_deduction:
        Has other deductions: Yes
        Other deductions:
        ${ debtor[1].income.specify_other_deduction }
        Other deductions Value: ${ debtor[1].income.other_deduction_amount }
      % else:
        Has other deductions: No
      % endif

      Regular Income
      Rental Property Income: ${ debtor[1].income.net_rental_business }
      Interest and dividends: ${ debtor[1].income.interest_and_dividends }
      Family Support: ${ debtor[1].income.family_support }
      Unemployment: ${ debtor[1].income.unemployment }
      Social Security: ${ debtor[1].income.social_security }
      Other Govt Assistance: ${ debtor[1].income.other_govt_assist }
      Pension: ${ debtor[1].income.pension }

      Other Income
      % if debtor[1].income.other_monthly_income:
        Has other monthly income: Yes
        Income Type:
        ${ debtor[1].income.specify_monthly_income }
        Income Amount: ${ debtor[1].income.other_monthly_amount }
      % else:
        Has other monthly income: No
      % endif

    show if: debtor[1]

#expenses
  - Revisit: debtor[0].expenses.joint_case
    button: |
      % if debtor[0].expenses.joint_case:
        Joint Case: Yes
        % if debtor[0].expenses.other_household:
        Separate Households: Yes
        % else:
        Separate Households: No
        % endif
      % else:
        Joint Case: No
      % endif
      % if len(debtor[0].expenses.dependents) > 0:
        Has dependents: Yes
        ${ dependents_table }
        ${ debtor[0].expenses.dependents.add_action() }
      % else:
        Has dependents: No
        ${ debtor[0].expenses.dependents.add_action() }
      % endif
  - Revisit: debtor[0].expenses.rent_expense
    button: |
      Rental or home expenses: ${ debtor[0].expenses.rent_expense }
      Real estate taxes: ${ debtor[0].expenses.real_estate_taxes }
      Property Insurance: ${ debtor[0].expenses.renters_insurance }
      Home Maintenance: ${ debtor[0].expenses.upkeep_expenses }
      Homeowns Dues: ${ debtor[0].expenses.owners_dues }
      Additional Mortgage Payments: ${ debtor[0].expenses.additional_mortgage_payments }

      Utilities
      Electicity, heat, natural gas: ${ debtor[0].expenses.util_electric }
      Water, sewer, garbage collection: ${ debtor[0].expenses.util_garbage }
      Telephone, internet, cable: ${ debtor[0].expenses.telephone }

      % if debtor[0].expenses.util_other:
        Has other utility expenses: Yes
        Explain: ${ debtor[0].expenses.util_other_specify }
        Amount: ${ debtor[0].expenses.util_other_amount }
      % else:
        Has other utility expenses: No
      % endif

      Food and housekeeping supplies: ${ debtor[0].expenses.house_supplies }
      Childcare: ${ debtor[0].expenses.childcare }
      Clothing: ${ debtor[0].expenses.clothing }
      Personal Care: ${ debtor[0].expenses.personal_care }
      Medical and Dental: ${ debtor[0].expenses.medical }
      Entertainment: ${ debtor[0].expenses.entertainment }
      Charitable Contributions: ${ debtor[0].expenses.charity }

      Insurance
      Life insurance: ${ debtor[0].expenses.life_insurance }
      Health insurance: ${ debtor[0].expenses.health_insurance }
      Vehicle insurance: ${ debtor[0].expenses.vehicle_insurance }
      % if debtor[0].expenses.other_insurance:
        Has other insurance: Yes
        Explain: ${ debtor[0].expenses.other_insurance_specify }
        Amount: ${ debtor[0].expenses.other_insurance_amount }
      % else:
        Has other insurance: No
      % endif

      Taxes
      ${ debtor[0].expenses.other_tax_specify }
      Amount: ${ debtor[0].expenses.other_tax_amount }

      Installment or lease payments
      Car payment 1: ${ debtor[0].expenses.vehicle1_payments }
      Car payment 2: ${ debtor[0].expenses.vehicle2_payments }
      Other payment 1:
      ${ debtor[0].expenses.other_payment1_specify }
      Amount: ${ debtor[0].expenses.other_payment1_amount }
      Other payment 2:
      ${ debtor[0].expenses.other_payment2_specify }
      Amount: ${ debtor[0].expenses.other_payment2_amount }

      Payments of alimony: ${ debtor[0].expenses.alimony }

      Other types of support payments:
      ${ debtor[0].expenses.other_support_specify }
      Amount: ${ debtor[0].expenses.other_support_amount }

  - Revisit: debtor[0].expenses.change_in_expense
    button: |
      % if debtor[0].expenses.change_in_expense:
        Increase or decrease of expenses: Yes
        Explain: ${ debtor[0].expenses.change_explainer }
      % else:
        Increase or decrease of expenses: No
      % endif

#statement of intent
  - note: |
     <br>
     Secured Claims
     % if len(secured_claims) > 0:
      ${ secured_claims_table }
      ${ secured_claims.add_action() }
     % else:
      No Secured Claims Listed
      ${ secured_claims.add_action() }
     % endif
  - note: |
     Personal Leases
     % if len(personal_leases) > 0:
      ${ personal_leases_table }
      ${ personal_leases.add_action() }
     % else:
      No Personal Leases Listed
      ${ personal_leases.add_action() }
     % endif

# Monthly income
  - Revisit: monthly_income.filing_status
    button: |
      Marital and Filing Status: monthly_income.filing_status
  - Revisit: monthly_income.gross_wages1
    button: |
      Income Type     | Amount
      ----------------|-------
      Gross wages.    | ${ monthly_income.gross_wages1 }
      Alimony & Maint.| ${ monthly_income.alimony1 }
      Outside source. | ${ monthly_income.other_income1 }
      Business        |
      Gross receipts  | ${ monthly_income.business_gross_receipts1 }
      Operating Exp.  | ${ monthly_income.business_operating_expenses1 }
      Rental & Prop.  |
      Gross receipts  | ${ monthly_income.rental_gross_receipts1 }
      Operating Exp.  | ${ monthly_income.rental_operating_expenses1 }
                      |
      Interest & Divd | ${ monthly_income.interest1 }
      Unemployment    | ${ monthly_income.unemployment1 }
      SSA Comp        | ${ monthly_income.social1 }
      Spouse SSA      | ${ monthly_income.spouse_social1 }
      Pension         | ${ monthly_income.pension1 }
      Source 1        | ${ monthly_income.source1_amount_1 }
      Source 2        | ${ monthly_income.source2_amount_1 }
  - Revisit: monthly_income.gross_wages2
    button: |
      Income Type     | Amount
      ----------------|-------
      Gross wages.    | ${ monthly_income.gross_wages2 }
      Alimony & Maint.| ${ monthly_income.alimony2 }
      Outside source. | ${ monthly_income.other_income2 }
      Business        |
      Gross receipts  | ${ monthly_income.business_gross_receipts2 }
      Operating Exp.  | ${ monthly_income.business_operating_expenses2 }
      Rental & Prop.  |
      Gross receipts  | ${ monthly_income.rental_gross_receipts2 }
      Operating Exp.  | ${ monthly_income.rental_operating_expenses2 }
                      |
      Interest & Divd | ${ monthly_income.interest2 }
      Unemployment    | ${ monthly_income.unemployment2 }
      SSA Comp        | ${ monthly_income.social2 }
      Spouse SSA      | ${ monthly_income.spouse_social2 }
      Pension         | ${ monthly_income.pension2 }
      Source 1        | ${ monthly_income.source1_amount_2 }
      Source 2        | ${ monthly_income.source2_amount_2 }
    show if: len(debtor) > 2

#case
  - note: |
      <br>
      ### Part 2: Tell the Court About Your Bankruptcy Case
  - Revisit: case.payment_method
    button: |
        % if case.payment_method == '1':
          **Payment Method:** Pay entire fee
        % elif case.payment_method == '2':
          **Payment Method:** Pay in installments
        % elif case.payment_method == '3':
          **Payment Method:** Request to have fee waived
        % endif
  - Revisit: case.rents_residence
    button: |
      % if case.rents_residence:
        **Renter:** Yes
      % else:
        **Renter:** No
      % endif
  - Revisit: case.has_previous_bankruptcy
    button: |
      % if case.has_previous_bankruptcy:
        **Previous Bankruptcy:** Yes
      % else:
        **Previous Bankruptcy:** No
      % endif
  - note: |
      % if case.has_previous_bankruptcy:
        **Previous Bankruptcies** <br>
        % if len(case.previous_bankruptcy) > 0:
          ${ previous_bankruptcy_table }
        % endif
        ${ case.previous_bankruptcy.add_action() }
      % endif
  - Revisit: case.has_pending_bankruptcy
    button: |
      % if case.has_pending_bankruptcy:
        **Pending Bankruptcy:** Yes
      % else:
        **Pending Bankruptcy:** No
      % endif
  - note: |
      % if case.has_pending_bankruptcy:
        **Pending Bankruptcies** <br>
        % if len(case.pending_bankruptcy) > 0:
          ${ pending_bankruptcy_table }
        % endif
        ${ case.pending_bankruptcy.add_action() }
      % endif
  - note: |
      <br>
      ### Part 3: Report About Any Business You Own as a Sole Proprietor
  - Revisit: business.has_business
    button: |
      % if business.has_business:
        **Business(s):** Yes
      % else:
        **Business(s):** No
      % endif
  - note: |
      % if business.has_business:
        **Business(s)** <br>
        % if len(business.business) > 0:
          ${ business_table }
        % endif
        ${ business.business.add_action() }
      % endif
  - note: |
      <br>
      ### Part 4: Report if You Own or Have Any Hazardous Property or Any Property That Needs Immediate Attention
  - Revisit: hazardous_property.has_property
    button: |
      % if hazardous_property.has_property:
        **Hazardous Property:** Yes
      % else:
        **Hazardous Property:** No
      %endif
  - note: |
      % if hazardous_property.has_property:
        **Hazardous Property** <br>
        ${ hazardous_property_table }

        ${ hazardous_property.property.add_action() }
      % endif
  - note: |
      <br>
      ### Part 5: Explain Your Efforts to Receive a Briefing About Credit Counseling
  - note: |
      ${ counseling_table }
  - note: |
      <br>
      ### Part 6: Answer These Questions for Reporting Purposes
  - Revisit: reporting.reporting_type
    button: |
      % if reporting.reporting_type == '1':
        **Primary Debt Type:** Consumer
      % elif reporting.reporting_type == '2':
        **Primary Debt Type:** Business
      % elif reporting.reporting_type == '3':
        **Primary Debt Type:** Custom (${ reporting.custom_type })
      % endif
  - Revisit: reporting.funds_for_creditors
    button: |
      % if reporting.funds_for_creditors:
        **Will there be funds for creditors?** Yes
      % else:
        **Will there be funds for creditors?** No
      % endif
  - Revisit: reporting.creditor_estimate
    button: |
      **Estimated creditor count:** ${ reporting.creditor_estimate }
  - Revisit: reporting.assets_estimate
    button: |
      **Estimated asset amount:** ${ reporting.assets_estimate }
  - Revisit: reporting.liabilities_estimate
    button: |
      **Estimated liability amount:** ${ reporting.liabilities_estimate }
