---
modules:
  - docassemble.BankruptcyClinic.objects
---
id: schedule_ab_property_intro
event: property_intro
section: schedule_ab
question: |
  Please tell the court about your property.
subquestion: |
  In each category, separately list and describe items. List an asset only once. If an asset fits in more than one category, list the asset in the category where you think it fits best. If two married people are filing together, both are equally responsible for supplying correct information.

continue button field: property_intro
---
table: prop_interests_table
rows: prop.interests
columns:
  - First Name: row_item.street
  - Property Type: row_item.type
  - Who has interest: row_item.who
  - Current Value: row_item.current_value
  - Current owned value: row_item.current_owned_value
edit:
  - street
  - type
  - who
  - current_value
  - current_owned_value
---
id: real_property_interests_any_exist
section: schedule_ab
question: |
  Do you own or have any legal or equitable interest in any residence, building, land, or similar property?
yesno: prop.interests.there_are_any
---
id: real_property_interests_add_another
section: schedule_ab
question: |
  Do you have more interests to add?
yesno: prop.interests.there_is_another
under: |
  ${ prop_interests_table }
---
reconsider: True
code: |
#
  #exemptions = []
  #def tbl_data():
  #  # Laws
  #  homestead_law = 'Homestead (Neb. Rev. Stat. §§ 40-101 - 40-118)'
  #  homestead_proceeds_law = 'Homestead, proceeds of sale (Neb. Rev. Stat. § 40-116)'
  #  motor_vehicle_law = 'Motor vehicle (Neb. Rev. Stat. § 25-1556(1)(e))'
  #  household_goods_law = 'Household goods (Neb. Rev. Stat. § 25-1556(1)(c))'
  #  wildcard_law = 'Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))'
  #  clothing_law = 'Clothing (Neb. Rev. Stat. § 25-1556(1)(b))'
  #  posessions_law = 'Immediate personal possessions (Neb. Rev. Stat. § 25-1556(1)(a))'
  #  health_aids_law = 'Health Aids (Neb. Rev. Stat. § 25-1556(1)(f))'
  #  health_savings_law = 'Health Savings (Neb. Rev. Stat. § 8-1,131(2)(b))'
  #  tools_law = 'Tools of the trade (Neb. Rev. Stat. § 25-1556(1)(d))'
  #  retirement_law = 'Retirement accounts (Neb. Rev. Stat. § 25-1563.01)'
  #  wages_law = 'Wages (Neb. Rev. Stat. § 25-1558)'
  #  public_benefits_law = 'Public Benefits (Neb. Rev. Stat. § 68-148)'
  #  earned_income_law = 'Earned Income Tax Credit (Neb Rev Stat 25-1553)'
  #  life_insurance_law = 'Life insurance proceeds (Neb. Rev. Stat. § 44-371)'
  #  secured_settlement_law = 'Structured settlement (Neb. Rev. Stat. § 25-1563.02)'
  #  workers_comp_law = 'Workers Compensation (Neb. Rev. Stat. § 48-149)'
  #  unemployment_law = 'Unemployment (Neb. Rev. Stat. § 48-647)'
  #  college_savings_law = 'College Savings Plan (Neb. Rev. Stat. § 85-1809)'
  #  student_loan_law = 'Student Loan (20 U.S.C. § 1095a(d))'
  #  social_security_law = 'Social Security (42 U.S.C. § 407)'
  #  va_law = 'VA Benefits (38 U.S.C. § 5301(a))'
  #  unknown_law = 'Unknown law'
#
  #  # Limits
  #  # Limits of value 0 are unlimited
  #  homestead_limit = 120000
  #  homestead_proceeds_limit = 60000
  #  motor_vehicle_limit = 5000
  #  household_goods_limit = 3000
  #  wildcard_limit = 5000
  #  clothing_limit = '∞'
  #  posessions_limit = '∞'
  #  health_aids_limit = '∞'
  #  health_savings_limit = 25000
  #  tools_limit = 5000
  #  retirement_limit = '∞'
  #  wages_limit = '∞'
  #  public_benefits_limit = '∞'
  #  earned_income_limit = '∞'
  #  life_insurance_limit = 100000
  #  secured_settlement_limit = '∞'
  #  workers_comp_limit = '∞'
  #  unemployment_limit = '∞'
  #  college_savings_limit = '∞'
  #  student_loan_limit = '∞'
  #  social_security_limit = '∞'
  #  va_limit = '∞'
  #  unknown_limit = '∞'
#
  #  #Exemption totals
  #  homestead_amount = 0
  #  homestead_proceeds_amount = 0
  #  motor_vehicle_amount = 0
  #  household_goods_amount = 0
  #  wildcard_exemption_amount = 0
  #  clothing_amount = 0
  #  possessions_amount = 0
  #  health_aids_amount = 0
  #  health_savings_amount = 0
  #  tools_amount = 0
  #  retirement_amount = 0
  #  wages_amount = 0
  #  public_benefits_amount = 0
  #  earned_income_amount = 0
  #  life_insurance_amount = 0
  #  secured_settlement_amount = 0
  #  workers_comp_amount = 0
  #  unemployment_amount = 0
  #  college_savings_amount = 0
  #  student_loan_amount = 0
  #  social_security_amount = 0
  #  va_amount = 0
  #  unknown_amount = 0
#
#
  #  for interest in prop.interests.elements:
  #    temp = {}
  #    temp['exemption_amount'] = interest.attr('exemption_value')
  #    temp['exemption_laws'] = interest.attr('exemption_laws')
  #    temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #    temp['sub_100'] = interest.attr('claiming_sub_100')
  #    if interest.attr('has_loan'):
  #      temp['current_owned_value'] = interest.attr('current_value') - interest.attr('current_owed_amount')
  #    else:
  #      temp['current_owned_value'] = interest.attr('current_value')
  #    temp['is_claiming_exemption'] = interest.attr('is_claiming_exemption')
#
  #    exemptions.append(temp)
#
  #    if interest.attr('exemption_value_2'):
  #      temp = {}
  #      temp['exemption_amount'] = interest.attr('exemption_value_2')
  #      temp['exemption_laws'] = interest.attr('exemption_laws_2')
  #      temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #      temp['sub_100'] = interest.attr('claiming_sub_100')
  #      if interest.attr('has_loan'):
  #        temp['current_owned_value'] = interest.attr('current_value') - interest.attr('current_owed_amount')
  #      else:
  #        temp['current_owned_value'] = interest.attr('current_value')
  #      temp['is_claiming_exemption'] = interest.attr('is_claiming_exemption')
#
  #      exemptions.append(temp)
#
#
  #  for interest in prop.ab_vehicles.elements:
  #    temp = {}
  #    temp['exemption_amount'] = interest.attr('exemption_value')
  #    temp['exemption_laws'] = interest.attr('exemption_laws')
  #    temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #    temp['sub_100'] = interest.attr('claiming_sub_100')
  #    if interest.attr('has_loan'):
  #      temp['current_owned_value'] = interest.attr('current_value') - interest.attr('current_owed_amount')
  #    else:
  #      temp['current_owned_value'] = interest.attr('current_value')
  #    temp['is_claiming_exemption'] = interest.attr('is_claiming_exemption')
  #    exemptions.append(temp)
#
  #    if interest.attr('exemption_value_2'):
  #      temp = {}
  #      temp['exemption_amount'] = interest.attr('exemption_value_2')
  #      temp['exemption_laws'] = interest.attr('exemption_laws_2')
  #      temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #      temp['sub_100'] = interest.attr('claiming_sub_100')
  #      if interest.attr('has_loan'):
  #        temp['current_owned_value'] = interest.attr('current_value') - interest.attr('current_owed_amount')
  #      else:
  #        temp['current_owned_value'] = interest.attr('current_value')
  #      temp['is_claiming_exemption'] = interest.attr('is_claiming_exemption')
  #      exemptions.append(temp)
#
#
  #  for interest in prop.ab_other_vehicles.elements:
  #    temp = {}
  #    temp['exemption_amount'] = interest.attr('exemption_value')
  #    temp['exemption_laws'] = interest.attr('exemption_laws')
  #    temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #    temp['sub_100'] = interest.attr('claiming_sub_100')
  #    if interest.attr('has_loan'):
  #      temp['current_owned_value'] = interest.attr('current_value') - interest.attr('current_owed_amount')
  #    else:
  #      temp['current_owned_value'] = interest.attr('current_value')
  #    temp['is_claiming_exemption'] = interest.attr('is_claiming_exemption')
  #    exemptions.append(temp)
#
  #    if interest.attr('exemption_value_2'):
  #      temp = {}
  #      temp['exemption_amount'] = interest.attr('exemption_value')
  #      temp['exemption_laws'] = interest.attr('exemption_laws')
  #      temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #      temp['sub_100'] = interest.attr('claiming_sub_100')
  #      if interest.attr('has_loan'):
  #        temp['current_owned_value'] = interest.attr('current_value') - interest.attr('current_owed_amount')
  #      else:
  #        temp['current_owned_value'] = interest.attr('current_value')
  #      temp['is_claiming_exemption'] = interest.attr('is_claiming_exemption')
  #      exemptions.append(temp)
#
#
  #  household_goods_interest = {}
  #  if prop.attr('household_goods_is_claiming_exemption'):
  #    household_goods_interest['is_claiming_exemption'] = prop.attr('household_goods_is_claiming_exemption')
  #    household_goods_interest['claiming_sub_100'] = prop.attr('household_goods_claiming_sub_100')
  #    household_goods_interest['sub_100'] = prop.attr('household_goods_claiming_sub_100')
  #    household_goods_interest['exemption_laws'] = prop.attr('household_goods_exemption_laws')
  #    household_goods_interest['current_owned_value'] = prop.attr('household_goods_value')
  #    household_goods_interest['exemption_amount'] = prop.attr('household_goods_exemption_value')
  #    exemptions.append(household_goods_interest)
#
  #    if prop.attr('household_goods_value_2'):
  #      household_goods_interest['is_claiming_exemption'] = prop.attr('household_goods_is_claiming_exemption')
  #      household_goods_interest['claiming_sub_100'] = prop.attr('household_goods_claiming_sub_100')
  #      household_goods_interest['sub_100'] = prop.attr('household_goods_claiming_sub_100')
  #      household_goods_interest['exemption_laws'] = prop.attr('household_goods_exemption_laws_2')
  #      household_goods_interest['current_owned_value'] = prop.attr('household_goods_value')
  #      household_goods_interest['exemption_amount'] = prop.attr('household_goods_exemption_value_2')
  #      exemptions.append(household_goods_interest)
#
  #  secured_household_goods_interest = {}
  #  if prop.attr('secured_household_goods_is_claiming_exemption'):
  #    secured_household_goods_interest['is_claiming_exemption'] = prop.attr('secured_household_goods_is_claiming_exemption')
  #    secured_household_goods_interest['claiming_sub_100'] = prop.attr('secured_household_goods_claiming_sub_100')
  #    secured_household_goods_interest['sub_100'] = prop.attr('secured_household_goods_claiming_sub_100')
  #    secured_household_goods_interest['exemption_laws'] = prop.attr('secured_household_goods_exemption_laws')
  #    secured_household_goods_interest['current_owned_value'] = prop.attr('secured_household_goods_value')
  #    secured_household_goods_interest['exemption_amount'] = prop.attr('secured_household_goods_exemption_value')
  #    exemptions.append(secured_household_goods_interest)
#
  #    if prop.attr('secured_household_goods_exemption_value_2'):
  #      secured_household_goods_interest['is_claiming_exemption'] = prop.attr('secured_household_goods_is_claiming_exemption')
  #      secured_household_goods_interest['claiming_sub_100'] = prop.attr('secured_household_goods_claiming_sub_100')
  #      secured_household_goods_interest['sub_100'] = prop.attr('secured_household_goods_claiming_sub_100')
  #      secured_household_goods_interest['exemption_laws'] = prop.attr('secured_household_goods_exemption_laws_2')
  #      secured_household_goods_interest['current_owned_value'] = prop.attr('secured_household_goods_value')
  #      secured_household_goods_interest['exemption_amount'] = prop.attr('secured_household_goods_exemption_value_2')
  #      exemptions.append(secured_household_goods_interest)
#
  #  electronics_interest = {}
  #  if prop.attr('electronics_is_claiming_exemption'):
  #    electronics_interest['is_claiming_exemption'] = prop.attr('electronics_is_claiming_exemption')
  #    electronics_interest['claiming_sub_100'] = prop.attr('electronics_claiming_sub_100')
  #    electronics_interest['sub_100'] = prop.attr('electronics_claiming_sub_100')
  #    electronics_interest['exemption_laws'] = prop.attr('electronics_exemption_laws')
  #    electronics_interest['current_owned_value'] = prop.attr('electronics_value')
  #    electronics_interest['exemption_amount'] = prop.attr('electronics_exemption_value')
  #    exemptions.append(electronics_interest)
#
  #    if prop.attr('electronics_exemption_value_2'):
  #      electronics_interest['is_claiming_exemption'] = prop.attr('electronics_is_claiming_exemption')
  #      electronics_interest['claiming_sub_100'] = prop.attr('electronics_claiming_sub_100')
  #      electronics_interest['sub_100'] = prop.attr('electronics_claiming_sub_100')
  #      electronics_interest['exemption_laws'] = prop.attr('electronics_exemption_laws_2')
  #      electronics_interest['current_owned_value'] = prop.attr('electronics_value')
  #      electronics_interest['exemption_amount'] = prop.attr('electronics_exemption_value_2')
  #      exemptions.append(electronics_interest)
#
  #  collectibles_interest = {}
  #  if prop.attr('collectibles_is_claiming_exemption'):
  #    collectibles_interest['is_claiming_exemption'] = prop.attr('collectibles_is_claiming_exemption')
  #    collectibles_interest['claiming_sub_100'] = prop.attr('collectibles_claiming_sub_100')
  #    collectibles_interest['sub_100'] = prop.attr('collectibles_claiming_sub_100')
  #    collectibles_interest['exemption_laws'] = prop.attr('collectibles_exemption_laws')
  #    collectibles_interest['current_owned_value'] = prop.attr('collectibles_value')
  #    collectibles_interest['exemption_amount'] = prop.attr('collectibles_exemption_value')
  #    exemptions.append(collectibles_interest)
#
  #    if prop.attr('collectibles_exemption_value_2'):
  #      collectibles_interest['is_claiming_exemption'] = prop.attr('collectibles_is_claiming_exemption')
  #      collectibles_interest['claiming_sub_100'] = prop.attr('collectibles_claiming_sub_100')
  #      collectibles_interest['sub_100'] = prop.attr('collectibles_claiming_sub_100')
  #      collectibles_interest['exemption_laws'] = prop.attr('collectibles_exemption_laws_2')
  #      collectibles_interest['current_owned_value'] = prop.attr('collectibles_value')
  #      collectibles_interest['exemption_amount'] = prop.attr('collectibles_exemption_value_2')
  #      exemptions.append(collectibles_interest)
#
  #  hobby_interest = {}
  #  if prop.attr('hobby_equipment_is_claiming_exemption'):
  #    hobby_interest['is_claiming_exemption'] = prop.attr('hobby_equipment_is_claiming_exemption')
  #    hobby_interest['claiming_sub_100'] = prop.attr('hobby_equipment_claiming_sub_100')
  #    hobby_interest['sub_100'] = prop.attr('hobby_equipment_claiming_sub_100')
  #    hobby_interest['exemption_laws'] = prop.attr('hobby_equipment_exemption_laws')
  #    hobby_interest['current_owned_value'] = prop.attr('hobby_equipment_value')
  #    hobby_interest['exemption_amount'] = prop.attr('hobby_equipment_exemption_value')
  #    exemptions.append(hobby_interest)
#
  #    if prop.attr('hobby_equipment_exemption_value_2'):
  #      hobby_interest['is_claiming_exemption'] = prop.attr('hobby_equipment_is_claiming_exemption')
  #      hobby_interest['claiming_sub_100'] = prop.attr('hobby_equipment_claiming_sub_100')
  #      hobby_interest['sub_100'] = prop.attr('hobby_equipment_claiming_sub_100')
  #      hobby_interest['exemption_laws'] = prop.attr('hobby_equipment_exemption_laws_2')
  #      hobby_interest['current_owned_value'] = prop.attr('hobby_equipment_value')
  #      hobby_interest['exemption_amount'] = prop.attr('hobby_equipment_exemption_value_2')
  #      exemptions.append(hobby_interest)
#
#
  #  firearms_interest = {}
  #  if prop.attr('firearms_is_claiming_exemption'):
  #    firearms_interest['is_claiming_exemption'] = prop.attr('firearms_is_claiming_exemption')
  #    firearms_interest['claiming_sub_100'] = prop.attr('firearms_claiming_sub_100')
  #    firearms_interest['sub_100'] = prop.attr('firearms_claiming_sub_100')
  #    firearms_interest['exemption_laws'] = prop.attr('firearms_exemption_laws')
  #    firearms_interest['current_owned_value'] = prop.attr('firearms_value')
  #    firearms_interest['exemption_amount'] = prop.attr('firearms_exemption_value')
  #    exemptions.append(firearms_interest)
#
  #    if prop.attr('firearms_exemption_value_2'):
  #      firearms_interest['is_claiming_exemption'] = prop.attr('firearms_is_claiming_exemption')
  #      firearms_interest['claiming_sub_100'] = prop.attr('firearms_claiming_sub_100')
  #      firearms_interest['sub_100'] = prop.attr('firearms_claiming_sub_100')
  #      firearms_interest['exemption_laws'] = prop.attr('firearms_exemption_laws_2')
  #      firearms_interest['current_owned_value'] = prop.attr('firearms_value')
  #      firearms_interest['exemption_amount'] = prop.attr('firearms_exemption_value_2')
  #      exemptions.append(firearms_interest)
#
  #  clothes_interest = {}
  #  if prop.attr('clothes_is_claiming_exemption'):
  #    clothes_interest['is_claiming_exemption'] = prop.attr('clothes_is_claiming_exemption')
  #    clothes_interest['claiming_sub_100'] = prop.attr('clothes_claiming_sub_100')
  #    clothes_interest['sub_100'] = prop.attr('clothes_claiming_sub_100')
  #    clothes_interest['exemption_laws'] = prop.attr('clothes_exemption_laws')
  #    clothes_interest['current_owned_value'] = prop.attr('clothes_value')
  #    clothes_interest['exemption_amount'] = prop.attr('clothes_exemption_value')
  #    exemptions.append(clothes_interest)
#
  #    if prop.attr('clothes_exemption_value'):
  #      clothes_interest['is_claiming_exemption'] = prop.attr('clothes_is_claiming_exemption')
  #      clothes_interest['claiming_sub_100'] = prop.attr('clothes_claiming_sub_100')
  #      clothes_interest['sub_100'] = prop.attr('clothes_claiming_sub_100')
  #      clothes_interest['exemption_laws'] = prop.attr('clothes_exemption_laws_2')
  #      clothes_interest['current_owned_value'] = prop.attr('clothes_value')
  #      clothes_interest['exemption_amount'] = prop.attr('clothes_exemption_value_2')
  #      exemptions.append(clothes_interest)
#
  #  jewelry_interest = {}
  #  if prop.attr('jewelry_is_claiming_exemption'):
  #    jewelry_interest['is_claiming_exemption'] = prop.attr('jewelry_is_claiming_exemption')
  #    jewelry_interest['claiming_sub_100'] = prop.attr('jewelry_claiming_sub_100')
  #    jewelry_interest['sub_100'] = prop.attr('jewelry_claiming_sub_100')
  #    jewelry_interest['exemption_laws'] = prop.attr('jewelry_exemption_laws')
  #    jewelry_interest['current_owned_value'] = prop.attr('jewelry_value')
  #    jewelry_interest['exemption_amount'] = prop.attr('jewelry_exemption_value')
  #    exemptions.append(jewelry_interest)
#
  #    if prop.attr('jewelry_exemption_value_2'):
  #      jewelry_interest['is_claiming_exemption'] = prop.attr('jewelry_is_claiming_exemption')
  #      jewelry_interest['claiming_sub_100'] = prop.attr('jewelry_claiming_sub_100')
  #      jewelry_interest['sub_100'] = prop.attr('jewelry_claiming_sub_100')
  #      jewelry_interest['exemption_laws'] = prop.attr('jewelry_exemption_laws_2')
  #      jewelry_interest['current_owned_value'] = prop.attr('jewelry_value')
  #      jewelry_interest['exemption_amount'] = prop.attr('jewelry_exemption_value_2')
  #      exemptions.append(jewelry_interest)
#
  #  animal_interest = {}
  #  if prop.attr('animal_is_claiming_exemption'):
  #    animal_interest['is_claiming_exemption'] = prop.attr('animal_is_claiming_exemption')
  #    animal_interest['claiming_sub_100'] = prop.attr('animal_claiming_sub_100')
  #    animal_interest['sub_100'] = prop.attr('animal_claiming_sub_100')
  #    animal_interest['exemption_laws'] = prop.attr('animal_exemption_laws')
  #    animal_interest['current_owned_value'] = prop.attr('animal_value')
  #    animal_interest['exemption_amount'] = prop.attr('animal_exemption_value')
  #    exemptions.append(animal_interest)
#
  #    if prop.attr('animal_exemption_value'):
  #      animal_interest['is_claiming_exemption'] = prop.attr('animal_is_claiming_exemption')
  #      animal_interest['claiming_sub_100'] = prop.attr('animal_claiming_sub_100')
  #      animal_interest['sub_100'] = prop.attr('animal_claiming_sub_100')
  #      animal_interest['exemption_laws'] = prop.attr('animal_exemption_laws_2')
  #      animal_interest['current_owned_value'] = prop.attr('animal_value')
  #      animal_interest['exemption_amount'] = prop.attr('animal_exemption_value_2')
  #      exemptions.append(animal_interest)
#
  #  other_household_interest = {}
  #  if prop.attr('other_household_items_is_claiming_exemption'):
  #    other_household_interest['is_claiming_exemption'] = prop.attr('other_household_items_is_claiming_exemption')
  #    other_household_interest['claiming_sub_100'] = prop.attr('other_household_items_claiming_sub_100')
  #    other_household_interest['sub_100'] = prop.attr('other_household_items_claiming_sub_100')
  #    other_household_interest['exemption_laws'] = prop.attr('other_household_items_exemption_laws')
  #    other_household_interest['current_owned_value'] = prop.attr('other_household_items_value')
  #    other_household_interest['exemption_amount'] = prop.attr('other_household_items_exemption_value')
  #    exemptions.append(other_household_interest)
#
  #    if prop.attr('other_household_items_value_2'):
  #      other_household_interest['is_claiming_exemption'] = prop.attr('other_household_items_is_claiming_exemption')
  #      other_household_interest['claiming_sub_100'] = prop.attr('other_household_items_claiming_sub_100')
  #      other_household_interest['sub_100'] = prop.attr('other_household_items_claiming_sub_100')
  #      other_household_interest['exemption_laws'] = prop.attr('other_household_items_exemption_laws_2')
  #      other_household_interest['current_owned_value'] = prop.attr('other_household_items_value')
  #      other_household_interest['exemption_amount'] = prop.attr('other_household_items_exemption_value_2')
  #      exemptions.append(other_household_interest)
#
  #  cash_interest = {}
  #  if prop.financial_assets.attr('cash_is_claiming_exemption'):
  #    cash_interest['is_claiming_exemption'] = prop.financial_assets.attr('cash_is_claiming_exemption')
  #    cash_interest['claiming_sub_100'] = prop.financial_assets.attr('cash_sub_100')
  #    cash_interest['sub_100'] = prop.financial_assets.attr('cash_sub_100')
  #    cash_interest['exemption_laws'] = prop.financial_assets.attr('cash_exemption_laws')
  #    cash_interest['current_owned_value'] = prop.financial_assets.attr('cash_value')
  #    cash_interest['exemption_amount'] = prop.financial_assets.attr('cash_exemption_value')
  #    exemptions.append(cash_interest)
#
  #    if prop.financial_assets.attr('cash_exemption_value_2'):
  #      cash_interest['is_claiming_exemption'] = prop.financial_assets.attr('cash_is_claiming_exemption')
  #      cash_interest['claiming_sub_100'] = prop.financial_assets.attr('cash_sub_100')
  #      cash_interest['sub_100'] = prop.financial_assets.attr('cash_sub_100')
  #      cash_interest['exemption_laws'] = prop.financial_assets.attr('cash_exemption_laws_2')
  #      cash_interest['current_owned_value'] = prop.financial_assets.attr('cash_value')
  #      cash_interest['exemption_amount'] = prop.financial_assets.attr('cash_exemption_value_2')
  #      exemptions.append(cash_interest)
#
#
  #  for interest in prop.financial_assets.deposits.elements:
  #    temp = {}
  #    temp['exemption_amount'] = interest.attr('exemption_value')
  #    temp['exemption_laws'] = interest.attr('exemption_laws')
  #    temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #    temp['sub_100'] = interest.attr('claiming_sub_100')
  #    temp['current_owned_value'] = interest.attr('amount')
  #    temp['is_claiming_exemption'] = interest.attr('is_claiming_exemption')
  #    exemptions.append(temp)
#
  #    if interest.attr('exemption_value_2'):
  #      temp = {}
  #      temp['exemption_amount'] = interest.attr('exemption_value_2')
  #      temp['exemption_laws'] = interest.attr('exemption_laws_2')
  #      temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #      temp['sub_100'] = interest.attr('claiming_sub_100')
  #      temp['current_owned_value'] = interest.attr('amount')
  #      temp['is_claiming_exemption'] = interest.attr('is_claiming_exemption')
  #      exemptions.append(temp)
#
  #  for interest in prop.financial_assets.bonds_and_stocks.elements:
  #    temp = {}
  #    temp['exemption_amount'] = interest.attr('exemption_value')
  #    temp['exemption_laws'] = interest.attr('exemption_laws')
  #    temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #    temp['sub_100'] = interest.attr('claiming_sub_100')
  #    temp['current_owned_value'] = interest.attr('amount')
  #    temp['is_claiming_exemption'] = interest.attr('is_claiming_exemption')
  #    exemptions.append(temp)
#
  #    if interest.attr('exemption_value_2'):
  #      temp = {}
  #      temp['exemption_amount'] = interest.attr('exemption_value_2')
  #      temp['exemption_laws'] = interest.attr('exemption_laws_2')
  #      temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #      temp['sub_100'] = interest.attr('claiming_sub_100')
  #      temp['current_owned_value'] = interest.attr('amount')
  #      temp['is_claiming_exemption'] = interest.attr('is_claiming_exemption')
  #      exemptions.append(temp)
#
#
  #  for interest in prop.financial_assets.non_traded_stock.elements:
  #    temp = {}
  #    temp['exemption_amount'] = interest.attr('exemption_value')
  #    temp['exemption_laws'] = interest.attr('exemption_laws')
  #    temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #    temp['sub_100'] = interest.attr('claiming_sub_100')
  #    temp['current_owned_value'] = interest.attr('value')
  #    temp['is_claiming_exemption'] = interest.attr('is_claiming_exemption')
  #    exemptions.append(temp)
#
  #    if interest.attr('exemption_value_2'):
  #      temp = {}
  #      temp['exemption_amount'] = interest.attr('exemption_value_2')
  #      temp['exemption_laws'] = interest.attr('exemption_laws_2')
  #      temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #      temp['sub_100'] = interest.attr('claiming_sub_100')
  #      temp['current_owned_value'] = interest.attr('value')
  #      temp['is_claiming_exemption'] = interest.attr('is_claiming_exemption')
  #      exemptions.append(temp)
#
  #  for interest in prop.financial_assets.corporate_bonds.elements:
  #    temp = {}
  #    temp['exemption_amount'] = interest.attr('exemption_value')
  #    temp['exemption_laws'] = interest.attr('exemption_laws')
  #    temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #    temp['sub_100'] = interest.attr('claiming_sub_100')
  #    temp['current_owned_value'] = interest.attr('amount')
  #    temp['is_claiming_exemption'] = interest.attr('is_claiming_exemption')
  #    exemptions.append(temp)
#
  #    if interest.attr('exemption_value_2'):
  #      temp = {}
  #      temp['exemption_amount'] = interest.attr('exemption_value_2')
  #      temp['exemption_laws'] = interest.attr('exemption_laws_2')
  #      temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #      temp['sub_100'] = interest.attr('claiming_sub_100')
  #      temp['current_owned_value'] = interest.attr('amount')
  #      temp['is_claiming_exemption'] = interest.attr('is_claiming_exemption')
  #      exemptions.append(temp)
#
#
  #  for interest in prop.financial_assets.retirement_accounts.elements:
  #    temp = {}
  #    temp['exemption_amount'] = interest.attr('exemption_value')
  #    temp['exemption_laws'] = interest.attr('exemption_laws')
  #    temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #    temp['sub_100'] = interest.attr('claiming_sub_100')
  #    temp['current_owned_value'] = interest.attr('amount')
  #    temp['is_claiming_exemption'] = interest.attr('has_claim')
  #    exemptions.append(temp)
#
  #    if interest.attr('exemption_value_2'):
  #      temp = {}
  #      temp['exemption_amount'] = interest.attr('exemption_value_2')
  #      temp['exemption_laws'] = interest.attr('exemption_laws_2')
  #      temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #      temp['sub_100'] = interest.attr('claiming_sub_100')
  #      temp['current_owned_value'] = interest.attr('amount')
  #      temp['is_claiming_exemption'] = interest.attr('has_claim')
  #      exemptions.append(temp)
#
#
  #  for interest in prop.financial_assets.prepayments.elements:
  #    temp = {}
  #    temp['exemption_amount'] = interest.attr('exemption_value')
  #    temp['exemption_laws'] = interest.attr('exemption_laws')
  #    temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #    temp['sub_100'] = interest.attr('claiming_sub_100')
  #    temp['current_owned_value'] = interest.attr('amount')
  #    temp['is_claiming_exemption'] = interest.attr('has_claim')
  #    exemptions.append(temp)
#
  #    if interest.attr('exemption_value_2'):
  #      temp = {}
  #      temp['exemption_amount'] = interest.attr('exemption_value_2')
  #      temp['exemption_laws'] = interest.attr('exemption_laws_2')
  #      temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #      temp['sub_100'] = interest.attr('claiming_sub_100')
  #      temp['current_owned_value'] = interest.attr('amount')
  #      temp['is_claiming_exemption'] = interest.attr('has_claim')
  #      exemptions.append(temp)
#
#
  #  for interest in prop.financial_assets.annuities.elements:
  #    temp = {}
  #    temp['exemption_amount'] = interest.attr('exemption_value')
  #    temp['exemption_laws'] = interest.attr('exemption_laws')
  #    temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #    temp['sub_100'] = interest.attr('claiming_sub_100')
  #    temp['current_owned_value'] = interest.attr('amount')
  #    temp['is_claiming_exemption'] = interest.attr('has_claim')
  #    exemptions.append(temp)
#
  #    if interest.attr('exemption_value_2'):
  #      temp = {}
  #      temp['exemption_amount'] = interest.attr('exemption_value_2')
  #      temp['exemption_laws'] = interest.attr('exemption_laws_2')
  #      temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #      temp['sub_100'] = interest.attr('claiming_sub_100')
  #      temp['current_owned_value'] = interest.attr('amount')
  #      temp['is_claiming_exemption'] = interest.attr('has_claim')
  #      exemptions.append(temp)
#
#
  #  for interest in prop.financial_assets.edu_accounts.elements:
  #    temp = {}
  #    temp['exemption_amount'] = interest.attr('exemption_value')
  #    temp['exemption_laws'] = interest.attr('exemption_laws')
  #    temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #    temp['sub_100'] = interest.attr('claiming_sub_100')
  #    temp['current_owned_value'] = interest.attr('amount')
  #    temp['is_claiming_exemption'] = interest.attr('has_claim')
  #    exemptions.append(temp)
#
  #    if interest.attr('exemption_value_2'):
  #      temp = {}
  #      temp['exemption_amount'] = interest.attr('exemption_value_2')
  #      temp['exemption_laws'] = interest.attr('exemption_laws_2')
  #      temp['claiming_sub_100'] = interest.attr('claiming_sub_100')
  #      temp['sub_100'] = interest.attr('claiming_sub_100')
  #      temp['current_owned_value'] = interest.attr('amount')
  #      temp['is_claiming_exemption'] = interest.attr('has_claim')
  #      exemptions.append(temp)
#
#
  #  future_interest = {}
  #  if prop.financial_assets.attr('future_property_interest_has_claim'):
  #    future_interest['is_claiming_exemption'] = prop.financial_assets.attr('future_property_interest_has_claim')
  #    future_interest['claiming_sub_100'] = prop.financial_assets.attr('future_property_interest_sub_100')
  #    future_interest['sub_100'] = prop.financial_assets.attr('future_property_interest_sub_100')
  #    future_interest['exemption_laws'] = prop.financial_assets.attr('future_property_interest_exemption_laws')
  #    future_interest['current_owned_value'] = prop.financial_assets.attr('future_property_interest_value')
  #    future_interest['exemption_amount'] = prop.financial_assets.attr('future_property_interest_exemption_value')
  #    exemptions.append(future_interest)
#
  #    if prop.financial_assets.attr('future_property_interest_exemption_value_2'):
  #      future_interest['is_claiming_exemption'] = prop.financial_assets.attr('future_property_interest_has_claim')
  #      future_interest['claiming_sub_100'] = prop.financial_assets.attr('future_property_interest_sub_100')
  #      future_interest['sub_100'] = prop.financial_assets.attr('future_property_interest_sub_100')
  #      future_interest['exemption_laws'] = prop.financial_assets.attr('future_property_interest_exemption_laws_2')
  #      future_interest['current_owned_value'] = prop.financial_assets.attr('future_property_interest_value')
  #      future_interest['exemption_amount'] = prop.financial_assets.attr('future_property_interest_exemption_value_2')
  #      exemptions.append(future_interest)
#
  #  ip_interest = {}
  #  if prop.financial_assets.attr('ip_interest_has_claim'):
  #    ip_interest['is_claiming_exemption'] = prop.financial_assets.attr('ip_interest_has_claim')
  #    ip_interest['claiming_sub_100'] = prop.financial_assets.attr('ip_interest_sub_100')
  #    ip_interest['sub_100'] = prop.financial_assets.attr('ip_interest_sub_100')
  #    ip_interest['exemption_laws'] = prop.financial_assets.attr('ip_interest_exemption_laws')
  #    ip_interest['current_owned_value'] = prop.financial_assets.attr('ip_interest_value')
  #    ip_interest['exemption_amount'] = prop.financial_assets.attr('ip_interest_exemption_value')
  #    exemptions.append(ip_interest)
#
  #    if prop.financial_assets.attr('ip_interest_exemption_value_2'):
  #      ip_interest['is_claiming_exemption'] = prop.financial_assets.attr('ip_interest_has_claim')
  #      ip_interest['claiming_sub_100'] = prop.financial_assets.attr('ip_interest_sub_100')
  #      ip_interest['sub_100'] = prop.financial_assets.attr('ip_interest_sub_100')
  #      ip_interest['exemption_laws'] = prop.financial_assets.attr('ip_interest_exemption_laws_2')
  #      ip_interest['current_owned_value'] = prop.financial_assets.attr('ip_interest_value')
  #      ip_interest['exemption_amount'] = prop.financial_assets.attr('ip_interest_exemption_value_2')
  #      exemptions.append(ip_interest)
#
  #  intangible_interest = {}
  #  if prop.financial_assets.attr('intangible_interest_has_claim'):
  #    intangible_interest['is_claiming_exemption'] = prop.financial_assets.attr('intangible_interest_has_claim')
  #    intangible_interest['claiming_sub_100'] = prop.financial_assets.attr('intangible_interest_sub_100')
  #    intangible_interest['sub_100'] = prop.financial_assets.attr('intangible_interest_sub_100')
  #    intangible_interest['exemption_laws'] = prop.financial_assets.attr('intangible_interest_exemption_laws')
  #    intangible_interest['current_owned_value'] = prop.financial_assets.attr('intangible_interest_value')
  #    intangible_interest['exemption_amount'] = prop.financial_assets.attr('intangible_interest_exemption_value')
  #    exemptions.append(intangible_interest)
#
  #    if prop.financial_assets.attr('intangible_interest_exemption_value_2'):
  #      intangible_interest['is_claiming_exemption'] = prop.financial_assets.attr('intangible_interest_has_claim')
  #      intangible_interest['claiming_sub_100'] = prop.financial_assets.attr('intangible_interest_sub_100')
  #      intangible_interest['sub_100'] = prop.financial_assets.attr('intangible_interest_sub_100')
  #      intangible_interest['exemption_laws'] = prop.financial_assets.attr('intangible_interest_exemption_laws_2')
  #      intangible_interest['current_owned_value'] = prop.financial_assets.attr('intangible_interest_value')
  #      intangible_interest['exemption_amount'] = prop.financial_assets.attr('intangible_interest_exemption_value_2')
  #      exemptions.append(intangible_interest)
#
  #  refund_interest = {}
  #  if prop.owed_property.attr('tax_refund_has_claim'):
  #    refund_interest['is_claiming_exemption'] = prop.owed_property.attr('tax_refund_has_claim')
  #    refund_interest['claiming_sub_100'] = prop.owed_property.attr('tax_refund_sub_100')
  #    refund_interest['sub_100'] = prop.owed_property.attr('tax_refund_sub_100')
  #    refund_interest['exemption_laws'] = prop.owed_property.attr('tax_refund_exemption_laws')
#
  #    refund_interest['current_owned_value'] = 0
  #    if prop.owed_property.attr('tax_refund_federal'):
  #      refund_interest['current_owned_value'] += prop.owed_property.attr('tax_refund_federal')
  #    if prop.owed_property.attr('tax_refund_state'):
  #      refund_interest['current_owned_value'] += prop.owed_property.attr('tax_refund_state')
  #    if prop.owed_property.attr('tax_refund_local'):
  #      refund_interest['current_owned_value'] += prop.owed_property.attr('tax_refund_local')
#
  #    refund_interest['exemption_amount'] = prop.owed_property.attr('tax_refund_exemption_value')
  #    exemptions.append(refund_interest)
#
  #    if prop.owed_property.attr('tax_refund_exemption_value_2'):
  #      refund_interest['is_claiming_exemption'] = prop.owed_property.attr('tax_refund_has_claim')
  #      refund_interest['claiming_sub_100'] = prop.owed_property.attr('tax_refund_sub_100')
  #      refund_interest['sub_100'] = prop.owed_property.attr('tax_refund_sub_100')
  #      refund_interest['exemption_laws'] = prop.owed_property.attr('tax_refund_exemption_laws_2')
#
  #      refund_interest['current_owned_value'] = 0
  #      if prop.owed_property.attr('tax_refund_federal'):
  #        refund_interest['current_owned_value'] += prop.owed_property.attr('tax_refund_federal')
  #      if prop.owed_property.attr('tax_refund_state'):
  #        refund_interest['current_owned_value'] += prop.owed_property.attr('tax_refund_state')
  #      if prop.owed_property.attr('tax_refund_local'):
  #        refund_interest['current_owned_value'] += prop.owed_property.attr('tax_refund_local')
#
  #      refund_interest['exemption_amount'] = prop.owed_property.attr('tax_refund_exemption_value_2')
  #      exemptions.append(refund_interest)
#
  #  family_interest = {}
  #  if prop.owed_property.attr('family_support_has_claim'):
  #    family_interest['is_claiming_exemption'] = prop.owed_property.attr('family_support_has_claim')
  #    family_interest['claiming_sub_100'] = prop.owed_property.attr('family_support_sub_100')
  #    family_interest['sub_100'] = prop.owed_property.attr('family_support_sub_100')
  #    family_interest['exemption_laws'] = prop.owed_property.attr('family_support_exemption_laws')
#
  #    family_interest['current_owned_value'] = 0
  #    if prop.owed_property.attr('family_support_alimony'):
  #      family_interest['current_owned_value'] += prop.owed_property.attr('family_support_alimony')
  #    if prop.owed_property.attr('family_support_maintenance'):
  #      family_interest['current_owned_value'] += prop.owed_property.attr('family_support_maintenance')
  #    if prop.owed_property.attr('family_support_support'):
  #      family_interest['current_owned_value'] += prop.owed_property.attr('family_support_support')
  #    if prop.owed_property.attr('family_support_divorce'):
  #      family_interest['current_owned_value'] += prop.owed_property.attr('family_support_divorce')
  #    if prop.owed_property.attr('family_support_settlement'):
  #      family_interest['current_owned_value'] += prop.owed_property.attr('family_support_settlement')
#
  #    family_interest['exemption_amount'] = prop.owed_property.attr('family_support_exemption_value')
  #    exemptions.append(family_interest)
#
  #    if prop.owed_property.attr('family_support_exemption_value_2'):
  #      family_interest['is_claiming_exemption'] = prop.owed_property.attr('family_support_has_claim')
  #      family_interest['claiming_sub_100'] = prop.owed_property.attr('family_support_sub_100')
  #      family_interest['sub_100'] = prop.owed_property.attr('family_support_sub_100')
  #      family_interest['exemption_laws'] = prop.owed_property.attr('family_support_exemption_laws_2')
#
  #      family_interest['current_owned_value'] = 0
  #      if prop.owed_property.attr('family_support_alimony'):
  #        family_interest['current_owned_value'] += prop.owed_property.attr('family_support_alimony')
  #      if prop.owed_property.attr('family_support_maintenance'):
  #        family_interest['current_owned_value'] += prop.owed_property.attr('family_support_maintenance')
  #      if prop.owed_property.attr('family_support_support'):
  #        family_interest['current_owned_value'] += prop.owed_property.attr('family_support_support')
  #      if prop.owed_property.attr('family_support_divorce'):
  #        family_interest['current_owned_value'] += prop.owed_property.attr('family_support_divorce')
  #      if prop.owed_property.attr('family_support_settlement'):
  #        family_interest['current_owned_value'] += prop.owed_property.attr('family_support_settlement')
#
  #      family_interest['exemption_amount'] = prop.owed_property.attr('family_support_exemption_value_2')
  #      exemptions.append(family_interest)
#
  #  other_owed_interest = {}
  #  if prop.owed_property.attr('other_amounts_has_claim'):
  #    other_owed_interest['is_claiming_exemption'] = prop.owed_property.attr('other_amounts_has_claim')
  #    other_owed_interest['claiming_sub_100'] = prop.owed_property.attr('other_amounts_sub_100')
  #    other_owed_interest['sub_100'] = prop.owed_property.attr('other_amounts_sub_100')
  #    other_owed_interest['exemption_laws'] = prop.owed_property.attr('other_amounts_exemption_laws')
  #    other_owed_interest['current_owned_value'] = prop.owed_property.attr('other_amounts_value')
  #    other_owed_interest['exemption_amount'] = prop.owed_property.attr('other_amounts_exemption_value')
  #    exemptions.append(other_owed_interest)
#
  #    if prop.owed_property.attry('other_amounts_exemption_value_2'):
  #      other_owed_interest['is_claiming_exemption'] = prop.owed_property.attr('other_amounts_has_claim')
  #      other_owed_interest['claiming_sub_100'] = prop.owed_property.attr('other_amounts_sub_100')
  #      other_owed_interest['sub_100'] = prop.owed_property.attr('other_amounts_sub_100')
  #      other_owed_interest['exemption_laws'] = prop.owed_property.attr('other_amounts_exemption_laws_2')
  #      other_owed_interest['current_owned_value'] = prop.owed_property.attr('other_amounts_value')
  #      other_owed_interest['exemption_amount'] = prop.owed_property.attr('other_amounts_exemption_value_2')
  #      exemptions.append(other_owed_interest)
#
  #  insurance_interest_1 = {}
  #  if prop.owed_property.attr('first_insurance_interest_has_claim'):
  #    insurance_interest_1['is_claiming_exemption'] = prop.owed_property.attr('first_insurance_interest_has_claim')
  #    insurance_interest_1['claiming_sub_100'] = prop.owed_property.attr('first_insurance_interest_sub_100')
  #    insurance_interest_1['sub_100'] = prop.owed_property.attr('first_insurance_interest_sub_100')
  #    insurance_interest_1['exemption_laws'] = prop.owed_property.attr('first_insurance_interest_exemption_laws')
  #    insurance_interest_1['current_owned_value'] = prop.owed_property.attr('first_insurance_interest_amount')
  #    insurance_interest_1['exemption_amount'] = prop.owed_property.attr('first_insurance_exemption_value')
  #    exemptions.append(insurance_interest_1)
#
  #    if prop.owed_property.attr('first_insurance_exemption_value_2'):
  #      insurance_interest_1['is_claiming_exemption'] = prop.owed_property.attr('first_insurance_interest_has_claim')
  #      insurance_interest_1['claiming_sub_100'] = prop.owed_property.attr('first_insurance_interest_sub_100')
  #      insurance_interest_1['sub_100'] = prop.owed_property.attr('first_insurance_interest_sub_100')
  #      insurance_interest_1['exemption_laws'] = prop.owed_property.attr('first_insurance_interest_exemption_laws_2')
  #      insurance_interest_1['current_owned_value'] = prop.owed_property.attr('first_insurance_interest_amount')
  #      insurance_interest_1['exemption_amount'] = prop.owed_property.attr('first_insurance_exemption_value_2')
  #      exemptions.append(insurance_interest_1)
#
  #  insurance_interest_2 = {}
  #  if prop.owed_property.attr('second_insurance_interest_has_claim'):
  #    insurance_interest_2['is_claiming_exemption'] = prop.owed_property.attr('second_insurance_interest_has_claim')
  #    insurance_interest_2['claiming_sub_100'] = prop.owed_property.attr('second_insurance_interest_sub_100')
  #    insurance_interest_2['sub_100'] = prop.owed_property.attr('second_insurance_interest_sub_100')
  #    insurance_interest_2['exemption_laws'] = prop.owed_property.attr('second_insurance_interest_exemption_laws')
  #    insurance_interest_2['current_owned_value'] = prop.owed_property.attr('second_insurance_interest_amount')
  #    insurance_interest_2['exemption_amount'] = prop.owed_property.attr('second_insurance_exemption_value')
  #    exemptions.append(insurance_interest_2)
#
  #    if prop.owed_property.attr('second_insurance_exemption_value_2'):
  #      insurance_interest_2['is_claiming_exemption'] = prop.owed_property.attr('second_insurance_interest_has_claim')
  #      insurance_interest_2['claiming_sub_100'] = prop.owed_property.attr('second_insurance_interest_sub_100')
  #      insurance_interest_2['sub_100'] = prop.owed_property.attr('second_insurance_interest_sub_100')
  #      insurance_interest_2['exemption_laws'] = prop.owed_property.attr('second_insurance_interest_exemption_laws_2')
  #      insurance_interest_2['current_owned_value'] = prop.owed_property.attr('second_insurance_interest_amount')
  #      insurance_interest_2['exemption_amount'] = prop.owed_property.attr('second_insurance_exemption_value_2')
  #      exemptions.append(insurance_interest_2)
#
  #  insurance_interest_3 = {}
  #  if prop.owed_property.attr('third_insurance_interest_has_claim'):
  #    insurance_interest_3['is_claiming_exemption'] = prop.owed_property.attr('third_insurance_interest_has_claim')
  #    insurance_interest_3['claiming_sub_100'] = prop.owed_property.attr('third_insurance_interest_sub_100')
  #    insurance_interest_3['sub_100'] = prop.owed_property.attr('third_insurance_interest_sub_100')
  #    insurance_interest_3['exemption_laws'] = prop.owed_property.attr('third_insurance_interest_exemption_laws')
  #    insurance_interest_3['current_owned_value'] = prop.owed_property.attr('third_insurance_interest_amount')
  #    insurance_interest_3['exemption_amount'] = prop.owed_property.attr('third_insurance_exemption_value')
  #    exemptions.append(insurance_interest_3)
#
  #    if prop.owed_property.attr('third_insurance_exemption_value_2'):
  #      insurance_interest_3['is_claiming_exemption'] = prop.owed_property.attr('third_insurance_interest_has_claim')
  #      insurance_interest_3['claiming_sub_100'] = prop.owed_property.attr('third_insurance_interest_sub_100')
  #      insurance_interest_3['sub_100'] = prop.owed_property.attr('third_insurance_interest_sub_100')
  #      insurance_interest_3['exemption_laws'] = prop.owed_property.attr('third_insurance_interest_exemption_laws_2')
  #      insurance_interest_3['current_owned_value'] = prop.owed_property.attr('third_insurance_interest_amount')
  #      insurance_interest_3['exemption_amount'] = prop.owed_property.attr('third_insurance_exemption_value_2')
  #      exemptions.append(insurance_interest_3)
#
#
  #  trust_interest = {}
  #  if prop.owed_property.attr('trust_has_claim'):
  #    trust_interest['is_claiming_exemption'] = prop.owed_property.attr('trust_has_claim')
  #    trust_interest['claiming_sub_100'] = prop.owed_property.attr('trust_sub_100')
  #    trust_interest['sub_100'] = prop.owed_property.attr('trust_sub_100')
  #    trust_interest['exemption_laws'] = prop.owed_property.attr('trust_exemption_laws')
  #    trust_interest['current_owned_value'] = prop.owed_property.attr('trust_amount')
  #    trust_interest['exemption_amount'] = prop.owed_property.attr('trust_exemption_value')
  #    exemptions.append(trust_interest)
#
  #    if prop.owed_property.attr('trust_exemption_value_2'):
  #      trust_interest['is_claiming_exemption'] = prop.owed_property.attr('trust_has_claim')
  #      trust_interest['claiming_sub_100'] = prop.owed_property.attr('trust_sub_100')
  #      trust_interest['sub_100'] = prop.owed_property.attr('trust_sub_100')
  #      trust_interest['exemption_laws'] = prop.owed_property.attr('trust_exemption_laws_2')
  #      trust_interest['current_owned_value'] = prop.owed_property.attr('trust_amount')
  #      trust_interest['exemption_amount'] = prop.owed_property.attr('trust_exemption_value_2')
  #      exemptions.append(trust_interest)
#
  #  third_party_interest = {}
  #  if prop.owed_property.attr('third_party_has_claim'):
  #    third_party_interest['is_claiming_exemption'] = prop.owed_property.attr('third_party_has_claim')
  #    third_party_interest['claiming_sub_100'] = prop.owed_property.attr('third_party_sub_100')
  #    third_party_interest['sub_100'] = prop.owed_property.attr('third_party_sub_100')
  #    third_party_interest['exemption_laws'] = prop.owed_property.attr('third_party_exemption_laws')
  #    third_party_interest['current_owned_value'] = prop.owed_property.attr('third_party_amount')
  #    third_party_interest['exemption_amount'] = prop.owed_property.attr('third_party_exemption_value')
  #    exemptions.append(third_party_interest)
#
  #    if prop.owed_property.attr('third_party_exemption_value_2'):
  #      third_party_interest['is_claiming_exemption'] = prop.owed_property.attr('third_party_has_claim')
  #      third_party_interest['claiming_sub_100'] = prop.owed_property.attr('third_party_sub_100')
  #      third_party_interest['sub_100'] = prop.owed_property.attr('third_party_sub_100')
  #      third_party_interest['exemption_laws'] = prop.owed_property.attr('third_party_exemption_laws_2')
  #      third_party_interest['current_owned_value'] = prop.owed_property.attr('third_party_amount')
  #      third_party_interest['exemption_amount'] = prop.owed_property.attr('third_party_exemption_value_2')
  #      exemptions.append(third_party_interest)
#
  #  contingent_interest = {}
  #  if prop.owed_property.attr('contingent_claims_has_claim'):
  #    contingent_interest['is_claiming_exemption'] = prop.owed_property.attr('contingent_claims_has_claim')
  #    contingent_interest['claiming_sub_100'] = prop.owed_property.attr('contingent_claims_sub_100')
  #    contingent_interest['sub_100'] = prop.owed_property.attr('contingent_claims_sub_100')
  #    contingent_interest['exemption_laws'] = prop.owed_property.attr('contingent_claims_exemption_laws')
  #    contingent_interest['current_owned_value'] = prop.owed_property.attr('contingent_claims_amount')
  #    contingent_interest['exemption_amount'] = prop.owed_property.attr('contingent_claims_exemption_value')
  #    exemptions.append(contingent_interest)
#
  #    if prop.owed_property.attr('contingent_claims_exemption_value'):
  #      contingent_interest['is_claiming_exemption'] = prop.owed_property.attr('contingent_claims_has_claim')
  #      contingent_interest['claiming_sub_100'] = prop.owed_property.attr('contingent_claims_sub_100')
  #      contingent_interest['sub_100'] = prop.owed_property.attr('contingent_claims_sub_100')
  #      contingent_interest['exemption_laws'] = prop.owed_property.attr('contingent_claims_exemption_laws_2')
  #      contingent_interest['current_owned_value'] = prop.owed_property.attr('contingent_claims_amount')
  #      contingent_interest['exemption_amount'] = prop.owed_property.attr('contingent_claims_exemption_value_2')
  #      exemptions.append(contingent_interest)
#
  #  other_asset_interest = {}
  #  if prop.owed_property.attr('other_assets_has_claim'):
  #    other_asset_interest['is_claiming_exemption'] = prop.owed_property.attr('other_assets_has_claim')
  #    other_asset_interest['claiming_sub_100'] = prop.owed_property.attr('other_assets_sub_100')
  #    other_asset_interest['sub_100'] = prop.owed_property.attr('other_assets_sub_100')
  #    other_asset_interest['exemption_laws'] = prop.owed_property.attr('other_assets_exemption_laws')
  #    other_asset_interest['current_owned_value'] = prop.owed_property.attr('other_assets_amount')
  #    other_asset_interest['exemption_amount'] = prop.owed_property.attr('other_assets_exemption_value')
  #    exemptions.append(other_asset_interest)
#
  #    if prop.owed_property.attr('other_assets_exemption_value_2'):
  #      other_asset_interest['is_claiming_exemption'] = prop.owed_property.attr('other_assets_has_claim')
  #      other_asset_interest['claiming_sub_100'] = prop.owed_property.attr('other_assets_sub_100')
  #      other_asset_interest['sub_100'] = prop.owed_property.attr('other_assets_sub_100')
  #      other_asset_interest['exemption_laws'] = prop.owed_property.attr('other_assets_exemption_laws_2')
  #      other_asset_interest['current_owned_value'] = prop.owed_property.attr('other_assets_amount')
  #      other_asset_interest['exemption_amount'] = prop.owed_property.attr('other_assets_exemption_value_2')
  #      exemptions.append(other_asset_interest)
#
  #  ar_interest = {}
  #  if prop.business_property.attr('ar_has_claim'):
  #    ar_interest['is_claiming_exemption'] = prop.business_property.attr('ar_has_claim')
  #    ar_interest['claiming_sub_100'] = prop.business_property.attr('ar_sub_100')
  #    ar_interest['sub_100'] = prop.business_property.attr('ar_sub_100')
  #    ar_interest['exemption_laws'] = prop.business_property.attr('ar_exemption_laws')
  #    ar_interest['current_owned_value'] = prop.business_property.attr('ar_amount')
  #    ar_interest['exemption_amount'] = prop.business_property.attr('ar_exemption_value')
  #    exemptions.append(ar_interest)
#
  #    if prop.business_property.attr('ar_exemption_value_2'):
  #      ar_interest['is_claiming_exemption'] = prop.business_property.attr('ar_has_claim')
  #      ar_interest['claiming_sub_100'] = prop.business_property.attr('ar_sub_100')
  #      ar_interest['sub_100'] = prop.business_property.attr('ar_sub_100')
  #      ar_interest['exemption_laws'] = prop.business_property.attr('ar_exemption_laws_2')
  #      ar_interest['current_owned_value'] = prop.business_property.attr('ar_amount')
  #      ar_interest['exemption_amount'] = prop.business_property.attr('ar_exemption_value_2')
  #      exemptions.append(ar_interest)
#
  #  equipment_interest = {}
  #  if prop.business_property.attr('equipment_has_claim'):
  #    equipment_interest['is_claiming_exemption'] = prop.business_property.attr('equipment_has_claim')
  #    equipment_interest['claiming_sub_100'] = prop.business_property.attr('equipment_sub_100')
  #    equipment_interest['sub_100'] = prop.business_property.attr('equipment_sub_100')
  #    equipment_interest['exemption_laws'] = prop.business_property.attr('equipment_exemption_laws')
  #    equipment_interest['current_owned_value'] = prop.business_property.attr('equipment_amount')
  #    equipment_interest['exemption_amount'] = prop.business_property.attr('equipment_exemption_value')
  #    exemptions.append(equipment_interest)
#
  #    if prop.business_property.attr('equipment_exemption_value_2'):
  #      equipment_interest['is_claiming_exemption'] = prop.business_property.attr('equipment_has_claim')
  #      equipment_interest['claiming_sub_100'] = prop.business_property.attr('equipment_sub_100')
  #      equipment_interest['sub_100'] = prop.business_property.attr('equipment_sub_100')
  #      equipment_interest['exemption_laws'] = prop.business_property.attr('equipment_exemption_laws_2')
  #      equipment_interest['current_owned_value'] = prop.business_property.attr('equipment_amount')
  #      equipment_interest['exemption_amount'] = prop.business_property.attr('equipment_exemption_value_2')
  #      exemptions.append(equipment_interest)
#
  #  machinery_interest = {}
  #  if prop.business_property.attr('machinery_has_claim'):
  #    machinery_interest['is_claiming_exemption'] = prop.business_property.attr('machinery_has_claim')
  #    machinery_interest['claiming_sub_100'] = prop.business_property.attr('machinery_sub_100')
  #    machinery_interest['sub_100'] = prop.business_property.attr('machinery_sub_100')
  #    machinery_interest['exemption_laws'] = prop.business_property.attr('machinery_exemption_laws')
  #    machinery_interest['current_owned_value'] = prop.business_property.attr('machinery_amount')
  #    machinery_interest['exemption_amount'] = prop.business_property.attr('machinery_exemption_value')
  #    exemptions.append(machinery_interest)
#
  #    if prop.business_property.attr('machinery_exemption_value_2'):
  #      machinery_interest['is_claiming_exemption'] = prop.business_property.attr('machinery_has_claim')
  #      machinery_interest['claiming_sub_100'] = prop.business_property.attr('machinery_sub_100')
  #      machinery_interest['sub_100'] = prop.business_property.attr('machinery_sub_100')
  #      machinery_interest['exemption_laws'] = prop.business_property.attr('machinery_exemption_laws_2')
  #      machinery_interest['current_owned_value'] = prop.business_property.attr('machinery_amount')
  #      machinery_interest['exemption_amount'] = prop.business_property.attr('machinery_exemption_value_2')
  #      exemptions.append(machinery_interest)
#
  #  inventory_interest = {}
  #  if prop.business_property.attr('inventory_has_claim'):
  #    inventory_interest['is_claiming_exemption'] = prop.business_property.attr('inventory_has_claim')
  #    inventory_interest['claiming_sub_100'] = prop.business_property.attr('inventory_sub_100')
  #    inventory_interest['sub_100'] = prop.business_property.attr('inventory_sub_100')
  #    inventory_interest['exemption_laws'] = prop.business_property.attr('inventory_exemption_laws')
  #    inventory_interest['current_owned_value'] = prop.business_property.attr('inventory_amount')
  #    inventory_interest['exemption_amount'] = prop.business_property.attr('inventory_exemption_value')
  #    exemptions.append(inventory_interest)
#
  #    if prop.business_property.attr('inventory_exemption_value_2'):
  #      inventory_interest['is_claiming_exemption'] = prop.business_property.attr('inventory_has_claim')
  #      inventory_interest['claiming_sub_100'] = prop.business_property.attr('inventory_sub_100')
  #      inventory_interest['sub_100'] = prop.business_property.attr('inventory_sub_100')
  #      inventory_interest['exemption_laws'] = prop.business_property.attr('inventory_exemption_laws_2')
  #      inventory_interest['current_owned_value'] = prop.business_property.attr('inventory_amount')
  #      inventory_interest['exemption_amount'] = prop.business_property.attr('inventory_exemption_value_2')
  #      exemptions.append(inventory_interest)
#
  #  partnership_interest = {}
  #  if prop.business_property.attr('partnership_has_claim'):
  #    partnership_interest['is_claiming_exemption'] = prop.business_property.attr('partnership_has_claim')
  #    partnership_interest['claiming_sub_100'] = prop.business_property.attr('partnership_sub_100')
  #    partnership_interest['sub_100'] = prop.business_property.attr('partnership_sub_100')
  #    partnership_interest['exemption_laws'] = prop.business_property.attr('partnership_exemption_laws')
#
  #    partnership_interest['current_owned_value'] = 0
  #    if prop.business_property.attr('partnershipValue1'):
  #      partnership_interest['current_owned_value'] += prop.business_property.attr('partnershipValue1')
  #    if prop.business_property.attr('partnershipValue2'):
  #      partnership_interest['current_owned_value'] += prop.business_property.attr('partnershipValue2')
  #    if prop.business_property.attr('partnershipValue3'):
  #      partnership_interest['current_owned_value'] += prop.business_property.attr('partnershipValue3')
  #    if prop.business_property.attr('partnershipValue4'):
  #      partnership_interest['current_owned_value'] += prop.business_property.attr('partnershipValue4')
  #    if prop.business_property.attr('partnershipValue5'):
  #      partnership_interest['current_owned_value'] += prop.business_property.attr('partnershipValue5')
#
  #    partnership_interest['exemption_amount'] = prop.business_property.attr('partnership_exemption_value')
  #    exemptions.append(partnership_interest)
#
  #    if prop.business_property.attr('partnership_exemption_value_2'):
  #      partnership_interest['is_claiming_exemption'] = prop.business_property.attr('partnership_has_claim')
  #      partnership_interest['claiming_sub_100'] = prop.business_property.attr('partnership_sub_100')
  #      partnership_interest['sub_100'] = prop.business_property.attr('partnership_sub_100')
  #      partnership_interest['exemption_laws'] = prop.business_property.attr('partnership_exemption_laws_2')
#
  #      partnership_interest['current_owned_value'] = 0
  #      if prop.business_property.attr('partnershipValue1'):
  #        partnership_interest['current_owned_value'] += prop.business_property.attr('partnershipValue1')
  #      if prop.business_property.attr('partnershipValue2'):
  #        partnership_interest['current_owned_value'] += prop.business_property.attr('partnershipValue2')
  #      if prop.business_property.attr('partnershipValue3'):
  #        partnership_interest['current_owned_value'] += prop.business_property.attr('partnershipValue3')
  #      if prop.business_property.attr('partnershipValue4'):
  #        partnership_interest['current_owned_value'] += prop.business_property.attr('partnershipValue4')
  #      if prop.business_property.attr('partnershipValue5'):
  #        partnership_interest['current_owned_value'] += prop.business_property.attr('partnershipValue5')
#
  #      partnership_interest['exemption_amount'] = prop.business_property.attr('partnership_exemption_value_2')
  #      exemptions.append(partnership_interest)
#
  #  lists_interest = {}
  #  if prop.business_property.attr('lists_has_claim'):
  #    lists_interest['is_claiming_exemption'] = prop.business_property.attr('lists_has_claim')
  #    lists_interest['claiming_sub_100'] = prop.business_property.attr('lists_sub_100')
  #    lists_interest['sub_100'] = prop.business_property.attr('lists_sub_100')
  #    lists_interest['exemption_laws'] = prop.business_property.attr('lists_exemption_laws')
  #    lists_interest['current_owned_value'] = prop.business_property.attr('lists_amount')
  #    lists_interest['exemption_amount'] = prop.business_property.attr('lists_exemption_value')
  #    exemptions.append(lists_interest)
#
  #    if prop.business_property.attr('lists_exemption_value_2'):
  #      lists_interest['is_claiming_exemption'] = prop.business_property.attr('lists_has_claim')
  #      lists_interest['claiming_sub_100'] = prop.business_property.attr('lists_sub_100')
  #      lists_interest['sub_100'] = prop.business_property.attr('lists_sub_100')
  #      lists_interest['exemption_laws'] = prop.business_property.attr('lists_exemption_laws_2')
  #      lists_interest['current_owned_value'] = prop.business_property.attr('lists_amount')
  #      lists_interest['exemption_amount'] = prop.business_property.attr('lists_exemption_value_2')
  #      exemptions.append(lists_interest)
#
  #  other_prop_interest = {}
  #  if prop.business_property.attr('otherProperty_has_claim'):
  #    other_prop_interest['is_claiming_exemption'] = prop.business_property.attr('otherProperty_has_claim')
  #    other_prop_interest['claiming_sub_100'] = prop.business_property.attr('otherProperty_sub_100')
  #    other_prop_interest['sub_100'] = prop.business_property.attr('otherProperty_sub_100')
  #    other_prop_interest['exemption_laws'] = prop.business_property.attr('otherProperty_exemption_laws')
#
  #    other_prop_interest['current_owned_value'] = 0
  #    if prop.business_property.attr('otherPropertyAmount1'):
  #      other_prop_interest['current_owned_value'] += prop.business_property.attr('otherPropertyAmount1')
  #    if prop.business_property.attr('otherPropertyAmount2'):
  #      other_prop_interest['current_owned_value'] += prop.business_property.attr('otherPropertyAmount2')
  #    if prop.business_property.attr('otherPropertyAmount3'):
  #      other_prop_interest['current_owned_value'] += prop.business_property.attr('otherPropertyAmount3')
  #    if prop.business_property.attr('otherPropertyAmount4'):
  #      other_prop_interest['current_owned_value'] += prop.business_property.attr('otherPropertyAmount4')
  #    if prop.business_property.attr('otherPropertyAmount5'):
  #      other_prop_interest['current_owned_value'] += prop.business_property.attr('otherPropertyAmount5')
  #    if prop.business_property.attr('otherPropertyAmount6'):
  #      other_prop_interest['current_owned_value'] += prop.business_property.attr('otherPropertyAmount6')
#
  #    other_prop_interest['exemption_amount'] = prop.business_property.attr('exemption_value')
  #    exemptions.append(other_prop_interest)
#
  #    if prop.business_property.attr('exemption_value_2'):
  #      other_prop_interest['is_claiming_exemption'] = prop.business_property.attr('otherProperty_has_claim')
  #      other_prop_interest['claiming_sub_100'] = prop.business_property.attr('otherProperty_sub_100')
  #      other_prop_interest['sub_100'] = prop.business_property.attr('otherProperty_sub_100')
  #      other_prop_interest['exemption_laws'] = prop.business_property.attr('otherProperty_exemption_laws_2')
#
  #      other_prop_interest['current_owned_value'] = 0
  #      if prop.business_property.attr('otherPropertyAmount1'):
  #        other_prop_interest['current_owned_value'] += prop.business_property.attr('otherPropertyAmount1')
  #      if prop.business_property.attr('otherPropertyAmount2'):
  #        other_prop_interest['current_owned_value'] += prop.business_property.attr('otherPropertyAmount2')
  #      if prop.business_property.attr('otherPropertyAmount3'):
  #        other_prop_interest['current_owned_value'] += prop.business_property.attr('otherPropertyAmount3')
  #      if prop.business_property.attr('otherPropertyAmount4'):
  #        other_prop_interest['current_owned_value'] += prop.business_property.attr('otherPropertyAmount4')
  #      if prop.business_property.attr('otherPropertyAmount5'):
  #        other_prop_interest['current_owned_value'] += prop.business_property.attr('otherPropertyAmount5')
  #      if prop.business_property.attr('otherPropertyAmount6'):
  #        other_prop_interest['current_owned_value'] += prop.business_property.attr('otherPropertyAmount6')
#
  #      other_prop_interest['exemption_amount'] = prop.business_property.attr('exemption_value_2')
  #      exemptions.append(other_prop_interest)
#
  #  farm_animals_interest = {}
  #  if prop.farming_property.attr('has_animal_claim'):
  #    farm_animals_interest['is_claiming_exemption'] = prop.farming_property.attr('has_animal_claim')
  #    farm_animals_interest['claiming_sub_100'] = prop.farming_property.attr('animal_sub_100')
  #    farm_animals_interest['sub_100'] = prop.farming_property.attr('animal_sub_100')
  #    farm_animals_interest['exemption_laws'] = prop.farming_property.attr('animal_exemption_laws')
  #    farm_animals_interest['current_owned_value'] = prop.farming_property.attr('animal_amount')
  #    farm_animals_interest['exemption_amount'] = prop.farming_property.attr('animal_exemption_value')
  #    exemptions.append(farm_animals_interest)
#
  #    if prop.farming_property.attr('animal_exemption_value_2'):
  #      farm_animals_interest['is_claiming_exemption'] = prop.farming_property.attr('has_animal_claim')
  #      farm_animals_interest['claiming_sub_100'] = prop.farming_property.attr('animal_sub_100')
  #      farm_animals_interest['sub_100'] = prop.farming_property.attr('animal_sub_100')
  #      farm_animals_interest['exemption_laws'] = prop.farming_property.attr('animal_exemption_laws_2')
  #      farm_animals_interest['current_owned_value'] = prop.farming_property.attr('animal_amount')
  #      farm_animals_interest['exemption_amount'] = prop.farming_property.attr('animal_exemption_value_2')
  #      exemptions.append(farm_animals_interest)
#
  #  crops_interest = {}
  #  if prop.farming_property.attr('has_crops_claim'):
  #    crops_interest['is_claiming_exemption'] = prop.farming_property.attr('has_crops_claim')
  #    crops_interest['claiming_sub_100'] = prop.farming_property.attr('crops_sub_100')
  #    crops_interest['sub_100'] = prop.farming_property.attr('crops_sub_100')
  #    crops_interest['exemption_laws'] = prop.farming_property.attr('crops_exemption_laws')
  #    crops_interest['current_owned_value'] = prop.farming_property.attr('crop_amount')
  #    crops_interest['exemption_amount'] = prop.farming_property.attr('crops_exemption_value')
  #    exemptions.append(crops_interest)
#
  #    if prop.farming_property.attr('crops_exemption_value_2'):
  #      crops_interest['is_claiming_exemption'] = prop.farming_property.attr('has_crops_claim')
  #      crops_interest['claiming_sub_100'] = prop.farming_property.attr('crops_sub_100')
  #      crops_interest['sub_100'] = prop.farming_property.attr('crops_sub_100')
  #      crops_interest['exemption_laws'] = prop.farming_property.attr('crops_exemption_laws_2')
  #      crops_interest['current_owned_value'] = prop.farming_property.attr('crop_amount')
  #      crops_interest['exemption_amount'] = prop.farming_property.attr('crops_exemption_value_2')
  #      exemptions.append(crops_interest)
#
  #  farm_equip_interest = {}
  #  if prop.farming_property.attr('has_equipment_claim'):
  #    farm_equip_interest['is_claiming_exemption'] = prop.farming_property.attr('has_equipment_claim')
  #    farm_equip_interest['claiming_sub_100'] = prop.farming_property.attr('equipment_sub_100')
  #    farm_equip_interest['sub_100'] = prop.farming_property.attr('equipment_sub_100')
  #    farm_equip_interest['exemption_laws'] = prop.farming_property.attr('equipment_exemption_laws')
  #    farm_equip_interest['current_owned_value'] = prop.farming_property.attr('equipment_amount')
  #    farm_equip_interest['exemption_amount'] = prop.farming_property.attr('equipment_exemption_value')
  #    exemptions.append(farm_equip_interest)
#
  #    if prop.farming_property.attr('equipment_exemption_value_2'):
  #      farm_equip_interest['is_claiming_exemption'] = prop.farming_property.attr('has_equipment_claim')
  #      farm_equip_interest['claiming_sub_100'] = prop.farming_property.attr('equipment_sub_100')
  #      farm_equip_interest['sub_100'] = prop.farming_property.attr('equipment_sub_100')
  #      farm_equip_interest['exemption_laws'] = prop.farming_property.attr('equipment_exemption_laws_2')
  #      farm_equip_interest['current_owned_value'] = prop.farming_property.attr('equipment_amount')
  #      farm_equip_interest['exemption_amount'] = prop.farming_property.attr('equipment_exemption_value_2')
  #      exemptions.append(farm_equip_interest)
#
  #  farm_supply_interest = {}
  #  if prop.farming_property.attr('has_supplies_claim'):
  #    farm_supply_interest['is_claiming_exemption'] = prop.farming_property.attr('has_supplies_claim')
  #    farm_supply_interest['claiming_sub_100'] = prop.farming_property.attr('supplies_sub_100')
  #    farm_supply_interest['sub_100'] = prop.farming_property.attr('supplies_sub_100')
  #    farm_supply_interest['exemption_laws'] = prop.farming_property.attr('supplies_exemption_laws')
  #    farm_supply_interest['current_owned_value'] = prop.farming_property.attr('supplies_amount')
  #    farm_supply_interest['exemption_amount'] = prop.farming_property.attr('supplies_exemption_value')
  #    exemptions.append(farm_supply_interest)
#
  #    if prop.farming_property.attr('supplies_exemption_value_2'):
  #      farm_supply_interest['is_claiming_exemption'] = prop.farming_property.attr('has_supplies_claim')
  #      farm_supply_interest['claiming_sub_100'] = prop.farming_property.attr('supplies_sub_100')
  #      farm_supply_interest['sub_100'] = prop.farming_property.attr('supplies_sub_100')
  #      farm_supply_interest['exemption_laws'] = prop.farming_property.attr('supplies_exemption_laws_2')
  #      farm_supply_interest['current_owned_value'] = prop.farming_property.attr('supplies_amount')
  #      farm_supply_interest['exemption_amount'] = prop.farming_property.attr('supplies_exemption_value_2')
  #      exemptions.append(farm_supply_interest)
#
  #  fishing_interest = {}
  #  if prop.farming_property.attr('has_fishing_claim'):
  #    fishing_interest['is_claiming_exemption'] = prop.farming_property.attr('has_fishing_claim')
  #    fishing_interest['claiming_sub_100'] = prop.farming_property.attr('fishing_sub_100')
  #    fishing_interest['sub_100'] = prop.farming_property.attr('fishing_sub_100')
  #    fishing_interest['exemption_laws'] = prop.farming_property.attr('fishing_exemption_laws')
  #    fishing_interest['current_owned_value'] = prop.farming_property.attr('commercial_amount')
  #    fishing_interest['exemption_amount'] = prop.farming_property.attr('fishing_exemption_value')
  #    exemptions.append(fishing_interest)
#
  #    if prop.farming_property.attr('fishing_exemption_value_2'):
  #      fishing_interest['is_claiming_exemption'] = prop.farming_property.attr('has_fishing_claim')
  #      fishing_interest['claiming_sub_100'] = prop.farming_property.attr('fishing_sub_100')
  #      fishing_interest['sub_100'] = prop.farming_property.attr('fishing_sub_100')
  #      fishing_interest['exemption_laws'] = prop.farming_property.attr('fishing_exemption_laws_2')
  #      fishing_interest['current_owned_value'] = prop.farming_property.attr('commercial_amount')
  #      fishing_interest['exemption_amount'] = prop.farming_property.attr('fishing_exemption_value_2')
  #      exemptions.append(fishing_interest)
#
  #  any_other_interest = {}
  #  if prop.attr('other_prop_has_claim'):
  #    any_other_interest['is_claiming_exemption'] = prop.attr('other_prop_has_claim')
  #    any_other_interest['claiming_sub_100'] = prop.attr('other_prop_sub_100')
  #    any_other_interest['sub_100'] = prop.attr('other_prop_sub_100')
  #    any_other_interest['exemption_laws'] = prop.attr('other_prop_exemption_laws')
#
  #    any_other_interest['current_owned_value'] = 0
#
  #    if prop.attr('other_prop_value1'):
  #      any_other_interest['current_owned_value'] += prop.attr('other_prop_value1')
  #    if prop.attr('other_prop_value2'):
  #      any_other_interest['current_owned_value'] += prop.attr('other_prop_value2')
  #    if prop.attr('other_prop_value2'):
  #      any_other_interest['current_owned_value'] += prop.attr('other_prop_value2')
#
  #    any_other_interest['exemption_amount'] = prop.attr('other_prop_exemption_value')
  #    exemptions.append(any_other_interest)
#
  #    if prop.attr('other_prop_exemption_value_2'):
  #      any_other_interest['is_claiming_exemption'] = prop.attr('other_prop_has_claim')
  #      any_other_interest['claiming_sub_100'] = prop.attr('other_prop_sub_100')
  #      any_other_interest['sub_100'] = prop.attr('other_prop_sub_100')
  #      any_other_interest['exemption_laws'] = prop.attr('other_prop_exemption_laws_2')
#
  #      any_other_interest['current_owned_value'] = 0
#
  #      if prop.attr('other_prop_value1'):
  #        any_other_interest['current_owned_value'] += prop.attr('other_prop_value1')
  #      if prop.attr('other_prop_value2'):
  #        any_other_interest['current_owned_value'] += prop.attr('other_prop_value2')
  #      if prop.attr('other_prop_value2'):
  #        any_other_interest['current_owned_value'] += prop.attr('other_prop_value2')
#
  #      any_other_interest['exemption_amount'] = prop.attr('other_prop_exemption_value_2')
  #      exemptions.append(any_other_interest)
#
#
  #  for prop_item in exemptions:
  #    if not prop_item['is_claiming_exemption']:
  #      continue
#
  #    exemption_amount = 0
#
  #    if prop_item['claiming_sub_100'] or prop_item['sub_100']:
  #      exemption_amount = prop_item['exemption_amount']
  #    else:
  #      exemption_amount = prop_item['current_owned_value']
#
#
  #    if prop_item['exemption_laws'] == homestead_law:
  #      homestead_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == homestead_proceeds_law:
  #      homestead_proceeds_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == motor_vehicle_law:
  #      motor_vehicle_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == household_goods_law:
  #      household_goods_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == wildcard_law:
  #      wildcard_exemption_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == clothing_law:
  #      clothing_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == posessions_law:
  #      possessions_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == health_aids_law:
  #      health_aids_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == health_savings_law:
  #      health_savings_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == tools_law:
  #      tools_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == retirement_law:
  #      retirement_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == wages_law:
  #      wages_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == public_benefits_law:
  #      public_benefits_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == earned_income_law:
  #      earned_income_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == life_insurance_law:
  #      life_insurance_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == secured_settlement_law:
  #      secured_settlement_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == workers_comp_law:
  #      workers_comp_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == unemployment_law:
  #      unemployment_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == college_savings_law:
  #      college_savings_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == student_loan_law:
  #      student_loan_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == social_security_law:
  #      social_security_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == va_law:
  #      va_amount += exemption_amount
  #    elif prop_item['exemption_laws'] == unknown_law:
  #      unknown_amount += exemption_amount
  #    else:
  #      log(prop_item['exemption_laws'], 'info')
#
  #  ret = [
  #    {
  #      "name": "Homestead",
  #      "full_name": "Homestead (Neb. Rev. Stat. §§ 40-101 - 40-118)",
  #      "limit": homestead_limit,
  #      "law": homestead_law,
  #      "amount": homestead_amount,
  #    },
  #    {
  #      "name": "Homestead Proceeds",
  #      "full_name": "Homestead, proceeds of sale (Neb. Rev. Stat. § 40-116)",
  #      "limit": homestead_proceeds_limit,
  #      "law": homestead_proceeds_law,
  #      "amount": homestead_proceeds_amount,
  #    },
  #    {
  #      "name": "Motor Vehicle",
  #      "full_name": "Motor vehicle (Neb. Rev. Stat. § 25-1556(1)(e))",
  #      "limit": motor_vehicle_limit,
  #      "law": motor_vehicle_law,
  #      "amount": motor_vehicle_amount,
  #    },
  #    {
  #      "name": "Household Goods",
  #      "full_name": "Household goods (Neb. Rev. Stat. § 25-1556(1)(c))",
  #      "limit": household_goods_limit,
  #      "law": household_goods_law,
  #      "amount": household_goods_amount,
  #    },
  #    {
  #      "name": "Wildcard",
  #      "full_name": "Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))",
  #      "limit": wildcard_limit,
  #      "law": wildcard_law,
  #      "amount": wildcard_exemption_amount,
  #    },
  #    {
  #      "name": "Clothing",
  #      "full_name": "Clothing (Neb. Rev. Stat. § 25-1556(1)(b))",
  #      "limit": clothing_limit,
  #      "law": clothing_law,
  #      "amount": clothing_amount,
  #    },
  #    {
  #      "name": "Possessions",
  #      "full_name": "Possessions",
  #      "limit": posessions_limit,
  #      "law": posessions_law,
  #      "amount": possessions_amount,
  #    },
  #    {
  #      "name": "Health Aids",
  #      "full_name": "Health Aids (Neb. Rev. Stat. § 25-1556(1)(f))",
  #      "limit": health_aids_limit,
  #      "law": health_aids_law,
  #      "amount": health_aids_amount,
  #    },
  #    {
  #      "name": "Health Savings",
  #      "full_name": "Health Savings (Neb. Rev. Stat. § 8-1,131(2)(b))",
  #      "limit": health_savings_limit,
  #      "law": health_savings_law,
  #      "amount": health_savings_amount,
  #    },
  #    {
  #      "name": "Tools of the Trade",
  #      "full_name": "Tools of the trade (Neb. Rev. Stat. § 25-1556(1)(d))",
  #      "limit": tools_limit,
  #      "law": tools_law,
  #      "amount": tools_amount,
  #    },
  #    {
  #      "name": "Retirement Accounts",
  #      "full_name": "Retirement accounts (Neb. Rev. Stat. § 25-1563.01)",
  #      "limit": retirement_limit,
  #      "law": retirement_law,
  #      "amount": retirement_amount,
  #    },
  #    {
  #      "name": "Wages",
  #      "full_name": "Wages (Neb. Rev. Stat. § 25-1558)",
  #      "limit": wages_limit,
  #      "law": wages_law,
  #      "amount": wages_amount,
  #    },
  #    {
  #      "name": "Public Benefits",
  #      "full_name": "Public Benefits (Neb. Rev. Stat. § 68-148)",
  #      "limit": public_benefits_limit,
  #      "law": public_benefits_law,
  #      "amount": public_benefits_amount,
  #    },
  #    {
  #      "name": "Earned Income",
  #      "full_name": "Earned Income Tax Credit (Neb Rev Stat 25-1553)",
  #      "limit": earned_income_limit,
  #      "law": earned_income_law,
  #      "amount": earned_income_amount,
  #    },
  #    {
  #      "name": "Life Insurance",
  #      "full_name": "Life insurance proceeds (Neb. Rev. Stat. § 44-371)",
  #      "limit": life_insurance_limit,
  #      "law": life_insurance_law,
  #      "amount": life_insurance_amount,
  #    },
  #    {
  #      "name": "Secured Settlement",
  #      "full_name": "Secured Settlement",
  #      "limit": secured_settlement_limit,
  #      "law": secured_settlement_law,
  #      "amount": secured_settlement_amount,
  #    },
  #    {
  #      "name": "Workers Compensation",
  #      "full_name": "Workers Compensation (Neb. Rev. Stat. § 48-149)",
  #      "limit": workers_comp_limit,
  #      "law": workers_comp_law,
  #      "amount": workers_comp_amount,
  #    },
  #    {
  #      "name": "Unemployment",
  #      "full_name": "Unemployment (Neb. Rev. Stat. § 48-647)",
  #      "limit": unemployment_limit,
  #      "law": unemployment_law,
  #      "amount": unemployment_amount,
  #    },
  #    {
  #      "name": "College Savings",
  #      "full_name": "College Savings Plan (Neb. Rev. Stat. § 85-1809)",
  #      "limit": college_savings_limit,
  #      "law": college_savings_law,
  #      "amount": college_savings_amount,
  #    },
  #    {
  #      "name": "Student Loan",
  #      "full_name": "Student Loan (20 U.S.C. § 1095a(d))",
  #      "limit": student_loan_limit,
  #      "law": student_loan_law,
  #      "amount": student_loan_amount,
  #    },
  #    {
  #      "name": "Social Security",
  #      "full_name": "Social Security (42 U.S.C. § 407)",
  #      "limit": social_security_limit,
  #      "law": social_security_law,
  #      "amount": social_security_amount,
  #    },
  #    {
  #      "name": "VA Benefit",
  #      "full_name": "VA Benefits (38 U.S.C. § 5301(a))",
  #      "limit": va_limit,
  #      "law": va_law,
  #      "amount": va_amount
  #    },
  #    {
  #      "name": "Unknown",
  #      "full_name": "Unknown",
  #      "limit": unknown_limit,
  #      "law": unknown_law,
  #      "amount": unknown_amount
  #    },
  #  ]
#
  #  prop.exemptions = {}
#
  #  for item in ret:
  #    prop.exemptions[item['full_name']] = item
#
  #  return ret

---
features:
  javascript: exemptions.js
  css: bootstrap-theme.css
---
id: real_property_interest_details
section: schedule_ab
question: |
  Tell the court about details about the interest in question.
#right: |
#  Current Exemption Summary.
### # Name           |Limit            |Amount
#  ---------------|-----------------|-----------------
#  % for item in tbl_data():
#  ${ item['name'] } | ${ item['limit'] } | ${ item['amount'] }
#  % endfor
script: |
  <script>
    // Safely check for exemptions data
    try {
      checkQuestionExemptions(
        "prop.interests[i].is_claiming_exemption",
        "prop.interests[i].claiming_sub_100",
        "prop.interests[i].current_owned_value",
        "prop.interests[i].exemption_value",
        "prop.interests[i].exemption_laws",
        "prop.interests[i].exemption_value_2",
        "prop.interests[i].exemption_laws_2",
        "prop.interests[i].state");
    } catch(e) {
      console.log("Error in exemption check:", e);
    }
  </script>
#code: |
#  # Set complete attribute to true to prevent looping
#  prop.interests[i].complete = True
fields:
  - Street: prop.interests[i].street
    # default: "1111 SE Hamilton Ave"
  - City: prop.interests[i].city
    # default: Tampa
  - State: prop.interests[i].state
    # default: Florida
  - Zip: prop.interests[i].zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
  - County: prop.interests[i].county
    # default: Fulston
  - note: |
      <br><br>
      Tell the court about the value and interest in the property.
  - What is the property: prop.interests[i].type
    datatype: checkboxes
    choices:
      - Single-family home
      - Duplex or Multi-unit building
      - Condominium or cooperative
      - Manufactured or mobile home
      - Land
      - Investment property
      - Timeshare
      - Other
    # default: Single-family home
  - Other property type: prop.interests[i].other_type
    # default: other
    show if: prop.interests[i].type["Other"]
  - Who has an interest in the property?: prop.interests[i].who
    input type: radio
    choices:
      - Debtor 1 only
      - At least one of the debtors and another
    show if: len(debtor) == 1
    # default:       Debtor 1 only
  - Who has an interest in the property?: prop.interests[i].who
    input type: radio
    choices:
      - Debtor 1 only
      - Debtor 2 only
      - Debtor 1 and Debtor 2 only
      - At least one of the debtors and another
    show if: len(debtor) > 1
    # default:       Debtor 1 only
  - Current property value: prop.interests[i].current_value
    # default: 200000
    datatype: currency
  - Do you have a mortgage/loan on the property?: prop.interests[i].has_loan
    # default: false
    datatype: yesno
  - How much do you owe on the loan?: prop.interests[i].current_owed_amount
    # default: 150000
    datatype: currency
    show if: prop.interests[i].has_loan
  - Describe the nature of your ownership interest: prop.interests[i].ownership_interest
    input type: area
    # default: NA
  - Is this community property?: prop.interests[i].is_community_property
    # default: False
    datatype: yesnoradio
  - Other information about item, such as local property identification number: prop.interests[i].other_info
    # default: Other info
  - Claiming Exemption?: prop.interests[i].is_claiming_exemption
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.interests[i].claiming_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.interests[i].is_claiming_exemption
  - note: First Exemption
    show if: prop.interests[i].is_claiming_exemption
  - Value of exemption being claimed: prop.interests[i].exemption_value
    # default: 0
    datatype: currency
    show if: prop.interests[i].claiming_sub_100
  - Specific laws that allow exemption: prop.interests[i].exemption_laws
    choices:
      - Homestead (Neb. Rev. Stat. §§ 40-101 - 40-118)
      - Homestead, proceeds of sale (Neb. Rev. Stat. § 40-116)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.interests[i].is_claiming_exemption
  - note: Second Exemption
    show if: prop.interests[i].is_claiming_exemption
  - Value of exemption being claimed: prop.interests[i].exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.interests[i].claiming_sub_100
    required: False
  - Specific laws that allow exemption: prop.interests[i].exemption_laws_2
    choices:
      - Homestead (Neb. Rev. Stat. §§ 40-101 - 40-118)
      - Homestead, proceeds of sale (Neb. Rev. Stat. § 40-116)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.interests[i].is_claiming_exemption
    required: False
---
table: prop_ab_vehicles_table
rows: prop.ab_vehicles
columns:
  - Make: row_item.make
  - Year: row_item.year
  - Current value of entire property: row_item.current_value
  - Current value of the portion you own: row_item.current_owned_value
edit:
  - make
  - year
  - current_value
  - current_owned_value
---
id: vehicles_any_exist
section: schedule_ab
question: |
  Do you own, lease, or have legal or equitable interest in any vehicles, whether they are registered or not?
yesno: prop.ab_vehicles.there_are_any
---
id: vehicles_add_another
section: schedule_ab
question: |
  Do you have legal or equitable interest in any other vehicles?
yesno: prop.ab_vehicles.there_is_another
under: |
  ${ prop_ab_vehicles_table }
---
id: vehicle_details
section: schedule_ab
question: |
  Tell the court about one of your vehicles.
subquestion: |
  Vehicles can include cars, vans, trucks, tractors, sport utility vehicles, motorcycles.
#right: |
#  Current Exemption Summary.
#
#  Name           |Limit            |Amount
#  ---------------|-----------------|-----------------
#  % for item in tbl_data():
#  ${ item['name'] } | ${ item['limit'] } | ${ item['amount'] }
#  % endfor
script: |
  <script>
    checkQuestionExemptions(
      "prop.ab_vehicles[i].is_claiming_exemption",
      "prop.ab_vehicles[i].claiming_sub_100",
      "prop.ab_vehicles[i].current_owned_value",
      "prop.ab_vehicles[i].exemption_value",
      "prop.ab_vehicles[i].exemption_laws",
      "prop.ab_vehicles[i].exemption_value_2",
      "prop.ab_vehicles[i].exemption_laws_2",
      "prop.ab_vehicles[i].state");
  </script>
fields:
  - Make: prop.ab_vehicles[i].make
    # default: Toyota
  - Model: prop.ab_vehicles[i].model
    # default: Corolla
  - Year: prop.ab_vehicles[i].year
    datatype: number
    # default: 2012
  - Approximate milage: prop.ab_vehicles[i].milage
    datatype: number
    # default: 200000
  - Who has an interest in the property?: prop.ab_vehicles[i].who
    input type: radio
    choices:
      - Debtor 1 only
      - At least one of the debtors and another
    show if: len(debtor) == 1
    # default:       Debtor 1 only
  - Who has an interest in the property?: prop.ab_vehicles[i].who
    input type: radio
    choices:
      - Debtor 1 only
      - Debtor 2 only
      - Debtor 1 and Debtor 2 only
      - At least one of the debtors and another
    show if: len(debtor) > 1
    # default:       Debtor 1 only
  - Current property value: prop.ab_vehicles[i].current_value
    # default: 200000
    datatype: currency
  - Do you have a mortgage/loan on the vehicle?: prop.ab_vehicles[i].has_loan
    # default: false
    datatype: yesno
  - How much do you owe on the loan?: prop.ab_vehicles[i].current_owed_amount
    # default: 150000
    datatype: currency
    show if: prop.ab_vehicles[i].has_loan
  - Is this community property?: prop.ab_vehicles[i].is_community_property
    # default: False
    datatype: yesnoradio
  - Other information: prop.ab_vehicles[i].other_info
    required: false
    input type: area
  - Claiming Exemption?: prop.ab_vehicles[i].is_claiming_exemption
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.ab_vehicles[i].claiming_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.ab_vehicles[i].is_claiming_exemption
  - note: First Exemption
    show if: prop.ab_vehicles[i].is_claiming_exemption
  - Value of exemption being claimed: prop.ab_vehicles[i].exemption_value
    # default: 0
    datatype: currency
    show if: prop.ab_vehicles[i].claiming_sub_100
  - Specific laws that allow exemption: prop.ab_vehicles[i].exemption_laws
    choices:
      - Motor vehicle (Neb. Rev. Stat. § 25-1556(1)(e))
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.ab_vehicles[i].is_claiming_exemption
  - note: Second Exemption
    show if: prop.ab_vehicles[i].is_claiming_exemption
  - Value of exemption being claimed: prop.ab_vehicles[i].exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.ab_vehicles[i].claiming_sub_100
    required: False
  - Specific laws that allow exemption: prop.ab_vehicles[i].exemption_laws_2
    choices:
      - Motor vehicle (Neb. Rev. Stat. § 25-1556(1)(e))
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.ab_vehicles[i].is_claiming_exemption
    required: False
list collect: True
---
table: prop_ab_other_vehicles_table
rows: prop.ab_other_vehicles
columns:
  - Make: row_item.make
  - Year: row_item.year
  - Current value of entire property: row_item.current_value
  - Current value of the portion you own: row_item.current_owned_value
edit:
  - make
  - year
  - current_value
  - current_owned_value
---
id: other_vehicles_any_exist
section: schedule_ab
question: |
  Do you own, lease, or have legal or equitable interest in any other vehicle types not listed, whether they are registered or not?
subquestion: |
  Other vehicles can include boats, trailers, motors, personal watercraft, fishing vessels, snowmobiles, motorcycle accessories.
yesno: prop.ab_other_vehicles.there_are_any
---
id: other_vehicles_add_another
section: schedule_ab
question: |
  Do you have legal or equitable interest in any other vehicles?
yesno: prop.ab_other_vehicles.there_is_another
under: |
  ${ prop_ab_other_vehicles_table }
---
id: other_vehicle_details
section: schedule_ab
question: |
  Tell the court about one of your other vehicles
subquestion: |
  Other vehicles can include boats, trailers, motors, personal watercraft, fishing vessels, snowmobiles, motorcycle accessories.
#right: |
#  Current Exemption Summary.
#
#  Name           |Limit            |Amount
#  ---------------|-----------------|-----------------
#  % for item in tbl_data():
#  ${ item['name'] } | ${ item['limit'] } | ${ item['amount'] }
#  % endfor
script: |
  <script>
    checkQuestionExemptions(
      "prop.ab_other_vehicles[i].is_claiming_exemption",
      "prop.ab_other_vehicles[i].claiming_sub_100",
      "prop.ab_other_vehicles[i].current_owned_value",
      "prop.ab_other_vehicles[i].exemption_value",
      "prop.ab_other_vehicles[i].exemption_laws",
      "prop.ab_other_vehicles[i].exemption_value_2",
      "prop.ab_other_vehicles[i].exemption_laws_2",
      "prop.ab_other_vehicles[i].state");
  </script>
fields:
  - Make: prop.ab_other_vehicles[i].make
    # default: Toyota
  - Model: prop.ab_other_vehicles[i].model
    # default: Corolla
  - Year: prop.ab_other_vehicles[i].year
    datatype: number
    # default: 2012
  - Other info: prop.ab_other_vehicles[i].other_info
    input type: area
    # default: na
  - Who has an interest in the property?: prop.ab_other_vehicles[i].who
    input type: radio
    choices:
      - Debtor 1 only
      - At least one of the debtors and another
    show if: len(debtor) == 1
    # default:       Debtor 1 only
  - Who has an interest in the property?: prop.ab_other_vehicles[i].who
    input type: radio
    choices:
      - Debtor 1 only
      - Debtor 2 only
      - Debtor 1 and Debtor 2 only
      - At least one of the debtors and another
    show if: len(debtor) > 1
    # default:       Debtor 1 only
  - Current property value: prop.ab_other_vehicles[i].current_value
    # default: 200000
    datatype: currency
  - Do you have a mortgage/loan on the vehicle?: prop.ab_other_vehicles[i].has_loan
    # default: false
    datatype: yesno
  - How much do you owe on the loan?: prop.ab_other_vehicles[i].current_owed_amount
    # default: 150000
    datatype: currency
    show if: prop.ab_other_vehicles[i].has_loan
  - Is this community property?: prop.ab_other_vehicles[i].is_community_property
    # default: False
    datatype: yesnoradio
  - Claiming Exemption?: prop.ab_other_vehicles[i].is_claiming_exemption
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.ab_other_vehicles[i].claiming_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.ab_other_vehicles[i].is_claiming_exemption
  - note: Exemption 1
    show if: prop.ab_other_vehicles[i].is_claiming_exemption
  - Value of exemption being claimed: prop.ab_other_vehicles[i].exemption_value
    # default: 0
    datatype: currency
    show if: prop.ab_other_vehicles[i].claiming_sub_100
  - Specific laws that allow exemption: prop.ab_other_vehicles[i].exemption_laws
    choices: |
      get_exemption_choices(debtor[0].address.state, 'vehicle')
    show if: prop.ab_other_vehicles[i].is_claiming_exemption
  - note: Exemption 2
    show if: prop.ab_other_vehicles[i].is_claiming_exemption
  - Value of exemption being claimed: prop.ab_other_vehicles[i].exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.ab_other_vehicles[i].claiming_sub_100
    required: False
  - Specific laws that allow exemption: prop.ab_other_vehicles[i].exemption_laws_2
    choices: |
      get_exemption_choices(debtor[0].address.state, 'vehicle')
    show if: prop.ab_other_vehicles[i].is_claiming_exemption
    required: False
list collect: True
---
id: personal_household_items
section: schedule_ab
question: |
  Describe your personal and household items.
#right: |
#  Current Exemption Summary.
#
#  Name           |Limit            |Amount
#  ---------------|-----------------|-----------------
#  % for item in tbl_data():
#  ${ item['name'] } | ${ item['limit'] } | ${ item['amount'] }
#  % endfor
script: |
  <script>
    setTimeout(() => {
          checkQuestionExemptions(
      
      "prop.household_goods_is_claiming_exemption",
      "prop.household_goods_claiming_sub_100",
      "prop.household_goods_value",
      "prop.household_goods_exemption_value",
      "prop.household_goods_exemption_laws",
      "prop.household_goods_exemption_value_2",
      "prop.household_goods_exemption_laws_2");
    checkQuestionExemptions(
      
      "prop.secured_household_goods_is_claiming_exemption",
      "prop.secured_household_goods_claiming_sub_100",
      "prop.secured_household_goods_value",
      "prop.secured_household_goods_exemption_value",
      "prop.secured_household_goods_exemption_laws",
      "prop.secured_household_goods_exemption_value_2",
      "prop.secured_household_goods_exemption_laws_2");
    checkQuestionExemptions(
      
      "prop.electronics_is_claiming_exemption",
      "prop.electronics_claiming_sub_100",
      "prop.electronics_value",
      "prop.electronics_exemption_value",
      "prop.electronics_exemption_laws",
      "prop.electronics_exemption_value_2",
      "prop.electronics_exemption_laws_2");
    checkQuestionExemptions(
      
      "prop.collectibles_is_claiming_exemption",
      "prop.collectibles_claiming_sub_100",
      "prop.collectibles_value",
      "prop.collectibles_exemption_value",
      "prop.collectibles_exemption_laws",
      "prop.collectibles_exemption_value_2",
      "prop.collectibles_exemption_laws_2");
    checkQuestionExemptions(
      
      "prop.hobby_equipment_is_claiming_exemption",
      "prop.hobby_equipment_claiming_sub_100",
      "prop.hobby_equipment_value",
      "prop.hobby_equipment_exemption_value",
      "prop.hobby_equipment_exemption_laws",
      "prop.hobby_equipment_exemption_value_2",
      "prop.hobby_equipment_exemption_laws_2");
    checkQuestionExemptions(
      
      "prop.firearms_is_claiming_exemption",
      "prop.firearms_claiming_sub_100",
      "prop.firearms_value",
      "prop.firearms_exemption_value",
      "prop.firearms_exemption_laws",
      "prop.firearms_exemption_value_2",
      "prop.firearms_exemption_laws_2");
    checkQuestionExemptions(
      
      "prop.clothes_is_claiming_exemption",
      "prop.clothes_claiming_sub_100",
      "prop.clothes_value",
      "prop.clothes_exemption_value",
      "prop.clothes_exemption_laws",
      "prop.clothes_exemption_value_2",
      "prop.clothes_exemption_laws_2");
    checkQuestionExemptions(
      
      "prop.jewelry_is_claiming_exemption",
      "prop.jewelry_claiming_sub_100",
      "prop.jewelry_value",
      "prop.jewelry_exemption_value",
      "prop.jewelry_exemption_laws",
      "prop.jewelry_exemption_value_2",
      "prop.jewelry_exemption_laws_2");
    checkQuestionExemptions(
      
      "prop.animal_is_claiming_exemption",
      "prop.animal_claiming_sub_100",
      "prop.animal_value",
      "prop.animal_exemption_value",
      "prop.animal_exemption_laws",
      "prop.animal_exemption_value_2",
      "prop.animal_exemption_laws_2");
    checkQuestionExemptions(
      
      "prop.other_household_items_is_claiming_exemption",
      "prop.other_household_items_claiming_sub_100",
      "prop.other_household_items_value",
      "prop.other_household_items_exemption_value",
      "prop.other_household_items_exemption_laws",
      "prop.other_household_items_exemption_value_2",
      "prop.other_household_items_exemption_laws_2");
    }, 1000)

  </script>
fields:
  - note: <h3>Household Goods & Furnishings</h3>
  - Do you own any household good and furnishings?: prop.has_household_goods
    datatype: yesnoradio
    # default: True
  - Describe: prop.household_goods_description
    # default: Some goods
    input type: area
    show if: prop.has_household_goods
  - Total owned value: prop.household_goods_value
    datatype: currency
    # default: 3000
    show if: prop.has_household_goods
  - Claiming Exemption?: prop.household_goods_is_claiming_exemption
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.household_goods_claiming_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.household_goods_is_claiming_exemption
  - note: Exemption 1
    show if: prop.household_goods_is_claiming_exemption
  - Value of exemption being claimed: prop.household_goods_exemption_value
    # default: 0
    datatype: currency
    show if: prop.household_goods_claiming_sub_100
  - Specific laws that allow exemption: prop.household_goods_exemption_laws
    choices: |
      get_exemption_choices(debtor[0].address.state, 'all')
    show if: prop.household_goods_is_claiming_exemption
  - note: Exemption 2
    show if: prop.household_goods_is_claiming_exemption
  - Value of exemption being claimed: prop.household_goods_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.household_goods_claiming_sub_100
    required: False
  - Specific laws that allow exemption: prop.household_goods_exemption_laws_2
    choices: |
      get_exemption_choices(debtor[0].address.state, 'all')
    show if: prop.household_goods_is_claiming_exemption
    required: False

  - note: <br><br><h3>Secured Household Goods & Furnishings</h3>

  - Do you own any secured household goods and furnishings?: prop.has_secured_household_goods
    datatype: yesnoradio
    # default: True
  - Describe: prop.secured_household_goods_description
    # default: Some secured goods
    input type: area
    show if: prop.has_secured_household_goods
  - Total owned value: prop.secured_household_goods_value
    datatype: currency
    # default: 3000
    show if: prop.has_secured_household_goods
  - Claiming Exemption?: prop.secured_household_goods_is_claiming_exemption
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.secured_household_goods_claiming_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.secured_household_goods_is_claiming_exemption
  - note: Exemption 1
    show if: prop.secured_household_goods_is_claiming_exemption
  - Value of exemption being claimed: prop.secured_household_goods_exemption_value
    # default: 0
    datatype: currency
    show if: prop.secured_household_goods_claiming_sub_100
  - Specific laws that allow exemption: prop.secured_household_goods_exemption_laws
    choices: |
      get_exemption_choices(debtor[0].address.state, 'all')
    show if: prop.secured_household_goods_is_claiming_exemption
  - note: Exemption 2
    show if: prop.secured_household_goods_is_claiming_exemption
  - Value of exemption being claimed: prop.secured_household_goods_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.secured_household_goods_claiming_sub_100
    required: False
  - Specific laws that allow exemption: prop.secured_household_goods_exemption_laws_2
    choices: |
      get_exemption_choices(debtor[0].address.state, 'all')
    show if: prop.secured_household_goods_is_claiming_exemption
    required: False

  - note: <br><br><h3>Electronics</h3>

  - Do you own any electronics?: prop.has_electronics
    datatype: yesnoradio
    # default: True
  - Describe: prop.electronics_description
    # default: Some electrons
    input type: area
    show if: prop.has_electronics
  - Total owned value: prop.electronics_value
    datatype: currency
    # default: 500
  - Claiming Exemption?: prop.electronics_is_claiming_exemption
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.electronics_claiming_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.electronics_is_claiming_exemption
  - note: First Exemption
    show if: prop.electronics_is_claiming_exemption
  - Value of exemption being claimed: prop.electronics_exemption_value
    # default: 0
    datatype: currency
    show if: prop.electronics_claiming_sub_100
  - Specific laws that allow exemption: prop.electronics_exemption_laws
    choices: |
      get_exemption_choices(debtor[0].address.state, 'all')
    show if: prop.electronics_is_claiming_exemption
  - note: Second Exemption
    show if: prop.electronics_is_claiming_exemption
  - Value of exemption being claimed: prop.electronics_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.electronics_claiming_sub_100
    required: False
  - Specific laws that allow exemption: prop.electronics_exemption_laws_2
    choices: |
      get_exemption_choices(debtor[0].address.state, 'all')
    show if: prop.electronics_is_claiming_exemption
    required: False

  - note: <br><br><h3>Collectibles</h3>

  - Do you own any collectibles?: prop.has_collectibles
    datatype: yesnoradio
    # default: True
  - Describe: prop.collectibles_description
    # default: Some collectables
    input type: area
    show if: prop.has_collectibles
  - Total owned value: prop.collectibles_value
    datatype: currency
    # default: 100
  - Claiming Exemption?: prop.collectibles_is_claiming_exemption
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.collectibles_claiming_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.collectibles_is_claiming_exemption
  - note: First Exemption
    show if: prop.collectibles_is_claiming_exemption
  - Value of exemption being claimed: prop.collectibles_exemption_value
    # default: 0
    datatype: currency
    show if: prop.collectibles_claiming_sub_100
  - Specific laws that allow exemption: prop.collectibles_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.collectibles_is_claiming_exemption
  - note: Second Exemption
    show if: prop.collectibles_is_claiming_exemption
  - Value of exemption being claimed: prop.collectibles_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.collectibles_claiming_sub_100
    required: False
  - Specific laws that allow exemption: prop.collectibles_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.collectibles_is_claiming_exemption
    required: False

  - note: <br><br><h3>Hobby Equipment</h3>

  - Do you own any sports and hobby equipment?: prop.has_hobby_equipment
    datatype: yesnoradio
    # default: True
  - Describe: prop.hobby_equipment_description
    # default: Some hobby equipment
    input type: area
    show if: prop.has_hobby_equipment
  - Total owned value: prop.hobby_equipment_value
    datatype: currency
    # default: 3000
  - Claiming Exemption?: prop.hobby_equipment_is_claiming_exemption
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.hobby_equipment_claiming_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.hobby_equipment_is_claiming_exemption
  - note: First Exemption
    show if: prop.hobby_equipment_is_claiming_exemption
  - Value of exemption being claimed: prop.hobby_equipment_exemption_value
    # default: 0
    datatype: currency
    show if: prop.hobby_equipment_claiming_sub_100
  - Specific laws that allow exemption: prop.hobby_equipment_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.hobby_equipment_is_claiming_exemption
  - note: Second Exemption
    show if: prop.hobby_equipment_is_claiming_exemption
  - Value of exemption being claimed: prop.hobby_equipment_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.hobby_equipment_claiming_sub_100
    required: False
  - Specific laws that allow exemption: prop.hobby_equipment_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.hobby_equipment_is_claiming_exemption
    required: False

  - note: <br><br><h3>Firearms</h3>

  - Do you own any firearms?: prop.has_firearms
    datatype: yesnoradio
    # default: True
  - Describe: prop.firearms_description
    # default: some firearms
    input type: area
    show if: prop.has_firearms
  - Total owned value: prop.firearms_value
    datatype: currency
    # default: 500
    show if: prop.has_firearms
  - Claiming Exemption?: prop.firearms_is_claiming_exemption
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.firearms_claiming_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.firearms_is_claiming_exemption
  - note: First Exemption
    show if: prop.firearms_is_claiming_exemption
  - Value of exemption being claimed: prop.firearms_exemption_value
    # default: 0
    datatype: currency
    show if: prop.firearms_claiming_sub_100
  - Specific laws that allow exemption: prop.firearms_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.firearms_is_claiming_exemption
  - note: Second Exemption
    show if: prop.firearms_is_claiming_exemption
  - Value of exemption being claimed: prop.firearms_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.firearms_claiming_sub_100
    required: False
  - Specific laws that allow exemption: prop.firearms_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.firearms_is_claiming_exemption
    required: False

  - note: <br><br><h3>Clothes</h3>

  - Do you own any clothes?: prop.has_clothes
    datatype: yesnoradio
    # default: True
  - Describe: prop.clothes_description
    # default: some clothes
    input type: area
    show if: prop.has_clothes
  - Total owned value: prop.clothes_value
    datatype: currency
    # default: 200
    show if: prop.has_clothes
  - Claiming Exemption?: prop.clothes_is_claiming_exemption
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.clothes_claiming_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.clothes_is_claiming_exemption
  - note: First Exemption
    show if: prop.clothes_is_claiming_exemption
  - Value of exemption being claimed: prop.clothes_exemption_value
    # default: 0
    datatype: currency
    show if: prop.clothes_claiming_sub_100
  - Specific laws that allow exemption: prop.clothes_exemption_laws
    choices:
      - Clothing (Neb. Rev. Stat. § 25-1556(1)(b))
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.clothes_is_claiming_exemption
  - note: Second Exemption
    show if: prop.clothes_is_claiming_exemption
  - Value of exemption being claimed: prop.clothes_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.clothes_claiming_sub_100
    required: False
  - Specific laws that allow exemption: prop.clothes_exemption_laws_2
    choices:
      - Clothing (Neb. Rev. Stat. § 25-1556(1)(b))
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.clothes_is_claiming_exemption
    required: False

  - note: <br><br><h3>jewelry</h3>

  - Do you own any jewelry?: prop.has_jewelry
    datatype: yesnoradio
    # default: True
  - Describe: prop.jewelry_description
    # default: some jewelry
    input type: area
    show if: prop.has_jewelry
  - Total owned value: prop.jewelry_value
    datatype: currency
    # default: 3000
    show if: prop.has_jewelry
  - Claiming Exemption?: prop.jewelry_is_claiming_exemption
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.jewelry_claiming_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.jewelry_is_claiming_exemption
  - note: First Exemption
    show if: prop.jewelry_is_claiming_exemption
  - Value of exemption being claimed: prop.jewelry_exemption_value
    # default: 0
    datatype: currency
    show if: prop.jewelry_claiming_sub_100
  - Specific laws that allow exemption: prop.jewelry_exemption_laws
    choices:
      - Clothing (Neb. Rev. Stat. § 25-1556(1)(b))
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
      - Immediate personal possessions (Neb. Rev. Stat. § 25-1556(1)(a))
    show if: prop.jewelry_is_claiming_exemption
  - note: Second Exemption
    show if: prop.jewelry_is_claiming_exemption
  - Value of exemption being claimed: prop.jewelry_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.jewelry_claiming_sub_100
    required: False
  - Specific laws that allow exemption: prop.jewelry_exemption_laws_2
    choices:
      - Clothing (Neb. Rev. Stat. § 25-1556(1)(b))
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
      - Immediate personal possessions (Neb. Rev. Stat. § 25-1556(1)(a))
    show if: prop.jewelry_is_claiming_exemption
    required: False

  - note: <br><br><h3>Animals</h3>

  - Do you own any non-farm animals?: prop.has_animals
    datatype: yesnoradio
    # default: True
  - Describe: prop.animal_description
    # default: some dogs and cats
    input type: area
    show if: prop.has_animals
  - Total owned value: prop.animal_value
    datatype: currency
    # default: 500
    show if: prop.has_animals
  - Claiming Exemption?: prop.animal_is_claiming_exemption
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.animal_claiming_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.animal_is_claiming_exemption
  - note: First Exemption
    show if: prop.animal_is_claiming_exemption
  - Value of exemption being claimed: prop.animal_exemption_value
    # default: 0
    datatype: currency
    show if: prop.animal_claiming_sub_100
  - Specific laws that allow exemption: prop.animal_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.animal_is_claiming_exemption
  - note: Second Exemption
    show if: prop.animal_is_claiming_exemption
  - Value of exemption being claimed: prop.animal_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.animal_claiming_sub_100
    required: False
  - Specific laws that allow exemption: prop.animal_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.animal_is_claiming_exemption
    required: False

  - note: <br><br><h3>Other Personal Items</h3>

  - Do you own any other personal and household items you did not already list, including any health aids you did not list?: prop.has_other_household_items
    datatype: yesnoradio
    # default: True
  - Describe: prop.other_household_items_description
    # default: some home stuff
    input type: area
    show if: prop.has_other_household_items
  - Total owned value: prop.other_household_items_value
    # default: 100
    datatype: currency
    show if: prop.has_other_household_items
  - Claiming Exemption?: prop.other_household_items_is_claiming_exemption
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.other_household_items_claiming_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.other_household_items_is_claiming_exemption
  - note: First Exemption
    show if: prop.other_household_items_is_claiming_exemption
  - Value of exemption being claimed: prop.other_household_items_exemption_value
    # default: 0
    datatype: currency
    show if: prop.other_household_items_claiming_sub_100
  - Specific laws that allow exemption: prop.other_household_items_exemption_laws
    choices:
      - Health Aids (Neb. Rev. Stat. § 25-1556(1)(f))
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.other_household_items_is_claiming_exemption
  - note: Second Exemption
    show if: prop.other_household_items_is_claiming_exemption
  - Value of exemption being claimed: prop.other_household_items_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.other_household_items_claiming_sub_100
    required: False
  - Specific laws that allow exemption: prop.other_household_items_exemption_laws_2
    choices:
      - Health Aids (Neb. Rev. Stat. § 25-1556(1)(f))
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.other_household_items_is_claiming_exemption
    required: False


---
id: cash_on_hand
section: schedule_ab
question: |
  What is your cash on hand?
subquestion: |
  Examples: Money you have in your wallet, in your home, in a safe deposit box, and on hand when you file your petition.
#right: |
#  Current Exemption Summary.
#
#  Name           |Limit            |Amount
#  ---------------|-----------------|-----------------
#  % for item in tbl_data():
#  ${ item['name'] } | ${ item['limit'] } | ${ item['amount'] }
#  % endfor
script: |
  <script>
    checkQuestionExemptions(
      "prop.financial_assets.cash_is_claiming_exemption",
      "prop.financial_assets.cash_sub_100",
      "prop.financial_assets.cash_value",
      "prop.financial_assets.cash_exemption_value",
      "prop.financial_assets.cash_exemption_laws",
      "prop.financial_assets.cash_exemption_value_2",
      "prop.financial_assets.cash_exemption_laws_2",
      "debtor[0].address.state");
  </script>
fields:
  - I have cash: prop.financial_assets.has_cash
    datatype: yesnoradio
    # default: True
  - Total value: prop.financial_assets.cash_value
    datatype: currency
    # default: 400
    show if: prop.financial_assets.has_cash
  - Claiming Exemption?: prop.financial_assets.cash_is_claiming_exemption
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.financial_assets.cash_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.financial_assets.cash_is_claiming_exemption
  - note: First Exemption
    show if: prop.financial_assets.cash_is_claiming_exemption
  - Value of exemption being claimed: prop.financial_assets.cash_exemption_value
    # default: 0
    datatype: currency
    show if: prop.financial_assets.cash_sub_100
  - Specific laws that allow exemption: prop.financial_assets.cash_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Public Benefits (Neb. Rev. Stat. § 68-148)
      - Unknown law
    show if: prop.financial_assets.cash_is_claiming_exemption
  - note: Second Exemption
    show if: prop.financial_assets.cash_is_claiming_exemption
  - Value of exemption being claimed: prop.financial_assets.cash_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.financial_assets.cash_sub_100
    required: False
  - Specific laws that allow exemption: prop.financial_assets.cash_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Public Benefits (Neb. Rev. Stat. § 68-148)
      - Unknown law
    show if: prop.financial_assets.cash_is_claiming_exemption
    required: False
---
table: financial_deposits_table
rows: prop.financial_assets.deposits
columns:
  - Type: row_item.type
  - Institution: row_item.institution
  - Value: row_item.amount
edit:
  - type
  - institution
  - amount
---
id: deposits_any_exist
section: schedule_ab
question: |
  Do you have any deposits of money?
subquestion: |
  Examples: Checking, savings, or other financial accounts; certificates of deposit; shares in credit unions, brokerage houses, and other similar institutions.
yesno: prop.financial_assets.deposits.there_are_any
---
id: deposits_add_another
section: schedule_ab
question: |
  Do you have any more deposits of money to report?
yesno: prop.financial_assets.deposits.there_is_another
under: |
  ${ financial_deposits_table }
---
id: deposit_details
section: schedule_ab
question: |
  Tell the court about your deposit.
#right: |
#  Current Exemption Summary.
#
#  Name           |Limit            |Amount
#  ---------------|-----------------|-----------------
#  % for item in tbl_data():
#  ${ item['name'] } | ${ item['limit'] } | ${ item['amount'] }
#  % endfor
script: |
  <script>
    checkQuestionExemptions(
      
      "prop.financial_assets.deposits[i].is_claiming_exemption",
      "prop.financial_assets.deposits[i].sub_100",
      "prop.financial_assets.deposits[i].amount",
      "prop.financial_assets.deposits[i].exemption_value",
      "prop.financial_assets.deposits[i].exemption_laws",
      "prop.financial_assets.deposits[i].exemption_value_2",
      "prop.financial_assets.deposits[i].exemption_laws_2");
  </script>
fields:
  - Account Type: prop.financial_assets.deposits[i].type
    choices:
      - Checking
      - Savings
      - Certificates of deposit
      - Other financial account
  - Institution Name: prop.financial_assets.deposits[i].institution
    # default: BECU
  - Amount: prop.financial_assets.deposits[i].amount
    # default: 1000
    datatype: currency
  - Claiming Exemption?: prop.financial_assets.deposits[i].is_claiming_exemption
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.financial_assets.deposits[i].sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.financial_assets.deposits[i].is_claiming_exemption
  - note: First Exemption
    show if: prop.financial_assets.deposits[i].is_claiming_exemption
  - Value of exemption being claimed: prop.financial_assets.deposits[i].exemption_value
    # default: 0
    datatype: currency
    show if: prop.financial_assets.deposits[i].sub_100
  - Specific laws that allow exemption: prop.financial_assets.deposits[i].exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.deposits[i].is_claiming_exemption
  - note: Second Exemption
    show if: prop.financial_assets.deposits[i].is_claiming_exemption
  - Value of exemption being claimed: prop.financial_assets.deposits[i].exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.financial_assets.deposits[i].sub_100
    required: False
  - Specific laws that allow exemption: prop.financial_assets.deposits[i].exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.deposits[i].is_claiming_exemption
    required: False
list collect: True
---
table: financial_bonds_table
rows: prop.financial_assets.bonds_and_stocks
columns:
  - Institution: row_item.institution
  - Value: row_item.amount
edit:
  - institution
  - amount
---
id: bonds_stocks_any_exist
section: schedule_ab
question: |
  Do you have any bonds, mutual funds, or publicly traded stocks?
subquestion: |
  Examples: Bond funds, investment accounts with brokerage firms, money market accounts.
yesno: prop.financial_assets.bonds_and_stocks.there_are_any
---
id: bonds_stocks_add_another
section: schedule_ab
question: |
  Do you have any more bonds, mutual funds, or publicly traded stocks?
yesno: prop.financial_assets.bonds_and_stocks.there_is_another
under: |
  ${ financial_bonds_table }
---
id: bonds_stocks_details
section: schedule_ab
question: |
  Tell the court about your bonds and stocks.
#right: |
#  Current Exemption Summary.
#
#  Name           |Limit            |Amount
#  ---------------|-----------------|-----------------
#  % for item in tbl_data():
#  ${ item['name'] } | ${ item['limit'] } | ${ item['amount'] }
#  % endfor
script: |
  <script>
    checkQuestionExemptions(
      
      "prop.financial_assets.bonds_and_stocks[i].is_claiming_exemption",
      "prop.financial_assets.bonds_and_stocks[i].sub_100",
      "prop.financial_assets.bonds_and_stocks[i].amount",
      "prop.financial_assets.bonds_and_stocks[i].exemption_value",
      "prop.financial_assets.bonds_and_stocks[i].exemption_laws",
      "prop.financial_assets.bonds_and_stocks[i].exemption_value_2",
      "prop.financial_assets.bonds_and_stocks[i].exemption_laws_2");
  </script>
fields:
  - Institution Name: prop.financial_assets.bonds_and_stocks[i].institution
    # default: BECU
  - Amount: prop.financial_assets.bonds_and_stocks[i].amount
    # default: 1000
    datatype: currency
  - Claiming Exemption?: prop.financial_assets.bonds_and_stocks[i].is_claiming_exemption
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.financial_assets.bonds_and_stocks[i].sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.financial_assets.bonds_and_stocks[i].is_claiming_exemption
  - note: First Exemption
    show if: prop.financial_assets.bonds_and_stocks[i].is_claiming_exemption
  - Value of exemption being claimed: prop.financial_assets.bonds_and_stocks[i].exemption_value
    # default: 0
    datatype: currency
    show if: prop.financial_assets.bonds_and_stocks[i].sub_100
  - Specific laws that allow exemption: prop.financial_assets.bonds_and_stocks[i].exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.bonds_and_stocks[i].is_claiming_exemption
  - note: Second Exemption
    show if: prop.financial_assets.bonds_and_stocks[i].is_claiming_exemption
  - Value of exemption being claimed: prop.financial_assets.bonds_and_stocks[i].exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.financial_assets.bonds_and_stocks[i].sub_100
    required: False
  - Specific laws that allow exemption: prop.financial_assets.bonds_and_stocks[i].exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.bonds_and_stocks[i].is_claiming_exemption
    required: False
list collect: True 
---
table: financial_non_traded_stock_table
rows: prop.financial_assets.non_traded_stock
columns:
  - Entity: row_item.entity
  - percent of ownership: row_item.ownership_percent
  - Value: row_item.value
edit:
  - entity
  - ownership_percent
  - value
---
id: non_traded_stock_any_exist
section: schedule_ab
question: |
  Do you have any non-publicly traded stock?
subquestion: |
  Examples: interests in incorporated and unincorporated businesses, including an interest in an LLC, partnership, and joint venture.
yesno: prop.financial_assets.non_traded_stock.there_are_any
---
id: non_traded_stock_add_another
section: schedule_ab
question: |
  Do you have any more non-publicly traded stock?
yesno: prop.financial_assets.non_traded_stock.there_is_another
under: |
  ${ financial_non_traded_stock_table }
---
id: non_traded_stock_details
section: schedule_ab
question: |
  Tell the court about your interests in incorporated and unincorporated businesses.
#right: |
#  Current Exemption Summary.
#
#  Name           |Limit            |Amount
#  ---------------|-----------------|-----------------
#  % for item in tbl_data():
#  ${ item['name'] } | ${ item['limit'] } | ${ item['amount'] }
#  % endfor
script: |
  <script>
    checkQuestionExemptions(
      
      "prop.financial_assets.non_traded_stock[i].is_claiming_exemption",
      "prop.financial_assets.non_traded_stock[i].sub_100",
      "prop.financial_assets.non_traded_stock[i].value",
      "prop.financial_assets.non_traded_stock[i].exemption_value",
      "prop.financial_assets.non_traded_stock[i].exemption_laws",
      "prop.financial_assets.non_traded_stock[i].exemption_value_2",
      "prop.financial_assets.non_traded_stock[i].exemption_laws_2");
  </script>
fields:
  - Name of entity: prop.financial_assets.non_traded_stock[i].entity
    # default: CoolCo LLC
  - percent of ownership: prop.financial_assets.non_traded_stock[i].ownership_percent
    # default: 1
    datatype: percent
  - Value: prop.financial_assets.non_traded_stock[i].value
    # default: 1000
    datatype: currency
  - Claiming Exemption?: prop.financial_assets.non_traded_stock[i].is_claiming_exemption
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.financial_assets.non_traded_stock[i].sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.financial_assets.non_traded_stock[i].is_claiming_exemption
  - note: First Exemption
    show if: prop.financial_assets.non_traded_stock[i].is_claiming_exemption
  - Value of exemption being claimed: prop.financial_assets.non_traded_stock[i].exemption_value
    # default: 0
    datatype: currency
    show if: prop.financial_assets.non_traded_stock[i].sub_100
  - Specific laws that allow exemption: prop.financial_assets.non_traded_stock[i].exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.non_traded_stock[i].is_claiming_exemption
  - note: Second Exemption
    show if: prop.financial_assets.non_traded_stock[i].is_claiming_exemption
  - Value of exemption being claimed: prop.financial_assets.non_traded_stock[i].exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.financial_assets.non_traded_stock[i].sub_100
    required: false
  - Specific laws that allow exemption: prop.financial_assets.non_traded_stock[i].exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.non_traded_stock[i].is_claiming_exemption
    required: false
list collect: True 
---
table: financial_corporate_bonds_table
rows: prop.financial_assets.corporate_bonds
columns:
  - Issuer: row_item.issuer
  - Amount: row_item.amount
edit:
  - issuer
  - amount
---
id: corporate_bonds_any_exist
section: schedule_ab
question: |
  Do you have any government and corporate bonds and other negotiable and non-negotiable instruments?
subquestion: |
  Negotiable instruments include personal checks, cashiers' checks, promissory notes
yesno: prop.financial_assets.corporate_bonds.there_are_any
---
id: corporate_bonds_add_another
section: schedule_ab
question: |
  Do you have any more government and corporate bonds?
yesno: prop.financial_assets.corporate_bonds.there_is_another
under: |
  ${ financial_corporate_bonds_table }
---
id: corporate_bonds_details
section: schedule_ab
question: |
  Tell the court about your interests in corporate bonds.
#right: |
#  Current Exemption Summary.
#
#  Name           |Limit            |Amount
#  ---------------|-----------------|-----------------
#  % for item in tbl_data():
#  ${ item['name'] } | ${ item['limit'] } | ${ item['amount'] }
#  % endfor
script: |
  <script>
    checkQuestionExemptions(
      
      "prop.financial_assets.corporate_bonds[i].is_claiming_exemption",
      "prop.financial_assets.corporate_bonds[i].sub_100",
      "prop.financial_assets.corporate_bonds[i].amount",
      "prop.financial_assets.corporate_bonds[i].exemption_value",
      "prop.financial_assets.corporate_bonds[i].exemption_laws",
      "prop.financial_assets.corporate_bonds[i].exemption_value_2",
      "prop.financial_assets.corporate_bonds[i].exemption_laws_2");
  </script>
fields:
  - Issuer: prop.financial_assets.corporate_bonds[i].issuer
    # default: CoolCo LLC
  - Amount: prop.financial_assets.corporate_bonds[i].amount
    # default: 1000
    datatype: currency
  - Claiming Exemption?: prop.financial_assets.corporate_bonds[i].is_claiming_exemption
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.financial_assets.corporate_bonds[i].sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.financial_assets.corporate_bonds[i].is_claiming_exemption
  - note: First Exemption
    show if: prop.financial_assets.corporate_bonds[i].is_claiming_exemption
  - Value of exemption being claimed: prop.financial_assets.corporate_bonds[i].exemption_value
    # default: 0
    datatype: currency
    show if: prop.financial_assets.corporate_bonds[i].sub_100
  - Specific laws that allow exemption: prop.financial_assets.corporate_bonds[i].exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.corporate_bonds[i].is_claiming_exemption
  - note: Second Exemption
    show if: prop.financial_assets.corporate_bonds[i].is_claiming_exemption
  - Value of exemption being claimed: prop.financial_assets.corporate_bonds[i].exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.financial_assets.corporate_bonds[i].sub_100
    required: False
  - Specific laws that allow exemption: prop.financial_assets.corporate_bonds[i].exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.corporate_bonds[i].is_claiming_exemption
    required: False
list collect: True
---
table: financial_retirement_accounts_table
rows: prop.financial_assets.retirement_accounts
columns:
  - Type: row_item.type
  - Institution: row_item.institution
  - Amount: row_item.amount
edit:
  - type
  - institution
  - amount
---
id: retirement_accounts_any_exist
section: schedule_ab
question: |
  Do you have any retirement or pension accounts?
subquestion: |
  Examples: Interests in IRA, ERISA, Keogh, 401(k), 403(b), thrift savings accounts, or other pension or profit sharing plans.
yesno: prop.financial_assets.retirement_accounts.there_are_any
---
id: retirement_accounts_add_another
section: schedule_ab
question: |
  Do you have any more retirement or pension accounts?
yesno: prop.financial_assets.retirement_accounts.there_is_another
under: |
  ${ financial_retirement_accounts_table }
---
id: retirement_accounts_details
section: schedule_ab
question: |
  Tell the court about your interests retirement or pension accounts.
#right: |
#  Current Exemption Summary.
#
#  Name           |Limit            |Amount
#  ---------------|-----------------|-----------------
#  % for item in tbl_data():
#  ${ item['name'] } | ${ item['limit'] } | ${ item['amount'] }
#  % endfor
script: |
  <script>
    checkQuestionExemptions(
      
      "prop.financial_assets.retirement_accounts[i].has_claim",
      "prop.financial_assets.retirement_accounts[i].sub_100",
      "prop.financial_assets.retirement_accounts[i].amount",
      "prop.financial_assets.retirement_accounts[i].exemption_value",
      "prop.financial_assets.retirement_accounts[i].exemption_laws",
      "prop.financial_assets.retirement_accounts[i].exemption_value_2",
      "prop.financial_assets.retirement_accounts[i].exemption_laws_2");
  </script>
fields:
  - Account Type: prop.financial_assets.retirement_accounts[i].type
    input type: radio
    choices:
      - 401(k) or similar plan
      - Pension plan
      - IRA
      - Retirement account
      - Keogh
      - Additional account
    # default:       401(k) or similar plan
  - Institution: prop.financial_assets.retirement_accounts[i].institution
    # default: CoolCo LLC
  - Amount: prop.financial_assets.retirement_accounts[i].amount
    # default: 1000
    datatype: currency
  - Claiming Exemption?: prop.financial_assets.retirement_accounts[i].has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.financial_assets.retirement_accounts[i].sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.financial_assets.retirement_accounts[i].has_claim
  - note: First Exemption
    show if: prop.financial_assets.retirement_accounts[i].has_claim
  - Value of exemption being claimed: prop.financial_assets.retirement_accounts[i].exemption_value
    # default: 0
    datatype: currency
    show if: prop.financial_assets.retirement_accounts[i].sub_100
  - Specific laws that allow exemption: prop.financial_assets.retirement_accounts[i].exemption_laws
    choices:
      - Retirement accounts (Neb. Rev. Stat. § 25-1563.01)
      - Social Security (42 U.S.C. § 407)
      - VA Benefits (38 U.S.C. § 5301(a))
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.retirement_accounts[i].has_claim
  - note: Second Exemption
    show if: prop.financial_assets.retirement_accounts[i].has_claim
  - Value of exemption being claimed: prop.financial_assets.retirement_accounts[i].exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.financial_assets.retirement_accounts[i].sub_100
    required: False
  - Specific laws that allow exemption: prop.financial_assets.retirement_accounts[i].exemption_laws_2
    choices:
      - Retirement accounts (Neb. Rev. Stat. § 25-1563.01)
      - Social Security (42 U.S.C. § 407)
      - VA Benefits (38 U.S.C. § 5301(a))
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.retirement_accounts[i].has_claim
    required: False
list collect: True
---
table: financial_prepayments_table
rows: prop.financial_assets.prepayments
columns:
  - Type: row_item.type
  - Institution or individual: row_item.institution
  - Amount: row_item.amount
edit:
  - type
  - institution
  - amount
---
id: prepayments_any_exist
section: schedule_ab
question: |
  Do you have any security deposits or prepayments?
subquestion: |
  Your share of all unused deposits you have made so that you may continue service or use from a company. Examples: Agreements with landlords, prepaid rent, public utilities (electric, gas, water), telecommunications companies, or others.
yesno: prop.financial_assets.prepayments.there_are_any
---
id: prepayments_add_another
section: schedule_ab
question: |
  Do you have any more security deposits or prepayments?
yesno: prop.financial_assets.prepayments.there_is_another
under: |
  ${ financial_prepayments_table }
---
id: prepayments_details
section: schedule_ab
question: |
  Tell the court about your security deposits or prepayments.
#right: |
#  Current Exemption Summary.
#
#  Name           |Limit            |Amount
#  ---------------|-----------------|-----------------
#  % for item in tbl_data():
#  ${ item['name'] } | ${ item['limit'] } | ${ item['amount'] }
#  % endfor
script: |
  <script>
    checkQuestionExemptions(
      
      "prop.financial_assets.prepayments[i].has_claim",
      "prop.financial_assets.prepayments[i].sub_100",
      "prop.financial_assets.prepayments[i].amount",
      "prop.financial_assets.prepayments[i].exemption_value",
      "prop.financial_assets.prepayments[i].exemption_laws",
      "prop.financial_assets.prepayments[i].exemption_value_2",
      "prop.financial_assets.prepayments[i].exemption_laws_2");
  </script>
fields:
  - Account Type: prop.financial_assets.prepayments[i].type
    input type: radio
    choices:
      - Electric
      - Gas
      - Heating oil
      - Security deposit on rental unit
      - Prepaid rent
      - Telephone
      - Water
      - Rented furniture
      - Other
    # default:       401(k) or similar plan
  - Institution: prop.financial_assets.prepayments[i].institution
    # default: Real estate pros
  - Amount: prop.financial_assets.prepayments[i].amount
    # default: 1000
    datatype: currency
  - Claiming Exemption?: prop.financial_assets.prepayments[i].has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.financial_assets.prepayments[i].sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.financial_assets.prepayments[i].has_claim
  - note: First Exemption
    show if: prop.financial_assets.prepayments[i].has_claim
  - Value of exemption being claimed: prop.financial_assets.prepayments[i].exemption_value
    # default: 0
    datatype: currency
    show if: prop.financial_assets.prepayments[i].sub_100
  - Specific laws that allow exemption: prop.financial_assets.prepayments[i].exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.prepayments[i].has_claim
  - note: Second Exemption
    show if: prop.financial_assets.prepayments[i].has_claim
  - Value of exemption being claimed: prop.financial_assets.prepayments[i].exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.financial_assets.prepayments[i].sub_100
    required: False
  - Specific laws that allow exemption: prop.financial_assets.prepayments[i].exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.prepayments[i].has_claim
    required: False
list collect: True
---
table: financial_annuities_table
rows: prop.financial_assets.annuities
columns:
  - Issuer and description: row_item.issuer
    input type: area
  - Amount: row_item.amount
edit:
  - issuer
  - amount
---
id: annuities_any_exist
section: schedule_ab
question: |
  Annuities?
subquestion: |
  A contract for a periodic payment of money to you, either for life or for a number of years.
yesno: prop.financial_assets.annuities.there_are_any
---
id: annuities_add_another
section: schedule_ab
question: |
  Do you have any more annuities?
yesno: prop.financial_assets.annuities.there_is_another
under: |
  ${ financial_annuities_table }
---
id: annuity_details
section: schedule_ab
question: |
  Tell the court about your annuity.
#right: |
#  Current Exemption Summary.
#
#  Name           |Limit            |Amount
#  ---------------|-----------------|-----------------
#  % for item in tbl_data():
#  ${ item['name'] } | ${ item['limit'] } | ${ item['amount'] }
#  % endfor
script: |
  <script>
    checkQuestionExemptions(
      
      "prop.financial_assets.annuities[i].has_claim",
      "prop.financial_assets.annuities[i].sub_100",
      "prop.financial_assets.annuities[i].amount",
      "prop.financial_assets.annuities[i].exemption_value",
      "prop.financial_assets.annuities[i].exemption_laws",
      "prop.financial_assets.annuities[i].exemption_value_2",
      "prop.financial_assets.annuities[i].exemption_laws_2");
  </script>
fields:
  - Issuer: prop.financial_assets.annuities[i].issuer
    # default: Florida Lottery
  - Amount: prop.financial_assets.annuities[i].amount
    # default: 50000
    datatype: currency
  - Claiming Exemption?: prop.financial_assets.annuities[i].has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.financial_assets.annuities[i].sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.financial_assets.annuities[i].has_claim
  - note: First Exemption
    show if: prop.financial_assets.annuities[i].has_claim
  - Value of exemption being claimed: prop.financial_assets.annuities[i].exemption_value
    # default: 0
    datatype: currency
    show if: prop.financial_assets.annuities[i].sub_100
  - Specific laws that allow exemption: prop.financial_assets.annuities[i].exemption_laws
    choices:
      - Wages (Neb. Rev. Stat. § 25-1558)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.annuities[i].has_claim
  - note: Second Exemption
    show if: prop.financial_assets.annuities[i].has_claim
  - Value of exemption being claimed: prop.financial_assets.annuities[i].exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.financial_assets.annuities[i].sub_100
    required: False
  - Specific laws that allow exemption: prop.financial_assets.annuities[i].exemption_laws_2
    choices:
      - Wages (Neb. Rev. Stat. § 25-1558)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.annuities[i].has_claim
    required: False
list collect: True
---
table: financial_edu_accounts_table
rows: prop.financial_assets.edu_accounts
columns:
  - Institution and description: row_item.institution
    input type: area
  - Amount: row_item.amount
edit:
  - institution
  - amount
---
id: education_accounts_any_exist
section: schedule_ab
question: |
  Interests in an education IRA, in an account in a qualifed ABLE program, or under a qualified state tuition program.
subquestion: |
  26 U.S.C. §§ 530(b)(1), 529A(b), and 529(b)(1).
yesno: prop.financial_assets.edu_accounts.there_are_any
---
id: education_accounts_add_another
section: schedule_ab
question: |
  Do you have any more education accounts?
yesno: prop.financial_assets.edu_accounts.there_is_another
under: |
  ${ financial_edu_accounts_table }
---
id: education_account_details
section: schedule_ab
question: |
  Tell the court about your education account.
#right: |
#  Current Exemption Summary.
#
#  Name           |Limit            |Amount
#  ---------------|-----------------|-----------------
#  % for item in tbl_data():
#  ${ item['name'] } | ${ item['limit'] } | ${ item['amount'] }
#  % endfor
script: |
  <script>
    checkQuestionExemptions(
      
      "prop.financial_assets.edu_accounts[i].has_claim",
      "prop.financial_assets.edu_accounts[i].sub_100",
      "prop.financial_assets.edu_accounts[i].amount",
      "prop.financial_assets.edu_accounts[i].exemption_value",
      "prop.financial_assets.edu_accounts[i].exemption_laws",
      "prop.financial_assets.edu_accounts[i].exemption_value_2",
      "prop.financial_assets.edu_accounts[i].exemption_laws_2");
  </script>
fields:
  - Institution: prop.financial_assets.edu_accounts[i].institution
    # default: Fidelity
  - Amount: prop.financial_assets.edu_accounts[i].amount
    # default: 30000
    datatype: currency
  - Claiming Exemption?: prop.financial_assets.edu_accounts[i].has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.financial_assets.edu_accounts[i].sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.financial_assets.edu_accounts[i].has_claim
  - note: First Exemption
    show if: prop.financial_assets.edu_accounts[i].has_claim
  - Value of exemption being claimed: prop.financial_assets.edu_accounts[i].exemption_value
    # default: 0
    datatype: currency
    show if: prop.financial_assets.edu_accounts[i].sub_100
  - Specific laws that allow exemption: prop.financial_assets.edu_accounts[i].exemption_laws
    choices:
      - College Savings Plan (Neb. Rev. Stat. § 85-1809)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.edu_accounts[i].has_claim
  - note: Second Exemption
    show if: prop.financial_assets.edu_accounts[i].has_claim
  - Value of exemption being claimed: prop.financial_assets.edu_accounts[i].exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.financial_assets.edu_accounts[i].sub_100
    required: False
  - Specific laws that allow exemption: prop.financial_assets.edu_accounts[i].exemption_laws_2
    choices:
      - College Savings Plan (Neb. Rev. Stat. § 85-1809)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.edu_accounts[i].has_claim
    required: False
list collect: True
---
id: trusts_future_interests
section: schedule_ab
question: |
  Do you have any trusts, equitable or future interests in property (other than anything previously listed), and rights or powers exercisable for your benefit?
#right: |
#  Current Exemption Summary.
#
#  Name           |Limit            |Amount
#  ---------------|-----------------|-----------------
#  % for item in tbl_data():
#  ${ item['name'] } | ${ item['limit'] } | ${ item['amount'] }
#  % endfor
script: |
  <script>
    checkQuestionExemptions(
      
      "prop.financial_assets.future_property_interest_has_claim",
      "prop.financial_assets.future_property_interest_sub_100",
      "prop.financial_assets.future_property_interest_value",
      "prop.financial_assets.future_property_interest_exemption_value",
      "prop.financial_assets.future_property_interest_exemption_laws",
      "prop.financial_assets.future_property_interest_exemption_value_2",
      "prop.financial_assets.future_property_interest_exemption_laws_2");
  </script>
fields:
  - Has interests: prop.financial_assets.has_future_property_interest
    # default: True
    datatype: yesnoradio
  - Describe interest: prop.financial_assets.future_property_interest_description
    # default: NA
    input type: area
    show if: prop.financial_assets.has_future_property_interest
  - Interest value: prop.financial_assets.future_property_interest_value
    # default: 3000
    datatype: currency
    show if: prop.financial_assets.has_future_property_interest
  - Claiming Exemption?: prop.financial_assets.future_property_interest_has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.financial_assets.future_property_interest_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.financial_assets.future_property_interest_has_claim
  - note: First Exemption
    show if: prop.financial_assets.future_property_interest_has_claim
  - Value of exemption being claimed: prop.financial_assets.future_property_interest_exemption_value
    # default: 0
    datatype: currency
    show if: prop.financial_assets.future_property_interest_sub_100
  - Specific laws that allow exemption: prop.financial_assets.future_property_interest_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.future_property_interest_has_claim
  - note: Second Exemption
    show if: prop.financial_assets.future_property_interest_has_claim
  - Value of exemption being claimed: prop.financial_assets.future_property_interest_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.financial_assets.future_property_interest_sub_100
    required: False
  - Specific laws that allow exemption: prop.financial_assets.future_property_interest_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.future_property_interest_has_claim
    required: False
---
id: intellectual_property
section: schedule_ab
question: |
  Do you have any patents, copyrights, trademarks, trade secrets, and other intellectual property?
subquestion: |
  Examples: Internet domain names, websites, proceeds from royalties and licensing agreements.
#right: |
#  Current Exemption Summary.
#
#  Name           |Limit            |Amount
#  ---------------|-----------------|-----------------
#  % for item in tbl_data():
#  ${ item['name'] } | ${ item['limit'] } | ${ item['amount'] }
#  % endfor
script: |
  <script>
    checkQuestionExemptions(
      
      "prop.financial_assets.ip_interest_has_claim",
      "prop.financial_assets.ip_interest_sub_100",
      "prop.financial_assets.ip_interest_value",
      "prop.financial_assets.ip_interest_exemption_value",
      "prop.financial_assets.ip_interest_exemption_laws",
      "prop.financial_assets.ip_interest_exemption_value_2",
      "prop.financial_assets.ip_interest_exemption_laws_2");
  </script>
fields:
  - Has interests: prop.financial_assets.has_ip_interest
    # default: True
    datatype: yesnoradio
  - Describe IP: prop.financial_assets.ip_interest_description
    # default: NA
    input type: area
    show if: prop.financial_assets.has_ip_interest
  - IP value: prop.financial_assets.ip_interest_value
    # default: 20000
    datatype: currency
    show if: prop.financial_assets.has_ip_interest
  - Claiming Exemption?: prop.financial_assets.ip_interest_has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.financial_assets.ip_interest_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.financial_assets.ip_interest_has_claim
  - note: First Exemption
    show if: prop.financial_assets.ip_interest_has_claim
  - Value of exemption being claimed: prop.financial_assets.ip_interest_exemption_value
    # default: 0
    datatype: currency
    show if: prop.financial_assets.ip_interest_sub_100
  - Specific laws that allow exemption: prop.financial_assets.ip_interest_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.ip_interest_has_claim
  - note: Second Exemption
    show if: prop.financial_assets.ip_interest_has_claim
  - Value of exemption being claimed: prop.financial_assets.ip_interest_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.financial_assets.ip_interest_sub_100
    required: False
  - Specific laws that allow exemption: prop.financial_assets.ip_interest_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.ip_interest_has_claim
    required: False
---
section: schedule_ab
question: |
  Do you have any licenses, franchises, or other general intagibles?
subquestion: |
  Examples: Building permits, exclusive licenses, cooperative association holdings, liquor licenses, professional licenses.
#right: |
#  Current Exemption Summary.
#
#  Name           |Limit            |Amount
#  ---------------|-----------------|-----------------
#  % for item in tbl_data():
#  ${ item['name'] } | ${ item['limit'] } | ${ item['amount'] }
#  % endfor
script: |
  <script>
    checkQuestionExemptions(
      
      "prop.financial_assets.intangible_interest_has_claim",
      "prop.financial_assets.intangible_interest_sub_100",
      "prop.financial_assets.intangible_interest_value",
      "prop.financial_assets.intangible_interest_exemption_value",
      "prop.financial_assets.intangible_interest_exemption_laws",
      "prop.financial_assets.intangible_interest_exemption_value_2",
      "prop.financial_assets.intangible_interest_exemption_laws_2");
  </script>
fields:
  - Has interest: prop.financial_assets.has_intangible_interest
    # default: True
    datatype: yesnoradio
  - Describe interest: prop.financial_assets.intangible_interest_description
    # default: NA
    input type: area
    show if: prop.financial_assets.has_intangible_interest
  - Interest value: prop.financial_assets.intangible_interest_value
    # default: 300
    datatype: currency
    show if: prop.financial_assets.has_intangible_interest
  - Claiming Exemption?: prop.financial_assets.intangible_interest_has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.financial_assets.intangible_interest_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.financial_assets.intangible_interest_has_claim
  - note: First Exemption
    show if: prop.financial_assets.intangible_interest_has_claim
  - Value of exemption being claimed: prop.financial_assets.intangible_interest_exemption_value
    # default: 0
    datatype: currency
    show if: prop.financial_assets.intangible_interest_sub_100
  - Specific laws that allow exemption: prop.financial_assets.intangible_interest_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.intangible_interest_has_claim
  - note: Second Exemption
    show if: prop.financial_assets.intangible_interest_has_claim
  - Value of exemption being claimed: prop.financial_assets.intangible_interest_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.financial_assets.intangible_interest_sub_100
    required: False
  - Specific laws that allow exemption: prop.financial_assets.intangible_interest_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.financial_assets.intangible_interest_has_claim
    required: False
---
section: schedule_ab
question: |
  Money or property owed to you?
#right: |
#  Current Exemption Summary.
#
#  Name           |Limit            |Amount
#  ---------------|-----------------|-----------------
#  % for item in tbl_data():
#  ${ item['name'] } | ${ item['limit'] } | ${ item['amount'] }
#  % endfor
script: |
  <script>
    checkQuestionExemptions(
      
      "prop.owed_property.tax_refund_has_claim",
      "prop.owed_property.tax_refund_sub_100",
      "prop.owed_property.tax_refund_federal",
      "prop.owed_property.tax_refund_exemption_value",
      "prop.owed_property.tax_refund_exemption_laws",
      "prop.owed_property.tax_refund_exemption_value_2",
      "prop.owed_property.tax_refund_exemption_laws_2");

    checkQuestionExemptions(
      
      "prop.owed_property.family_support_has_claim",
      "prop.owed_property.family_support_sub_100",
      "prop.owed_property.family_support_alimony",
      "prop.owed_property.family_support_exemption_value",
      "prop.owed_property.family_support_exemption_laws",
      "prop.owed_property.family_support_exemption_value_2",
      "prop.owed_property.family_support_exemption_laws_2");

    checkQuestionExemptions(
      
      "prop.owed_property.other_amounts_has_claim",
      "prop.owed_property.other_amounts_sub_100",
      "prop.owed_property.other_amounts_value",
      "prop.owed_property.other_amounts_exemption_value",
      "prop.owed_property.other_amounts_exemption_laws",
      "prop.owed_property.other_amounts_exemption_value_2",
      "prop.owed_property.other_amounts_exemption_laws_2");

    checkQuestionExemptions(
      
      "prop.owed_property.first_insurance_interest_has_claim",
      "prop.owed_property.first_insurance_interest_sub_100",
      "prop.owed_property.first_insurance_interest_amount",
      "prop.owed_property.first_insurance_interest_exemption_value",
      "prop.owed_property.first_insurance_interest_exemption_laws",
      "prop.owed_property.first_insurance_interest_exemption_value_2",
      "prop.owed_property.first_insurance_interest_exemption_laws_2");

    checkQuestionExemptions(
      
      "prop.owed_property.second_insurance_interest_has_claim",
      "prop.owed_property.second_insurance_interest_sub_100",
      "prop.owed_property.second_insurance_interest_amount",
      "prop.owed_property.second_insurance_interest_exemption_value",
      "prop.owed_property.second_insurance_interest_exemption_laws",
      "prop.owed_property.second_insurance_interest_exemption_value_2",
      "prop.owed_property.second_insurance_interest_exemption_laws_2");

    checkQuestionExemptions(
      
      "prop.owed_property.third_insurance_interest_has_claim",
      "prop.owed_property.third_insurance_interest_sub_100",
      "prop.owed_property.third_insurance_interest_amount",
      "prop.owed_property.third_insurance_interest_exemption_value",
      "prop.owed_property.third_insurance_interest_exemption_laws",
      "prop.owed_property.third_insurance_interest_exemption_value_2",
      "prop.owed_property.third_insurance_interest_exemption_laws_2");

    checkQuestionExemptions(
      
      "prop.owed_property.trust_has_claim",
      "prop.owed_property.trust_sub_100",
      "prop.owed_property.trust_amount",
      "prop.owed_property.trust_exemption_value",
      "prop.owed_property.trust_exemption_laws",
      "prop.owed_property.trust_exemption_value_2",
      "prop.owed_property.trust_exemption_laws_2");

    checkQuestionExemptions(
      
      "prop.owed_property.third_party_has_claim",
      "prop.owed_property.third_party_sub_100",
      "prop.owed_property.third_party_amount",
      "prop.owed_property.third_party_exemption_value",
      "prop.owed_property.third_party_exemption_laws",
      "prop.owed_property.third_party_exemption_value_2",
      "prop.owed_property.third_party_exemption_laws_2");

    checkQuestionExemptions(
      
      "prop.owed_property.contingent_claims_has_claim",
      "prop.owed_property.contingent_claims_sub_100",
      "prop.owed_property.contingent_claims_amount",
      "prop.owed_property.contingent_claims_exemption_value",
      "prop.owed_property.contingent_claims_exemption_laws",
      "prop.owed_property.contingent_claims_exemption_value_2",
      "prop.owed_property.contingent_claims_exemption_laws_2");

    checkQuestionExemptions(
      
      "prop.owed_property.other_assets_has_claim",
      "prop.owed_property.other_assets_sub_100",
      "prop.owed_property.other_assets_amount",
      "prop.owed_property.other_assets_exemption_value",
      "prop.owed_property.other_assets_exemption_laws",
      "prop.owed_property.other_assets_exemption_value_2",
      "prop.owed_property.other_assets_exemption_laws_2");

  </script>
fields:
  - note: |
      Tax refunds owed to you
  - Tax refunds owed to you: prop.owed_property.has_tax_refund
    # default: True
    datatype: yesnoradio
  - Give specific information about them: prop.owed_property.tax_refund_description
    # default: NA
    input type: area
    show if: prop.owed_property.has_tax_refund
  - Federal amount: prop.owed_property.tax_refund_federal
    datatype: currency
    # default: 300
    show if: prop.owed_property.has_tax_refund
    required: False
  - State amount: prop.owed_property.tax_refund_state
    datatype: currency
    # default: 200
    show if: prop.owed_property.has_tax_refund
    required: False
  - Local amount: prop.owed_property.tax_refund_local
    datatype: currency
    # default: 100
    show if: prop.owed_property.has_tax_refund
    required: False
  - Claiming Exemption?: prop.owed_property.tax_refund_has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.owed_property.tax_refund_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.owed_property.tax_refund_has_claim
  - note: First Exemption
    show if: prop.owed_property.tax_refund_has_claim
  - Value of exemption being claimed: prop.owed_property.tax_refund_exemption_value
    # default: 0
    show if: prop.owed_property.tax_refund_has_claim
    datatype: currency
  - Specific laws that allow exemption: prop.owed_property.tax_refund_exemption_laws
    choices:
      - Earned Income Tax Credit (Neb Rev Stat 25-1553)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.owed_property.tax_refund_has_claim
  - note: Second Exemption
    show if: prop.owed_property.tax_refund_has_claim
  - Value of exemption being claimed: prop.owed_property.tax_refund_exemption_value_2
    # default: 0
    datatype: currency
    required: False
    show if: prop.owed_property.tax_refund_has_claim
  - Specific laws that allow exemption: prop.owed_property.tax_refund_exemption_laws_2
    choices:
      - Earned Income Tax Credit (Neb Rev Stat 25-1553)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.owed_property.tax_refund_has_claim
    required: False

  - note: |
      <br><br>
      Family support
      Examples: Past due or lump sum alimony, spousal support, child support, maintenance, divorce settlement, property settlement.
  - Family support owed to you: prop.owed_property.has_family_support
    # default: True
    datatype: yesnoradio
  - Give specific information about them: prop.owed_property.family_support_description
    # default: NA
    input type: area
    show if: prop.owed_property.has_family_support
    required: False
  - Alimony amount: prop.owed_property.family_support_alimony
    datatype: currency
    # default: 200
    show if: prop.owed_property.has_family_support
    required: False
  - Maintenance amount: prop.owed_property.family_support_maintenance
    datatype: currency
    # default: 300
    show if: prop.owed_property.has_family_support
    required: False
  - Support amount: prop.owed_property.family_support_support
    datatype: currency
    # default: 400
    show if: prop.owed_property.has_family_support
    required: False
  - Divorce Settlement amount: prop.owed_property.family_support_divorce
    datatype: currency
    # default: 1000
    show if: prop.owed_property.has_family_support
    required: False
  - Property Settlement amount: prop.owed_property.family_support_settlement
    datatype: currency
    # default: 1500
    show if: prop.owed_property.has_family_support
    required: False
  - Claiming Exemption?: prop.owed_property.family_support_has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.owed_property.family_support_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.owed_property.family_support_has_claim
  - note: First Exemption
    show if: prop.owed_property.family_support_has_claim
  - Value of exemption being claimed: prop.owed_property.family_support_exemption_value
    # default: 0
    datatype: currency
    show if: prop.owed_property.family_support_sub_100
  - Specific laws that allow exemption: prop.owed_property.family_support_exemption_laws
    choices:
      - Wages (Neb. Rev. Stat. § 25-1558)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.owed_property.family_support_has_claim
  - note: Second Exemption
    show if: prop.owed_property.family_support_has_claim
  - Value of exemption being claimed: prop.owed_property.family_support_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.owed_property.family_support_sub_100
    required: False
  - Specific laws that allow exemption: prop.owed_property.family_support_exemption_laws_2
    choices:
      - Wages (Neb. Rev. Stat. § 25-1558)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.owed_property.family_support_has_claim
    required: False

  - note: |
      <br><br>
      Other amounts someone owes you

      Examples: Unpaid wages, disability insurance payments, disability benefits, sick pay, vacation pay, workers' compensation, Social Security benefits; unpaid loans you made to someone else.
  - Other amounts owed: prop.owed_property.has_other_amounts
    # default: True
    datatype: yesnoradio
  - Describe other amounts: prop.owed_property.other_amounts_description
    # default: NA
    input type: area
    required: False
    show if: prop.owed_property.has_other_amounts
  - How much?: prop.owed_property.other_amounts_value
    datatype: currency
    # default: 200
    required: False
    show if: prop.owed_property.has_other_amounts
  - Claiming Exemption?: prop.owed_property.other_amounts_has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.owed_property.other_amounts_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.owed_property.other_amounts_has_claim
  - note: First Exemption
    show if: prop.owed_property.other_amounts_has_claim
  - Value of exemption being claimed: prop.owed_property.other_amounts_exemption_value
    # default: 0
    datatype: currency
    show if: prop.owed_property.other_amounts_sub_100
  - Specific laws that allow exemption: prop.owed_property.other_amounts_exemption_laws
    choices:
      - Wages (Neb. Rev. Stat. § 25-1558)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.owed_property.other_amounts_has_claim
  - note: Second Exemption
    show if: prop.owed_property.other_amounts_has_claim
  - Value of exemption being claimed: prop.owed_property.other_amounts_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.owed_property.other_amounts_sub_100
    required: False
  - Specific laws that allow exemption: prop.owed_property.other_amounts_exemption_laws_2
    choices:
      - Wages (Neb. Rev. Stat. § 25-1558)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.owed_property.other_amounts_has_claim
    required: False

  - note: |
      <br><br>
      Interest in insurance policies

      Examples: Health, disability, or life insurance; health savings account (HSA); credit, homeowner's, or renter's insurance
  - Has insurance policies: prop.owed_property.has_insurance_interest
    datatype: yesnoradio
    # default: True
  - note: Institution 1
    show if: prop.owed_property.has_insurance_interest
  - Institution name: prop.owed_property.first_insurance_interest_name
    # default: Institution 1
    required: False
    show if: prop.owed_property.has_insurance_interest
  - Beneficiary: prop.owed_property.first_insurance_beneficiary
    # default: Me
    required: False
    show if: prop.owed_property.has_insurance_interest
  - Amount: prop.owed_property.first_insurance_interest_amount
    datatype: currency
    # default: 400
    required: False
    show if: prop.owed_property.has_insurance_interest
  - Claiming Exemption?: prop.owed_property.first_insurance_interest_has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.owed_property.first_insurance_interest_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.owed_property.first_insurance_interest_has_claim
  - note: First Exemption
    show if: prop.owed_property.first_insurance_interest_has_claim
  - Value of exemption being claimed: prop.owed_property.first_insurance_interest_exemption_value
    # default: 0
    datatype: currency
    show if: prop.owed_property.first_insurance_interest_sub_100
  - Specific laws that allow exemption: prop.owed_property.first_insurance_interest_exemption_laws
    choices:
      - Life insurance proceeds (Neb. Rev. Stat. § 44-371)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Health Savings (Neb. Rev. Stat. § 8-1,131(2)(b))
      - Unknown law
    show if: prop.owed_property.first_insurance_interest_has_claim
  - note: Second Exemption
    show if: prop.owed_property.first_insurance_interest_has_claim
  - Value of exemption being claimed: prop.owed_property.first_insurance_interest_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.owed_property.first_insurance_interest_sub_100
    required: False
  - Specific laws that allow exemption: prop.owed_property.first_insurance_interest_exemption_laws_2
    choices:
      - Life insurance proceeds (Neb. Rev. Stat. § 44-371)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Health Savings (Neb. Rev. Stat. § 8-1,131(2)(b))
      - Unknown law
    show if: prop.owed_property.first_insurance_interest_has_claim
    required: False

  - note: Institution 2
    show if: prop.owed_property.has_insurance_interest
  - Has second insurance interest: prop.owed_property.has_second_insurance_interest
    datatype: yesnoradio
    # default: True
    show if: prop.owed_property.has_insurance_interest
  - Institution name: prop.owed_property.second_insurance_interest_name
    # default: Institution 2
    required: False
    show if: prop.owed_property.has_second_insurance_interest
  - Beneficiary: prop.owed_property.second_insurance_beneficiary
    # default: Me
    required: False
    show if: prop.owed_property.has_second_insurance_interest
  - Amount: prop.owed_property.second_insurance_interest_amount
    datatype: currency
    # default: 400
    required: False
    show if: prop.owed_property.has_second_insurance_interest
  - Claiming Exemption?: prop.owed_property.second_insurance_interest_has_claim
    # default: False
    datatype: yesnoradio
    show if: prop.owed_property.has_second_insurance_interest
  - Are you claiming less than 100% of fair market value?: prop.owed_property.second_insurance_interest_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.owed_property.second_insurance_interest_has_claim
  - note: First Exemption
    show if: prop.owed_property.second_insurance_interest_has_claim
  - Value of exemption being claimed: prop.owed_property.second_insurance_interest_exemption_value
    # default: 0
    datatype: currency
    show if: prop.owed_property.second_insurance_interest_sub_100
  - Specific laws that allow exemption: prop.owed_property.second_insurance_interest_exemption_laws
    choices:
      - Life insurance proceeds (Neb. Rev. Stat. § 44-371)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Health Savings (Neb. Rev. Stat. § 8-1,131(2)(b))
      - Unknown law
    show if: prop.owed_property.second_insurance_interest_has_claim
  - note: Second Exemption
    show if: prop.owed_property.second_insurance_interest_has_claim
  - Value of exemption being claimed: prop.owed_property.second_insurance_interest_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.owed_property.second_insurance_interest_sub_100
    required: False
  - Specific laws that allow exemption: prop.owed_property.second_insurance_interest_exemption_laws_2
    choices:
      - Life insurance proceeds (Neb. Rev. Stat. § 44-371)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Health Savings (Neb. Rev. Stat. § 8-1,131(2)(b))
      - Unknown law
    show if: prop.owed_property.second_insurance_interest_has_claim
    required: False

  - note: Institution 3
    show if: prop.owed_property.has_insurance_interest
  - Has third insurance interest: prop.owed_property.has_third_insurance_interest
    datatype: yesnoradio
    # default: True
    show if: prop.owed_property.has_insurance_interest
  - Institution name: prop.owed_property.third_insurance_interest_name
    # default: Institution 2
    required: False
    show if: prop.owed_property.has_third_insurance_interest
  - Beneficiary: prop.owed_property.third_insurance_beneficiary
    # default: Me
    required: False
    show if: prop.owed_property.has_third_insurance_interest
  - Amount: prop.owed_property.third_insurance_interest_amount
    datatype: currency
    # default: 400
    required: False
    show if: prop.owed_property.has_third_insurance_interest
  - Claiming Exemption?: prop.owed_property.third_insurance_interest_has_claim
    # default: False
    datatype: yesnoradio
    show if: prop.owed_property.has_third_insurance_interest
  - Are you claiming less than 100% of fair market value?: prop.owed_property.third_insurance_interest_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.owed_property.third_insurance_interest_has_claim
  - note: First Exemption
    show if: prop.owed_property.third_insurance_interest_has_claim
  - Value of exemption being claimed: prop.owed_property.third_insurance_interest_exemption_value
    # default: 0
    datatype: currency
    show if: prop.owed_property.third_insurance_interest_sub_100
  - Specific laws that allow exemption: prop.owed_property.third_insurance_interest_exemption_laws
    choices:
      - Life insurance proceeds (Neb. Rev. Stat. § 44-371)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Health Savings (Neb. Rev. Stat. § 8-1,131(2)(b))
      - Unknown law
    show if: prop.owed_property.third_insurance_interest_has_claim
  - note: Second Exemption
    show if: prop.owed_property.third_insurance_interest_has_claim
  - Value of exemption being claimed: prop.owed_property.third_insurance_interest_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.owed_property.third_insurance_interest_sub_100
    required: False
  - Specific laws that allow exemption: prop.owed_property.third_insurance_interest_exemption_laws_2
    choices:
      - Life insurance proceeds (Neb. Rev. Stat. § 44-371)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Health Savings (Neb. Rev. Stat. § 8-1,131(2)(b))
      - Unknown law
    show if: prop.owed_property.third_insurance_interest_has_claim
    required: False

  - note: |
      <br><br>
      Any interest in property that is due to you from someone who has died?

      If you are the beneficiary of a living trust, expect proceeds from a life insurance policy, or are currently entitled to receive property because someone has died.
  - Has interest: prop.owed_property.has_trust
    datatype: yesnoradio
    # default: True
  - Description: prop.owed_property.trust_description
    input type: area
    # default: NA
    required: False
    show if: prop.owed_property.has_trust
  - Amount: prop.owed_property.trust_amount
    datatype: currency
    # default: 300
    required: False
    show if: prop.owed_property.has_trust
  - Claiming Exemption?: prop.owed_property.trust_has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.owed_property.trust_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.owed_property.trust_has_claim
  - note: First Exemption
    show if: prop.owed_property.trust_has_claim
  - Value of exemption being claimed: prop.owed_property.trust_exemption_value
    # default: 0
    datatype: currency
    show if: prop.owed_property.trust_sub_100
  - Specific laws that allow exemption: prop.owed_property.trust_exemption_laws
    choices:
      - Structured settlement (Neb. Rev. Stat. § 25-1563.02)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.owed_property.trust_has_claim
  - note: Second Exemption
    show if: prop.owed_property.trust_has_claim
  - Value of exemption being claimed: prop.owed_property.trust_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.owed_property.trust_sub_100
    required: False
  - Specific laws that allow exemption: prop.owed_property.trust_exemption_laws_2
    choices:
      - Structured settlement (Neb. Rev. Stat. § 25-1563.02)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.owed_property.trust_has_claim
    required: False

  - note: |
      <br><br>
      Claims against third parties, whether or not you have filed a lawsuit or made a demand for payment.

      Examples: Accidents, employment disputes, insurance claims, or rights to sue.
  - Has interest: prop.owed_property.has_third_party
    datatype: yesnoradio
    # default: True
  - Description: prop.owed_property.third_party_description
    input type: area
    # default: NA
    required: False
    show if: prop.owed_property.has_third_party
  - Amount: prop.owed_property.third_party_amount
    datatype: currency
    # default: 400
    required: False
    show if: prop.owed_property.has_third_party
  - Claiming Exemption?: prop.owed_property.third_party_has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.owed_property.third_party_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.owed_property.third_party_has_claim
  - note: First Exemption
    show if: prop.owed_property.third_party_has_claim
  - Value of exemption being claimed: prop.owed_property.third_party_exemption_value
    # default: 0
    datatype: currency
    show if: prop.owed_property.third_party_sub_100
  - Specific laws that allow exemption: prop.owed_property.third_party_exemption_laws
    choices:
      - Structured settlement (Neb. Rev. Stat. § 25-1563.02)
      - Life insurance proceeds (Neb. Rev. Stat. § 44-371)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.owed_property.third_party_has_claim
  - note: Second Exemption
    show if: prop.owed_property.third_party_has_claim
  - Value of exemption being claimed: prop.owed_property.third_party_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.owed_property.third_party_sub_100
    required: False
  - Specific laws that allow exemption: prop.owed_property.third_party_exemption_laws_2
    choices:
      - Structured settlement (Neb. Rev. Stat. § 25-1563.02)
      - Life insurance proceeds (Neb. Rev. Stat. § 44-371)
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.owed_property.third_party_has_claim
    required: False

  - note: |
      <br><br>
      Other contingent and unliquidated claims of every nature, including counterclaims of the debtor and rights to set off claims
  - Has interest: prop.owed_property.has_contingent_claims
    datatype: yesnoradio
    # default: True
  - Description: prop.owed_property.contingent_claims_description
    input type: area
    # default: NA
    required: False
    show if: prop.owed_property.has_contingent_claims
  - Amount: prop.owed_property.contingent_claims_amount
    datatype: currency
    # default: 600
    required: False
    show if: prop.owed_property.has_contingent_claims
  - Claiming Exemption?: prop.owed_property.contingent_claims_has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.owed_property.contingent_claims_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.owed_property.contingent_claims_has_claim
  - note: First Exemption
    show if: prop.owed_property.contingent_claims_has_claim
  - Value of exemption being claimed: prop.owed_property.contingent_claims_exemption_value
    # default: 0
    datatype: currency
    show if: prop.owed_property.contingent_claims_sub_100
  - Specific laws that allow exemption: prop.owed_property.contingent_claims_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.owed_property.contingent_claims_has_claim
  - note: Second Exemption
    show if: prop.owed_property.contingent_claims_has_claim
  - Value of exemption being claimed: prop.owed_property.contingent_claims_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.owed_property.contingent_claims_sub_100
    required: False
  - Specific laws that allow exemption: prop.owed_property.contingent_claims_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.owed_property.contingent_claims_has_claim
    required: False


  - note: |
      <br><br>
      Any financial assets you did not already list
  - Has other financial assets: prop.owed_property.has_other_assets
    datatype: yesnoradio
    # default: True
  - Description: prop.owed_property.other_assets_description
    input type: area
    # default: NA
    required: False
    show if: prop.owed_property.has_other_assets
  - Amount: prop.owed_property.other_assets_amount
    datatype: currency
    # default: 150
    required: False
    show if: prop.owed_property.has_other_assets
  - Claiming Exemption?: prop.owed_property.other_assets_has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.owed_property.other_assets_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.owed_property.other_assets_has_claim
  - note: First Exemption
    show if: prop.owed_property.other_assets_has_claim
  - Value of exemption being claimed: prop.owed_property.other_assets_exemption_value
    # default: 0
    datatype: currency
    show if: prop.owed_property.other_assets_sub_100
  - Specific laws that allow exemption: prop.owed_property.other_assets_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.owed_property.other_assets_has_claim
  - note: Second Exemption
    show if: prop.owed_property.other_assets_has_claim
  - Value of exemption being claimed: prop.owed_property.other_assets_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.owed_property.other_assets_sub_100
    required: False
  - Specific laws that allow exemption: prop.owed_property.other_assets_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.owed_property.other_assets_has_claim
    required: False
---
section: schedule_ab
question: |
  Do you have any business-related property you own or have an interest in.
fields:
  - Do you own or have any legal or equitable interest in any business related property?: prop.business_property.has_property
    datatype: yesnoradio
    # default: True
---
section: schedule_ab
question: |
  Tell us about your business-related property
#right: |
#  Current Exemption Summary.
#
#  Name           |Limit            |Amount
#  ---------------|-----------------|-----------------
#  % for item in tbl_data():
#  ${ item['name'] } | ${ item['limit'] } | ${ item['amount'] }
#  % endfor
script: |
  <script>

    checkQuestionExemptions(
      
      "prop.business_property.ar_has_claim",
      "prop.business_property.ar_sub_100",
      "prop.business_property.ar_amount",
      "prop.business_property.ar_exemption_value",
      "prop.business_property.ar_exemption_laws",
      "prop.business_property.ar_exemption_value_2",
      "prop.business_property.ar_exemption_laws_2");

    checkQuestionExemptions(
      
      "prop.business_property.equipment_has_claim",
      "prop.business_property.equipment_sub_100",
      "prop.business_property.equipment_amount",
      "prop.business_property.equipment_exemption_value",
      "prop.business_property.equipment_exemption_laws",
      "prop.business_property.equipment_exemption_value_2",
      "prop.business_property.equipment_exemption_laws_2");

    checkQuestionExemptions(
      
      "prop.business_property.machinery_has_claim",
      "prop.business_property.machinery_sub_100",
      "prop.business_property.machinery_amount",
      "prop.business_property.machinery_exemption_value",
      "prop.business_property.machinery_exemption_laws",
      "prop.business_property.machinery_exemption_value_2",
      "prop.business_property.machinery_exemption_laws_2");

    checkQuestionExemptions(
      
      "prop.business_property.inventory_has_claim",
      "prop.business_property.inventory_sub_100",
      "prop.business_property.inventory_amount",
      "prop.business_property.inventory_exemption_value",
      "prop.business_property.inventory_exemption_laws",
      "prop.business_property.inventory_exemption_value_2",
      "prop.business_property.inventory_exemption_laws_2");

    checkQuestionExemptions(
      
      "prop.business_property.partnership_has_claim",
      "prop.business_property.partnership_sub_100",
      "prop.business_property.partnershipValue1",
      "prop.business_property.partnership_exemption_value",
      "prop.business_property.partnership_exemption_laws",
      "prop.business_property.partnership_exemption_value_2",
      "prop.business_property.partnership_exemption_laws_2");
    checkQuestionExemptions(
      
      "prop.business_property.lists_has_claim",
      "prop.business_property.lists_sub_100",
      "prop.business_property.lists_amount",
      "prop.business_property.lists_exemption_value",
      "prop.business_property.lists_exemption_laws",
      "prop.business_property.lists_exemption_value_2",
      "prop.business_property.lists_exemption_laws_2");

    checkQuestionExemptions(
      
      "prop.business_property.otherProperty_has_claim",
      "prop.business_property.otherProperty_sub_100",
      "prop.business_property.otherPropertyAmount1",
      "prop.business_property.otherProperty_exemption_value",
      "prop.business_property.otherProperty_exemption_laws",
      "prop.business_property.otherProperty_exemption_value_2",
      "prop.business_property.otherProperty_exemption_laws_2");

  </script>
fields:
  - note: |
      Accounts receiveable or commissions you already earned.
  - Has property: prop.business_property.has_ar
    datatype: yesnoradio
    # default: True
  - Describe: prop.business_property.ar_description
    input type: area
    # default: NA
    required: False
    show if: prop.business_property.has_ar
  - Amount: prop.business_property.ar_amount
    datatype: currency
    # default: 300
    required: False
    show if: prop.business_property.has_ar
  - Claiming Exemption?: prop.business_property.ar_has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.business_property.ar_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.business_property.ar_has_claim
  - note: First Exemption
    show if: prop.business_property.ar_has_claim
  - Value of exemption being claimed: prop.business_property.ar_exemption_value
    # default: 0
    datatype: currency
    show if: prop.business_property.ar_sub_100
  - Specific laws that allow exemption: prop.business_property.ar_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Tools of the trade (Neb. Rev. Stat. § 25-1556(1)(d))
      - Unknown law
    show if: prop.business_property.ar_has_claim
  - note: Second Exemption
    show if: prop.business_property.ar_has_claim
  - Value of exemption being claimed: prop.business_property.ar_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.business_property.ar_sub_100
    required: False
  - Specific laws that allow exemption: prop.business_property.ar_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Tools of the trade (Neb. Rev. Stat. § 25-1556(1)(d))
      - Unknown law
    show if: prop.business_property.ar_has_claim
    required: False

  - note: |
      <br><br>
      Office equipment, furnishings, and supplies

      Examples: Business-related computers, software, modems, printers, copiers, fax machines, rugs, telephones, desks, chairs, electronic devices
  - Has property: prop.business_property.has_equipment
    datatype: yesnoradio
    # default: True
  - Describe: prop.business_property.equipment_description
    input type: area
    # default: NA
    required: False
    show if: prop.business_property.has_equipment
  - Amount: prop.business_property.equipment_amount
    datatype: currency
    # default: 400
    required: False
    show if: prop.business_property.has_equipment
  - Claiming Exemption?: prop.business_property.equipment_has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.business_property.equipment_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.business_property.equipment_has_claim
  - note: First Exemption
    show if: prop.business_property.equipment_has_claim
  - Value of exemption being claimed: prop.business_property.equipment_exemption_value
    # default: 0
    datatype: currency
    show if: prop.business_property.equipment_sub_100
  - Specific laws that allow exemption: prop.business_property.equipment_exemption_laws
    choices:
      - Tools of the trade (Neb. Rev. Stat. § 25-1556(1)(d))
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.business_property.equipment_has_claim
  - note: Second Exemption
    show if: prop.business_property.equipment_has_claim
  - Value of exemption being claimed: prop.business_property.equipment_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.business_property.equipment_sub_100
    required: False
  - Specific laws that allow exemption: prop.business_property.equipment_exemption_laws_2
    choices:
      - Tools of the trade (Neb. Rev. Stat. § 25-1556(1)(d))
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.business_property.equipment_has_claim
    required: False


  - note: |
      <br><br>
      Machinery, fixtures, equipment, supplies you use in business, and tools of your trade.
  - Has property: prop.business_property.has_machinery
    datatype: yesnoradio
    # default: True
  - Describe: prop.business_property.machinery_description
    input type: area
    # default: NA
    required: False
    show if: prop.business_property.has_machinery
  - Amount: prop.business_property.machinery_amount
    datatype: currency
    # default: 100
    required: False
    show if: prop.business_property.has_machinery
  - Claiming Exemption?: prop.business_property.machinery_has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.business_property.machinery_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.business_property.machinery_has_claim
  - note: First Exemption
    show if: prop.business_property.machinery_has_claim
  - Value of exemption being claimed: prop.business_property.machinery_exemption_value
    # default: 0
    datatype: currency
    show if: prop.business_property.machinery_sub_100
  - Specific laws that allow exemption: prop.business_property.machinery_exemption_laws
    choices:
      - Tools of the trade (Neb. Rev. Stat. § 25-1556(1)(d))
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.business_property.machinery_has_claim
  - note: Second Exemption
    show if: prop.business_property.machinery_has_claim
  - Value of exemption being claimed: prop.business_property.machinery_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.business_property.machinery_sub_100
    required: False
  - Specific laws that allow exemption: prop.business_property.machinery_exemption_laws_2
    choices:
      - Tools of the trade (Neb. Rev. Stat. § 25-1556(1)(d))
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.business_property.machinery_has_claim
    required: False

  - note: |
      <br><br>
      Inventory
  - Has property: prop.business_property.has_inventory
    datatype: yesnoradio
    # default: True
  - Describe: prop.business_property.inventory_description
    input type: area
    # default: NA
    required: False
    show if: prop.business_property.has_inventory
  - Amount: prop.business_property.inventory_amount
    datatype: currency
    # default: 500
    required: False
    show if: prop.business_property.has_inventory
  - Claiming Exemption?: prop.business_property.inventory_has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.business_property.inventory_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.business_property.inventory_has_claim
  - note: First Exemption
    show if: prop.business_property.inventory_has_claim
  - Value of exemption being claimed: prop.business_property.inventory_exemption_value
    # default: 0
    datatype: currency
    show if: prop.business_property.inventory_sub_100
  - Specific laws that allow exemption: prop.business_property.inventory_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Tools of the trade (Neb. Rev. Stat. § 25-1556(1)(d))
      - Unknown law
    show if: prop.business_property.inventory_has_claim
  - note: Second Exemption
    show if: prop.business_property.inventory_has_claim
  - Value of exemption being claimed: prop.business_property.inventory_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.business_property.inventory_sub_100
    required: False
  - Specific laws that allow exemption: prop.business_property.inventory_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Tools of the trade (Neb. Rev. Stat. § 25-1556(1)(d))
      - Unknown law
    show if: prop.business_property.inventory_has_claim
    required: False

  - note: |
      <br><br>
      Interests in partnerships or joint ventures
  - Has property: prop.business_property.has_partnerships
    datatype: yesnoradio
    # default: True
  - Partnership 1: prop.business_property.partnershipDescription1
    # default: partner 1
    required: False
    show if: prop.business_property.has_partnerships
  - Ownership %: prop.business_property.partnershipOwnership1
    datatype: percent
    # default: 10
    required: False
    show if: prop.business_property.has_partnerships
  - Amount: prop.business_property.partnershipValue1
    datatype: currency
    # default: 1000
    required: False
    show if: prop.business_property.has_partnerships
  - Partnership 2: prop.business_property.partnershipDescription2
    # default: partner 2
    required: False
    show if: prop.business_property.has_partnerships
  - Ownership %: prop.business_property.partnershipOwnership2
    datatype: percent
    # default: 10
    required: False
    show if: prop.business_property.has_partnerships
  - Amount: prop.business_property.partnershipValue2
    datatype: currency
    # default: 1000
    required: False
    show if: prop.business_property.has_partnerships
  - Partnership 3: prop.business_property.partnershipDescription3
    # default: partner 3
    required: False
    show if: prop.business_property.has_partnerships
  - Ownership %: prop.business_property.partnershipOwnership3
    datatype: percent
    # default: 10
    required: False
    show if: prop.business_property.has_partnerships
  - Amount: prop.business_property.partnershipValue3
    datatype: currency
    # default: 1000
    required: False
    show if: prop.business_property.has_partnerships
  - Partnership 4: prop.business_property.partnershipDescription4
    # default: partner 4
    required: False
    show if: prop.business_property.has_partnerships
  - Ownership %: prop.business_property.partnershipOwnership4
    datatype: percent
    # default: 10
    required: False
    show if: prop.business_property.has_partnerships
  - Amount: prop.business_property.partnershipValue4
    datatype: currency
    # default: 1000
    required: False
    show if: prop.business_property.has_partnerships
  - Partnership 5: prop.business_property.partnershipDescription5
    # default: partner 5
    required: False
    show if: prop.business_property.has_partnerships
  - Ownership %: prop.business_property.partnershipOwnership5
    datatype: percent
    # default: 10
    required: False
    show if: prop.business_property.has_partnerships
  - Amount: prop.business_property.partnershipValue5
    datatype: currency
    # default: 1000
    required: False
    show if: prop.business_property.has_partnerships
  - Claiming Exemption?: prop.business_property.partnership_has_claim
    # default: False
    datatype: yesnoradio
    show if: prop.business_property.has_partnerships
  - Are you claiming less than 100% of fair market value?: prop.business_property.partnership_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.business_property.partnership_has_claim
  - note: First Exemption
    show if: prop.business_property.partnership_has_claim
  - Value of exemption being claimed: prop.business_property.partnership_exemption_value
    # default: 0
    datatype: currency
    show if: prop.business_property.partnership_sub_100
  - Specific laws that allow exemption: prop.business_property.partnership_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Tools of the trade (Neb. Rev. Stat. § 25-1556(1)(d))
      - Unknown law
    show if: prop.business_property.partnership_has_claim
  - note: Second Exemption
    show if: prop.business_property.partnership_has_claim
  - Value of exemption being claimed: prop.business_property.partnership_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.business_property.partnership_sub_100
    required: False
  - Specific laws that allow exemption: prop.business_property.partnership_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Tools of the trade (Neb. Rev. Stat. § 25-1556(1)(d))
      - Unknown law
    show if: prop.business_property.partnership_has_claim
    required: False

  - note: |
      <br><br>
      Customer lists, mailing lists, or other compilations
  - Has property: prop.business_property.has_lists
    datatype: yesnoradio
    # default: True
  - Do your lists include personally identifiable information?: prop.business_property.has_identity_lists
    datatype: yesnoradio
    # default: True
    required: False
    show if: prop.business_property.has_lists
  - Describe: prop.business_property.lists_description
    input type: area
    # default: NA
    required: False
    show if: prop.business_property.has_lists
  - Amount: prop.business_property.lists_amount
    datatype: currency
    # default: 800
    required: False
    show if: prop.business_property.has_lists
  - Claiming Exemption?: prop.business_property.lists_has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.business_property.lists_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.business_property.lists_has_claim
  - note: First Exemption
    show if: prop.business_property.lists_has_claim
  - Value of exemption being claimed: prop.business_property.lists_exemption_value
    # default: 0
    datatype: currency
    show if: prop.business_property.lists_sub_100
  - Specific laws that allow exemption: prop.business_property.lists_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Tools of the trade (Neb. Rev. Stat. § 25-1556(1)(d))
      - Unknown law
    show if: prop.business_property.lists_has_claim
  - note: Second Exemption
    show if: prop.business_property.lists_has_claim
  - Value of exemption being claimed: prop.business_property.lists_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.business_property.lists_sub_100
    required: False
  - Specific laws that allow exemption: prop.business_property.lists_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Tools of the trade (Neb. Rev. Stat. § 25-1556(1)(d))
      - Unknown law
    show if: prop.business_property.lists_has_claim
    required: False

  - note: |
      <br><br>
      Any business-related property you did not already list
  - Has property: prop.business_property.has_other
    datatype: yesnoradio
    # default: True
  - Other Property 1: prop.business_property.otherPropertyDescription1
    # default: NA
    required: False
    show if: prop.business_property.has_other
  - Amount: prop.business_property.otherPropertyAmount1
    datatype: currency
    # default: 200
    required: false
    show if: prop.business_property.has_other
  - Other Property 2: prop.business_property.otherPropertyDescription2
    # default: NA
    required: False
    show if: prop.business_property.has_other
  - Amount: prop.business_property.otherPropertyAmount2
    datatype: currency
    # default: 200
    required: false
    show if: prop.business_property.has_other
  - Other Property 3: prop.business_property.otherPropertyDescription3
    # default: NA
    required: False
    show if: prop.business_property.has_other
  - Amount: prop.business_property.otherPropertyAmount3
    datatype: currency
    # default: 200
    required: false
    show if: prop.business_property.has_other
  - Other Property 4: prop.business_property.otherPropertyDescription4
    # default: NA
    required: False
    show if: prop.business_property.has_other
  - Amount: prop.business_property.otherPropertyAmount4
    datatype: currency
    # default: 200
    required: false
    show if: prop.business_property.has_other
  - Other Property 5: prop.business_property.otherPropertyDescription5
    # default: NA
    required: False
    show if: prop.business_property.has_other
  - Amount: prop.business_property.otherPropertyAmount5
    datatype: currency
    # default: 200
    required: false
    show if: prop.business_property.has_other
  - Other Property 6: prop.business_property.otherPropertyDescription6
    # default: NA
    required: False
    show if: prop.business_property.has_other
  - Amount: prop.business_property.otherPropertyAmount6
    datatype: currency
    # default: 200
    required: false
    show if: prop.business_property.has_other
  - Claiming Exemption?: prop.business_property.otherProperty_has_claim
    # default: False
    datatype: yesnoradio
    show if: prop.business_property.has_other
  - Are you claiming less than 100% of fair market value?: prop.business_property.otherProperty_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.business_property.otherProperty_has_claim
  - note: First Exemption
    show if: prop.business_property.otherProperty_has_claim
  - Value of exemption being claimed: prop.business_property.otherProperty_exemption_value
    # default: 0
    datatype: currency
    show if: prop.business_property.otherProperty_sub_100
  - Specific laws that allow exemption: prop.business_property.otherProperty_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Tools of the trade (Neb. Rev. Stat. § 25-1556(1)(d))
      - Unknown law
    show if: prop.business_property.otherProperty_has_claim
  - note: Second Exemption
    show if: prop.business_property.otherProperty_has_claim
  - Value of exemption being claimed: prop.business_property.otherProperty_exemption_value_2
    # default: 0
    datatype: currency
    required: False
    show if: prop.business_property.otherProperty_sub_100
  - Specific laws that allow exemption: prop.business_property.otherProperty_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Tools of the trade (Neb. Rev. Stat. § 25-1556(1)(d))
      - Unknown law
    show if: prop.business_property.otherProperty_has_claim
    required: False

---
section: schedule_ab
question: |
  Do you own or have any legal or equitable interest in any farm- or commercial fishing-related property?
fields:
  - Do you own or have any legal or equitable interest in any business related property?: prop.farming_property.has_property
    datatype: yesnoradio
    # default: True
---
section: schedule_ab
question: |
  Tell us about your Farm and Commecial Fishing-related property
#right: |
#  Current Exemption Summary.
#
#  Name           |Limit            |Amount
#  ---------------|-----------------|-----------------
#  % for item in tbl_data():
#  ${ item['name'] } | ${ item['limit'] } | ${ item['amount'] }
#  % endfor
script: |
  <script>
    checkQuestionExemptions(
      
      "prop.farming_property.has_animal_claim",
      "prop.farming_property.animal_sub_100",
      "prop.farming_property.animal_amount",
      "prop.farming_property.animal_exemption_value",
      "prop.farming_property.animal_exemption_laws",
      "prop.farming_property.animal_exemption_value_2",
      "prop.farming_property.animal_exemption_laws_2");

    checkQuestionExemptions(
      
      "prop.farming_property.has_crops_claim",
      "prop.farming_property.crops_sub_100",
      "prop.farming_property.crop_amount",
      "prop.farming_property.crops_exemption_value",
      "prop.farming_property.crops_exemption_laws",
      "prop.farming_property.crops_exemption_value_2",
      "prop.farming_property.crops_exemption_laws_2");

    checkQuestionExemptions(
      
      "prop.farming_property.has_equipment_claim",
      "prop.farming_property.equipment_sub_100",
      "prop.farming_property.equipment_amount",
      "prop.farming_property.equipment_exemption_value",
      "prop.farming_property.equipment_exemption_laws",
      "prop.farming_property.equipment_exemption_value_2",
      "prop.farming_property.equipment_exemption_laws_2");

    checkQuestionExemptions(
      
      "prop.farming_property.has_supplies_claim",
      "prop.farming_property.supplies_sub_100",
      "prop.farming_property.supplies_amount",
      "prop.farming_property.supplies_exemption_value",
      "prop.farming_property.supplies_exemption_laws",
      "prop.farming_property.supplies_exemption_value_2",
      "prop.farming_property.supplies_exemption_laws_2");

    checkQuestionExemptions(
      
      "prop.farming_property.has_fishing_claim",
      "prop.farming_property.fishing_sub_100",
      "prop.farming_property.commercial_amount",
      "prop.farming_property.fishing_exemption_value",
      "prop.farming_property.fishing_exemption_laws",
      "prop.farming_property.fishing_exemption_value_2",
      "prop.farming_property.fishing_exemption_laws_2");

  </script>
fields:
  - note: |
      Farm animals
  - Has property: prop.farming_property.has_animals
    datatype: yesnoradio
    # default: True
  - Describe: prop.farming_property.animal_description
    input type: area
    # default: NA
    required: False
    show if: prop.farming_property.has_animals
  - Amount: prop.farming_property.animal_amount
    datatype: currency
    # default: 800
    required: False
    show if: prop.farming_property.has_animals
  - Claiming Exemption?: prop.farming_property.has_animal_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.farming_property.animal_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.farming_property.has_animal_claim
  - note: First Exemption
    show if: prop.farming_property.has_animal_claim
  - Value of exemption being claimed: prop.farming_property.animal_exemption_value
    # default: 0
    datatype: currency
    show if: prop.farming_property.animal_sub_100
  - Specific laws that allow exemption: prop.farming_property.animal_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.farming_property.has_animal_claim
  - note: Second Exemption
    show if: prop.farming_property.has_animal_claim
  - Value of exemption being claimed: prop.farming_property.animal_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.farming_property.animal_sub_100
    required: False
  - Specific laws that allow exemption: prop.farming_property.animal_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.farming_property.has_animal_claim
    required: False

  - note: |
      Crops --- either growing or harvested
  - Has property: prop.farming_property.has_crops
    datatype: yesnoradio
    # default: True
  - Describe: prop.farming_property.crop_description
    input type: area
    # default: NA
    required: False
    show if: prop.farming_property.has_crops
  - Amount: prop.farming_property.crop_amount
    datatype: currency
    # default: 440
    required: False
    show if: prop.farming_property.has_crops
    #farm crops exemptions
  - Claiming Exemption?: prop.farming_property.has_crops_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.farming_property.crops_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.farming_property.has_crops_claim
  - note: First Exemption
    show if: prop.farming_property.has_crops_claim
  - Value of exemption being claimed: prop.farming_property.crops_exemption_value
    # default: 0
    datatype: currency
    show if: prop.farming_property.crops_sub_100
  - Specific laws that allow exemption: prop.farming_property.crops_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.farming_property.has_crops_claim
  - note: Second Exemption
    show if: prop.farming_property.has_crops_claim
  - Value of exemption being claimed: prop.farming_property.crops_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.farming_property.crops_sub_100
    required: False
  - Specific laws that allow exemption: prop.farming_property.crops_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.farming_property.has_crops_claim
    required: False

  - note: |
      Farm and fishing equipment, implements, machinery, fixtures, and tools of trade
  - Has property: prop.farming_property.has_equipment
    datatype: yesnoradio
    # default: True
  - Describe: prop.farming_property.equipment_description
    input type: area
    # default: NA
    required: False
    show if: prop.farming_property.has_equipment
  - Amount: prop.farming_property.equipment_amount
    datatype: currency
    # default: 5000
    required: False
    show if: prop.farming_property.has_equipment
  - Claiming Exemption?: prop.farming_property.has_equipment_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.farming_property.equipment_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.farming_property.has_equipment_claim
  - note: First Exemption
    show if: prop.farming_property.has_equipment_claim
  - Value of exemption being claimed: prop.farming_property.equipment_exemption_value
    # default: 0
    datatype: currency
    show if: prop.farming_property.equipment_sub_100
  - Specific laws that allow exemption: prop.farming_property.equipment_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.farming_property.has_equipment_claim
  - note: Second Exemption
    show if: prop.farming_property.has_equipment_claim
  - Value of exemption being claimed: prop.farming_property.equipment_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.farming_property.equipment_sub_100
    required: False
  - Specific laws that allow exemption: prop.farming_property.equipment_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.farming_property.has_equipment_claim
    required: False

  - note: |
      Farm and fishing supplies, chemicals, and feed
  - Has property: prop.farming_property.has_supplies
    datatype: yesnoradio
    # default: True
  - Describe: prop.farming_property.supplies_description
    input type: area
    # default: NA
    required: False
    show if: prop.farming_property.has_supplies
  - Amount: prop.farming_property.supplies_amount
    datatype: currency
    # default: 400
    required: False
    show if: prop.farming_property.has_supplies
  - Claiming Exemption?: prop.farming_property.has_supplies_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.farming_property.supplies_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.farming_property.has_supplies_claim
  - note: First Exemption
    show if: prop.farming_property.has_supplies_claim
  - Value of exemption being claimed: prop.farming_property.supplies_exemption_value
    # default: 0
    datatype: currency
    show if: prop.farming_property.supplies_sub_100
  - Specific laws that allow exemption: prop.farming_property.supplies_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.farming_property.has_supplies_claim
  - note: Second Exemption
    show if: prop.farming_property.has_supplies_claim
  - Value of exemption being claimed: prop.farming_property.supplies_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.farming_property.supplies_sub_100
    required: False
  - Specific laws that allow exemption: prop.farming_property.supplies_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.farming_property.has_supplies_claim
    required: False

  - note: |
      Any farm - and commercial fishing-related property you did not already list
  - Has property: prop.farming_property.has_commercial
    datatype: yesnoradio
    # default: True
  - Describe: prop.farming_property.commercial_description
    input type: area
    # default: NA
    required: False
    show if: prop.farming_property.has_commercial
  - Amount: prop.farming_property.commercial_amount
    datatype: currency
    # default: 300
    required: False
    show if: prop.farming_property.has_commercial
    #farm fishing exemptions
  - Claiming Exemption?: prop.farming_property.has_fishing_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.farming_property.fishing_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.farming_property.has_fishing_claim
  - note: First Exemption
    show if: prop.farming_property.has_fishing_claim
  - Value of exemption being claimed: prop.farming_property.fishing_exemption_value
    # default: 0
    datatype: currency
    show if: prop.farming_property.fishing_sub_100
  - Specific laws that allow exemption: prop.farming_property.fishing_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.farming_property.has_fishing_claim
  - note: Second Exemption
    show if: prop.farming_property.has_fishing_claim
  - Value of exemption being claimed: prop.farming_property.fishing_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.farming_property.fishing_sub_100
    required: False
  - Specific laws that allow exemption: prop.farming_property.fishing_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.farming_property.has_fishing_claim
    required: False

---
section: schedule_ab
question: |
  Describe all property that you haven't already listed
#right: |
#  Current Exemption Summary.
#
#  Name           |Limit            |Amount
#  ---------------|-----------------|-----------------
#  % for item in tbl_data():
#  ${ item['name'] } | ${ item['limit'] } | ${ item['amount'] }
#  % endfor
script: |
  <script>
    checkQuestionExemptions(
      
      "prop.other_prop_has_claim",
      "prop.other_prop_sub_100",
      "prop.other_prop_value",
      "prop.other_prop_exemption_value",
      "prop.other_prop_exemption_laws",
      "prop.other_prop_exemption_value_2",
      "prop.other_prop_exemption_laws_2");
  </script>
fields:
  - note: |
      Do you have other property of any kind you did not already list?

      Examples: Season tickets, country club membership
  - Has property: prop.has_other_prop
    datatype: yesnoradio
    # default: True
  - Describe: prop.other_prop_description
    input type: area
    required: False
    # default: NA
    show if: prop.has_other_prop
  - Property value: prop.other_prop_value
    datatype: currency
    # default: 300
    required: False
    show if: prop.has_other_prop
  - Has second unlisted property?: prop.has_second_other_prop
    datatype: yesnoradio
    # default: True
    show if: prop.has_other_prop
  - Property value: prop.other_prop_value2
    datatype: currency
    # default: 300
    required: False
    show if: prop.has_second_other_prop
  - Has third unlisted property?: prop.has_third_other_prop
    datatype: yesnoradio
    # default: True
    show if: prop.has_other_prop
  - Property value: prop.other_prop_value3
    datatype: currency
    # default: 300
    required: False
    show if: prop.has_third_other_prop
  - Claiming Exemption?: prop.other_prop_has_claim
    # default: False
    datatype: yesnoradio
  - Are you claiming less than 100% of fair market value?: prop.other_prop_sub_100
    # default: False
    datatype: yesnoradio
    show if: prop.other_prop_has_claim
  - note: First Exemption
    show if: prop.other_prop_has_claim
  - Value of exemption being claimed: prop.other_prop_exemption_value
    # default: 0
    datatype: currency
    show if: prop.other_prop_sub_100
  - Specific laws that allow exemption: prop.other_prop_exemption_laws
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.other_prop_has_claim
  - note: Second Exemption
    show if: prop.other_prop_has_claim
  - Value of exemption being claimed: prop.other_prop_exemption_value_2
    # default: 0
    datatype: currency
    show if: prop.other_prop_sub_100
    required: False
  - Specific laws that allow exemption: prop.other_prop_exemption_laws_2
    choices:
      - Wildcard (Neb. Rev. Stat. § 25-1552(1)(c))
      - Unknown law
    show if: prop.other_prop_has_claim
    required: False
---
code: |
  debtor_name = debtor[0].name.first + " " + debtor[0].name.middle + " " + debtor[0].name.last
  if len(debtor) > 1:
    debtor2_name = debtor[1].name.first + " " + debtor[1].name.middle + " " + debtor[1].name.last
  else:
    debtor2_name = ''
---
code: |
  debtor_name = debtor[0].name.first + " " + debtor[0].name.middle + " " + debtor[0].name.last
  if len(debtor) > 1:
    debtor2_name = debtor[1].name.first + " " + debtor[1].name.middle + " " + debtor[1].name.last
  else:
    debtor2_name = ''
  ab = {}
  #Start exemptions logic
  sc = {}
  sc['debtor1_name_1'] = debtor_name
  sc['debtor1_name_2'] = debtor_name
  sc['debtor2_name_1'] = debtor2_name
  sc['case_number_1'] = case_number
  sc['case_number_2'] = case_number
  sc['bankruptcy_district'] = current_district
  sc['isAmended'] = amended_filing
  sc_i = 1
  ol_i = 0

  ab['debtor1_name_1'] = debtor_name
  ab['debtor1_name_2'] = debtor_name
  ab['debtor1_name_3'] = debtor_name
  ab['debtor1_name_4'] = debtor_name
  ab['debtor1_name_5'] = debtor_name
  ab['debtor1_name_6'] = debtor_name
  ab['debtor1_name_7'] = debtor_name
  ab['debtor1_name_8'] = debtor_name
  ab['debtor1_name_9'] = debtor_name
  ab['debtor1_name_10'] = debtor_name
  ab['debtor2_name_1'] = debtor2_name
  ab['bankruptcy_district'] = current_district
  ab['case_number_1'] = case_number
  ab['case_number_2'] = case_number
  ab['case_number_3'] = case_number
  ab['case_number_4'] = case_number
  ab['case_number_5'] = case_number
  ab['case_number_6'] = case_number
  ab['case_number_7'] = case_number
  ab['case_number_8'] = case_number
  ab['case_number_9'] = case_number
  ab['case_number_10'] = case_number
  ab['isAmended'] = amended_filing

  #
  # Property Interests
  # Section 1
  #

  if len(prop.interests) > 0:
    ab['hasInterest'] = True
    i = 1
    for interest in prop.interests:
      ab['prop'+str(i)+'Debtor1Only'] = True if interest.who == 'Debtor 1 only' or len(debtor) == 1 else False
      ab['prop'+str(i)+'Debtor2Only'] = True if interest.who == 'Debtor 2 only' else False
      ab['prop'+str(i)+'BothDebtorsOnly'] = True if interest.who == 'Debtor 1 and Debtor 2 only' else False
      ab['prop'+str(i)+'AtLeastOneDebtor'] = True if interest.who == 'At least one of the debtors and another' else False
      ab['prop'+str(i)+'Street'] = interest.street
      ab['prop'+str(i)+'City'] = interest.city
      ab['prop'+str(i)+'State'] = interest.state
      ab['prop'+str(i)+'Zip'] = interest.zip
      ab['prop'+str(i)+'County'] = interest.county
      ab['prop'+str(i)+'SingleFam'] = interest.type['Single-family home']
      ab['prop'+str(i)+'Duplex'] = interest.type['Duplex or Multi-unit building']
      ab['prop'+str(i)+'Condo'] = interest.type['Condominium or cooperative']
      ab['prop'+str(i)+'Mobile'] = interest.type['Manufactured or mobile home']
      ab['prop'+str(i)+'Land'] = interest.type['Land']
      ab['prop'+str(i)+'Investment'] = interest.type['Investment property']
      ab['prop'+str(i)+'Timeshare'] = interest.type['Timeshare']
      ab['prop'+str(i)+'Other'] = interest.type['Other']
      if interest.type['Other']:
        ab['prop'+str(i)+'OtherDesc'] = interest.other_type
      ab['prop'+str(i)+'CurrValue'] = currency(interest.current_value)
      ab['prop'+str(i)+'CurrOwed'] = currency(interest.current_owned_value)
      ab['prop'+str(i)+'InterestNature'] = interest.ownership_interest
      ab['prop'+str(i)+'_isCommunityProp'] = interest.is_community_property
      ab['prop'+str(i)+'ID'] = interest.other_info

      #exemption logic
      if interest.is_claiming_exemption == True:
        sc['desc'+str(sc_i)] = "Property Interest: " + str(interest.street) + ", " + str(interest.city)
        sc['currOwnedVal'+str(sc_i)] = interest.current_owned_value
        sc['isCustExempt'+str(sc_i)] = False if interest.claiming_sub_100 == False else True
        sc['custExemptVal'+str(sc_i)] = interest.exemption_value if interest.claiming_sub_100 == True else None
        sc['laws'+str(sc_i)] = interest.exemption_laws
        sc['isFairMarket'+str(sc_i)] = False if interest.claiming_sub_100 == True else True
        sc['line'+str(sc_i)] = "1." + str(i)
        sc_i += 1
      if interest.is_claiming_exemption and interest.exemption_value_2:
        sc['desc'+str(sc_i)] = "Property Interest: " + str(interest.street) + ", " + str(interest.city)
        sc['currOwnedVal'+str(sc_i)] = interest.current_owned_value
        sc['isCustExempt'+str(sc_i)] = False if interest.claiming_sub_100 == False else True
        sc['custExemptVal'+str(sc_i)] = interest.exemption_value_2 if interest.claiming_sub_100 == True else None
        sc['laws'+str(sc_i)] = interest.exemption_laws_2
        sc['isFairMarket'+str(sc_i)] = False if interest.claiming_sub_100 == True else True
        sc['line'+str(sc_i)] = "1." + str(i)
        sc_i += 1

      i += 1
      ol_i += 1
    ab['interestsTotal'] = currency(sum(interest.current_owned_value for interest in prop.interests))
  else:
    ab['hasNoInterest'] = True

  #
  # Vehicles
  #

  if len(prop.ab_vehicles) > 0:
    ab['hasVehicles'] = True
    i = 1
    for car in prop.ab_vehicles:
      ab['v'+str(i)+'Make'] = car.make
      ab['v'+str(i)+'Model'] = car.model
      ab['v'+str(i)+'Year'] = car.year
      ab['v'+str(i)+'Milage'] = car.milage
      ab['v'+str(i)+'OtherInfo'] = car.other_info
      ab['v'+str(i)+'CurrValue'] = currency(car.current_value)
      ab['v'+str(i)+'CurrOwned'] = currency(car.current_owned_value)
      ab['v'+str(i)+'_isCommunity'] = car.is_community_property
      ab['v'+str(i)+'Debtor1Only'] = True if car.who == 'Debtor 1 only' or len(debtor) == 1 else False
      ab['v'+str(i)+'Debtor2Only'] = True if car.who == 'Debtor 2 only' else False
      ab['v'+str(i)+'BothDebtorsOnly'] = True if car.who == 'Debtor 1 and Debtor 2 only' else False
      ab['v'+str(i)+'AtLeastOneDebtor'] = True if car.who == 'At least one of the debtors and another' else False

      #exemption logic
      if car.is_claiming_exemption == True:
        sc['desc'+str(sc_i)] = "Vehicle Interest: " + car.make + ", " + str(car.year)
        sc['currOwnedVal'+str(sc_i)] = car.current_owned_value
        sc['isCustExempt'+str(sc_i)] = car.claiming_sub_100
        sc['custExemptVal'+str(sc_i)] = car.exemption_value if car.claiming_sub_100 == True else None
        sc['laws'+str(sc_i)] = car.exemption_laws
        sc['isFairMarket'+str(sc_i)] = False if car.claiming_sub_100 == True else True
        sc['line'+str(sc_i)] = "3."+ str(i)
        sc_i += 1
      if car.is_claiming_exemption == True and car.exemption_value_2:
        sc['desc'+str(sc_i)] = "Vehicle Interest: " + car.make + ", " + str(car.year)
        sc['currOwnedVal'+str(sc_i)] = car.current_owned_value
        sc['isCustExempt'+str(sc_i)] = car.claiming_sub_100
        sc['custExemptVal'+str(sc_i)] = car.exemption_value_2 if car.claiming_sub_100 == True else None
        sc['laws'+str(sc_i)] = car.exemption_laws_2
        sc['isFairMarket'+str(sc_i)] = False if car.claiming_sub_100 == True else True
        sc['line'+str(sc_i)] = "3."+ str(i)
        sc_i += 1

      i += 1
      ol_i += 1
  else:
    ab['noVehicles'] = True

  #
  # Other Vehicles
  #

  if len(prop.ab_other_vehicles) > 0:
    ab['hasOtherVehicles'] = True
    i = 1
    for car in prop.ab_other_vehicles:
      ab['w'+str(i)+'Make'] = car.make
      ab['w'+str(i)+'Model'] = car.model
      ab['w'+str(i)+'Year'] = car.year
      ab['w'+str(i)+'OtherInfo'] = car.other_info
      ab['w'+str(i)+'CurrValue'] = currency(car.current_value)
      ab['w'+str(i)+'CurrOwned'] = currency(car.current_owned_value)
      ab['w'+str(i)+'_isCommunity'] = car.is_community_property
      ab['w'+str(i)+'Debtor1Only'] = True if car.who == 'Debtor 1 only' or len(debtor) == 1 else False
      ab['w'+str(i)+'Debtor2Only'] = True if car.who == 'Debtor 2 only' else False
      ab['w'+str(i)+'BothDebtorsOnly'] = True if car.who == 'Debtor 1 and Debtor 2 only' else False
      ab['w'+str(i)+'AtLeastOneDebtor'] = True if car.who == 'At least one of the debtors and another' else False

      #exemption logic
      if car.is_claiming_exemption == True:
        sc['desc'+str(sc_i)] = "Other Vehicle Interest: " + car.make + ", " + str(car.year)
        sc['currOwnedVal'+str(sc_i)] = car.current_owned_value
        sc['isCustExempt'+str(sc_i)] = car.claiming_sub_100
        sc['custExemptVal'+str(sc_i)] = car.exemption_value if car.claiming_sub_100 == True else None
        sc['laws'+str(sc_i)] = car.exemption_laws
        sc['isFairMarket'+str(sc_i)] = False if car.claiming_sub_100 == True else True
        sc['line'+str(sc_i)] = "4."+str(i)
        sc_i += 1
      if car.is_claiming_exemption == True and car.exemption_value_2:
        sc['desc'+str(sc_i)] = "Other Vehicle Interest: " + car.make + ", " + str(car.year)
        sc['currOwnedVal'+str(sc_i)] = car.current_owned_value
        sc['isCustExempt'+str(sc_i)] = car.claiming_sub_100
        sc['custExemptVal'+str(sc_i)] = car.exemption_value_2 if car.claiming_sub_100 == True else None
        sc['laws'+str(sc_i)] = car.exemption_laws_2
        sc['isFairMarket'+str(sc_i)] = False if car.claiming_sub_100 == True else True
        sc['line'+str(sc_i)] = "4."+str(i)
        sc_i += 1

      i += 1
      ol_i += 1
    ab['p2OwnedTotal'] = currency(sum(vehicle.current_owned_value for vehicle in prop.ab_vehicles) + sum(vehicle.current_owned_value for vehicle in prop.ab_other_vehicles))
  else:
    ab['noOtherVehicles'] = True

  #
  # Household Goods
  #

  if prop.has_household_goods == True:
    ab['hasHouseholdGoods'] = True
    ab['householdDesc'] = prop.household_goods_description
    ab['householdAmt'] = currency(prop.household_goods_value)

    #exemption logic
    if prop.household_goods_is_claiming_exemption == True:
      sc['desc'+str(sc_i)] = "Household Goods: " + prop.household_goods_description
      sc['currOwnedVal'+str(sc_i)] = prop.household_goods_value
      sc['isCustExempt'+str(sc_i)] = prop.household_goods_claiming_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.household_goods_exemption_value if prop.household_goods_claiming_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.household_goods_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.household_goods_claiming_sub_100 == True else True
      sc['line'+str(sc_i)] = "6"
      sc_i += 1
    if prop.household_goods_is_claiming_exemption == True and prop.household_goods_exemption_value_2:
      sc['desc'+str(sc_i)] = "Household Goods: " + prop.household_goods_description
      sc['currOwnedVal'+str(sc_i)] = prop.household_goods_value
      sc['isCustExempt'+str(sc_i)] = prop.household_goods_claiming_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.household_goods_exemption_value_2 if prop.household_goods_claiming_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.household_goods_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.household_goods_claiming_sub_100 == True else True
      sc['line'+str(sc_i)] = "6"
      sc_i += 1
    ol_i += 1
  else:
    ab['noHouseholdGoods'] = True

  #
  # Electronics
  #

  if prop.has_electronics == True:
    ab['hasElectronics'] = True
    ab['electronicsDesc'] = prop.electronics_description
    ab['electronicsAmt'] = currency(prop.electronics_value)
    #exemption logic
    if prop.electronics_is_claiming_exemption == True:
      sc['desc'+str(sc_i)] = "Electronics: " + prop.electronics_description
      sc['currOwnedVal'+str(sc_i)] = prop.electronics_value
      sc['isCustExempt'+str(sc_i)] = prop.electronics_claiming_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.electronics_exemption_value if prop.electronics_claiming_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.electronics_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.electronics_claiming_sub_100 == True else True
      sc['line'+str(sc_i)] = "7"
      sc_i += 1
    if prop.electronics_is_claiming_exemption == True and prop.electronics_exemption_value_2:
      sc['desc'+str(sc_i)] = "Electronics: " + prop.electronics_description
      sc['currOwnedVal'+str(sc_i)] = prop.electronics_value
      sc['isCustExempt'+str(sc_i)] = prop.electronics_claiming_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.electronics_exemption_value_2 if prop.electronics_claiming_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.electronics_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.electronics_claiming_sub_100 == True else True
      sc['line'+str(sc_i)] = "7"
      sc_i += 1
    ol_i += 1
  else:
    ab['noElectronics'] = True

  #
  # Collectibles
  #

  if prop.has_collectibles == True:
    ab['hasCollectibles'] = True
    ab['collectiblesDesc'] = prop.collectibles_description
    ab['collectiblesAmt'] = currency(prop.collectibles_value)
    #exemption logic
    if prop.collectibles_is_claiming_exemption == True:
      sc['desc'+str(sc_i)] = "Collectibles: " + prop.collectibles_description
      sc['currOwnedVal'+str(sc_i)] = prop.collectibles_value
      sc['isCustExempt'+str(sc_i)] = prop.collectibles_claiming_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.collectibles_exemption_value if prop.collectibles_claiming_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.collectibles_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.collectibles_claiming_sub_100 == True else True
      sc['line'+str(sc_i)] = "8"
      sc_i += 1
    if prop.collectibles_is_claiming_exemption == True and prop.collectibles_exemption_value_2:
      sc['desc'+str(sc_i)] = "Collectibles: " + prop.collectibles_description
      sc['currOwnedVal'+str(sc_i)] = prop.collectibles_value
      sc['isCustExempt'+str(sc_i)] = prop.collectibles_claiming_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.collectibles_exemption_value_2 if prop.collectibles_claiming_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.collectibles_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.collectibles_claiming_sub_100 == True else True
      sc['line'+str(sc_i)] = "8"
      sc_i += 1
    ol_i += 1
  else:
    ab['noCollectibles'] = True

  #
  # Equipment
  #

  if prop.has_hobby_equipment == True:
    ab['hasEquipment'] = True
    ab['equipmentDesc'] = prop.hobby_equipment_description
    ab['equipmentAmt'] = currency(prop.hobby_equipment_value)
    #exemption logic
    if prop.hobby_equipment_is_claiming_exemption == True:
      sc['desc'+str(sc_i)] = "Hobby Equipment: " + prop.hobby_equipment_description
      sc['currOwnedVal'+str(sc_i)] = prop.hobby_equipment_value
      sc['isCustExempt'+str(sc_i)] = prop.hobby_equipment_claiming_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.hobby_equipment_exemption_value if prop.hobby_equipment_claiming_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.hobby_equipment_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.hobby_equipment_claiming_sub_100 == True else True
      sc['line'+str(sc_i)] = "9"
      sc_i += 1
    if prop.hobby_equipment_is_claiming_exemption == True and prop.hobby_equipment_exemption_value_2:
      sc['desc'+str(sc_i)] = "Hobby Equipment: " + prop.hobby_equipment_description
      sc['currOwnedVal'+str(sc_i)] = prop.hobby_equipment_value
      sc['isCustExempt'+str(sc_i)] = prop.hobby_equipment_claiming_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.hobby_equipment_exemption_value if prop.hobby_equipment_claiming_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.hobby_equipment_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.hobby_equipment_claiming_sub_100 == True else True
      sc['line'+str(sc_i)] = "9"
      sc_i += 1
    ol_i += 1
  else:
    ab['noEquipment'] = True

  #
  # Firearms
  #

  if prop.has_firearms == True:
    ab['hasFirearms'] = True
    ab['firearmsDesc'] = prop.firearms_description
    ab['firearmsAmt'] = currency(prop.firearms_value)
    #exemption logic
    if prop.firearms_is_claiming_exemption == True:
      sc['desc'+str(sc_i)] = "Firearms: " + prop.firearms_description
      sc['currOwnedVal'+str(sc_i)] = prop.firearms_value
      sc['isCustExempt'+str(sc_i)] = prop.firearms_claiming_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.firearms_exemption_value if prop.firearms_claiming_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.firearms_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.firearms_claiming_sub_100 == True else True
      sc['line'+str(sc_i)] = "10"
      sc_i += 1
    if prop.firearms_is_claiming_exemption == True and prop.firearms_exemption_2:
      sc['desc'+str(sc_i)] = "Firearms: " + prop.firearms_description
      sc['currOwnedVal'+str(sc_i)] = prop.firearms_value
      sc['isCustExempt'+str(sc_i)] = prop.firearms_claiming_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.firearms_exemption_value_2 if prop.firearms_claiming_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.firearms_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.firearms_claiming_sub_100 == True else True
      sc['line'+str(sc_i)] = "10"
      sc_i += 1
    ol_i += 1
  else:
    ab['noFirearms'] = True

  #
  # Clothes
  #

  if prop.has_clothes == True:
    ab['hasClothes'] = True
    ab['clothesDesc'] = prop.clothes_description
    ab['clothesAmt'] = currency(prop.clothes_value)
    #exemption logic
    if prop.clothes_is_claiming_exemption == True:
      sc['desc'+str(sc_i)] = "Clothes: " + prop.clothes_description
      sc['currOwnedVal'+str(sc_i)] = prop.clothes_value
      sc['isCustExempt'+str(sc_i)] = prop.clothes_claiming_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.clothes_exemption_value if prop.clothes_claiming_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.clothes_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.clothes_claiming_sub_100 == True else True
      sc['line'+str(sc_i)] = "11"
      sc_i += 1
    if prop.clothes_is_claiming_exemption == True and prop.clothes_exemption_value_2:
      sc['desc'+str(sc_i)] = "Clothes: " + prop.clothes_description
      sc['currOwnedVal'+str(sc_i)] = prop.clothes_value
      sc['isCustExempt'+str(sc_i)] = prop.clothes_claiming_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.clothes_exemption_value_2 if prop.clothes_claiming_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.clothes_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.clothes_claiming_sub_100 == True else True
      sc['line'+str(sc_i)] = "11"
      sc_i += 1
    ol_i += 1
  else:
    ab['noClothes'] = True

  #
  # jewelry
  #

  if prop.has_jewelry == True:
    ab['hasjewelry'] = True
    ab['jewelryDescription'] = prop.jewelry_description
    ab['jewelryAmt'] = currency(prop.jewelry_value)
    #exemption logic
    if prop.jewelry_is_claiming_exemption == True:
      sc['desc'+str(sc_i)] = "jewelry: " + prop.jewelry_description
      sc['currOwnedVal'+str(sc_i)] = prop.jewelry_value
      sc['isCustExempt'+str(sc_i)] = prop.jewelry_claiming_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.jewelry_exemption_value if prop.jewelry_claiming_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.jewelry_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.jewelry_claiming_sub_100 == True else True
      sc['line'+str(sc_i)] = "12"
      sc_i += 1
    if prop.jewelry_is_claiming_exemption == True and prop.jewelry_exemption_value_2:
      sc['desc'+str(sc_i)] = "jewelry: " + prop.jewelry_description
      sc['currOwnedVal'+str(sc_i)] = prop.jewelry_value
      sc['isCustExempt'+str(sc_i)] = prop.jewelry_claiming_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.jewelry_exemption_value_2 if prop.jewelry_claiming_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.jewelry_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.jewelry_claiming_sub_100 == True else True
      sc['line'+str(sc_i)] = "12"
      sc_i += 1
    ol_i += 1
  else:
    ab['nojewelry'] = True

  #
  # Animals
  #

  if prop.has_animals == True:
    ab['hasAnimals'] = True
    ab['animalsDesc'] = prop.animal_description
    ab['animalsAmt'] = currency(prop.animal_value)
    #exemption logic
    if prop.animal_is_claiming_exemption == True:
      sc['desc'+str(sc_i)] = "Animal: " + prop.animal_description
      sc['currOwnedVal'+str(sc_i)] = prop.animal_value
      sc['isCustExempt'+str(sc_i)] = prop.animal_claiming_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.animal_exemption_value if prop.animal_claiming_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.animal_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.animal_claiming_sub_100 == True else True
      sc['line'+str(sc_i)] = "13"
      sc_i += 1
    if prop.animal_is_claiming_exemption == True and prop.animal_exemption_value_2:
      sc['desc'+str(sc_i)] = "Animal: " + prop.animal_description
      sc['currOwnedVal'+str(sc_i)] = prop.animal_value
      sc['isCustExempt'+str(sc_i)] = prop.animal_claiming_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.animal_exemption_value_2 if prop.animal_claiming_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.animal_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.animal_claiming_sub_100 == True else True
      sc['line'+str(sc_i)] = "13"
      sc_i += 1
    ol_i += 1
  else:
    ab['noAnimals'] = True

  #
  # Other Household Items
  #

  if prop.has_other_household_items == True:
    ab['hasOther'] = True
    ab['otherDesc'] = prop.other_household_items_description
    ab['OtherAmt'] = currency(prop.other_household_items_value)
    #exemption logic
    if prop.other_household_items_is_claiming_exemption == True:
      sc['desc'+str(sc_i)] = "Other: " + prop.other_household_items_description
      sc['currOwnedVal'+str(sc_i)] = prop.other_household_items_value
      sc['isCustExempt'+str(sc_i)] = prop.other_household_items_claiming_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.other_household_items_exemption_value if prop.other_household_items_claiming_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.other_household_items_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.other_household_items_claiming_sub_100 == True else True
      sc['line'+str(sc_i)] = "14"
      sc_i += 1
    if prop.other_household_items_is_claiming_exemption == True and prop.other_household_items_exemption_value_2:
      sc['desc'+str(sc_i)] = "Other: " + prop.other_household_items_description
      sc['currOwnedVal'+str(sc_i)] = prop.other_household_items_value
      sc['isCustExempt'+str(sc_i)] = prop.other_household_items_claiming_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.other_household_items_exemption_value_2 if prop.other_household_items_claiming_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.other_household_items_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.other_household_items_claiming_sub_100 == True else True
      sc['line'+str(sc_i)] = "14"
      sc_i += 1
    ol_i += 1
  else:
    ab['noOther'] = True

  ab['p3TotalAmt'] = currency(prop.household_goods_value + prop.electronics_value + prop.collectibles_value + prop.hobby_equipment_value + prop.firearms_value + prop.clothes_value + prop.jewelry_value + prop.animal_value + prop.other_household_items_value)

  #
  # Cash
  #

  if prop.financial_assets.has_cash == True:
    ab['hasCash'] = True
    ab['cashAmt'] = currency(prop.financial_assets.cash_value)
    #exemption logic
    if prop.financial_assets.cash_is_claiming_exemption == True:
      sc['desc'+str(sc_i)] = "Cash"
      sc['currOwnedVal'+str(sc_i)] = prop.financial_assets.cash_value
      sc['isCustExempt'+str(sc_i)] = prop.financial_assets.cash_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.financial_assets.cash_exemption_value if prop.financial_assets.cash_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.financial_assets.cash_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.financial_assets.cash_sub_100 == True else True
      sc['line'+str(sc_i)] = "16"
      sc_i += 1
    if prop.financial_assets.cash_is_claiming_exemption == True and prop.financial_assets.cash_exemption_value_2:
      sc['desc'+str(sc_i)] = "Cash"
      sc['currOwnedVal'+str(sc_i)] = prop.financial_assets.cash_value
      sc['isCustExempt'+str(sc_i)] = prop.financial_assets.cash_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.financial_assets.cash_exemption_value_2 if prop.financial_assets.cash_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.financial_assets.cash_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.financial_assets.cash_sub_100 == True else True
      sc['line'+str(sc_i)] = "16"
      sc_i += 1
    ol_i += 1
  else:
    ab['noCash'] = True

  #
  # Deposits
  #

  if len(prop.financial_assets.deposits) > 0:
    ab['hasDeposits'] = True
    i = 1
    for dep in prop.financial_assets.deposits:
      if len(list(filter(lambda x: x.type == 'Checking', prop.financial_assets.deposits))) > 0:
        ab['ch1Institution'] = list(filter(lambda x: x.type == 'Checking', prop.financial_assets.deposits))[0].institution
        ab['ch1Amt'] = currency(list(filter(lambda x: x.type == 'Checking', prop.financial_assets.deposits))[0].amount)
      if len(list(filter(lambda x: x.type == 'Checking', prop.financial_assets.deposits))) > 1:
        ab['ch2Institution'] = list(filter(lambda x: x.type == 'Checking', prop.financial_assets.deposits))[1].institution
        ab['ch2Amt'] = currency(list(filter(lambda x: x.type == 'Checking', prop.financial_assets.deposits))[0].amount)
      if len(list(filter(lambda x: x.type == 'Savings', prop.financial_assets.deposits))) > 0:
        ab['sv1Institution'] = list(filter(lambda x: x.type == 'Savings', prop.financial_assets.deposits))[0].institution
        ab['sv1Amt'] = currency(list(filter(lambda x: x.type == 'Savings', prop.financial_assets.deposits))[0].amount)
      if len(list(filter(lambda x: x.type == 'Savings', prop.financial_assets.deposits))) > 1:
        ab['sv2Institution'] = list(filter(lambda x: x.type == 'Savings', prop.financial_assets.deposits))[1].institution
        ab['sv2Amt'] = currency(list(filter(lambda x: x.type == 'Savings', prop.financial_assets.deposits))[1].amount)
      if len(list(filter(lambda x: x.type == 'Certificates of deposit', prop.financial_assets.deposits))) > 0:
        ab['cd1Institution'] = list(filter(lambda x: x.type == 'Certificates of deposit', prop.financial_assets.deposits))[0].institution
        ab['cd1Amt'] = currency(list(filter(lambda x: x.type == 'Certificates of deposit', prop.financial_assets.deposits))[0].amount)
      if len(list(filter(lambda x: x.type == 'Other financial account', prop.financial_assets.deposits))) > 0:
        ab['ot1Institution'] = list(filter(lambda x: x.type == 'Other financial account', prop.financial_assets.deposits))[0].institution
        ab['ot1Amt'] = currency(list(filter(lambda x: x.type == 'Other financial account', prop.financial_assets.deposits))[0].amount)
      if len(list(filter(lambda x: x.type == 'Other financial account', prop.financial_assets.deposits))) > 1:
        ab['ot2Institution'] = list(filter(lambda x: x.type == 'Other financial account', prop.financial_assets.deposits))[1].institution
        ab['ot2Amt'] = currency(list(filter(lambda x: x.type == 'Other financial account', prop.financial_assets.deposits))[1].amount)
      if len(list(filter(lambda x: x.type == 'Other financial account', prop.financial_assets.deposits))) > 2:
        ab['ot3Institution'] = list(filter(lambda x: x.type == 'Other financial account', prop.financial_assets.deposits))[2].institution
        ab['ot3Amt'] = currency(list(filter(lambda x: x.type == 'Other financial account', prop.financial_assets.deposits))[2].amount)
      if len(list(filter(lambda x: x.type == 'Other financial account', prop.financial_assets.deposits))) > 3:
        ab['ot4Institution'] = list(filter(lambda x: x.type == 'Other financial account', prop.financial_assets.deposits))[3].institution
        ab['ot4Amt'] = currency(list(filter(lambda x: x.type == 'Other financial account', prop.financial_assets.deposits))[3].amount)
      #exemptions
      if dep.is_claiming_exemption == True:
        sc['desc'+str(sc_i)] = "Deposit: " + dep.type
        sc['currOwnedVal'+str(sc_i)] = dep.amount
        sc['isCustExempt'+str(sc_i)] = dep.sub_100
        sc['custExemptVal'+str(sc_i)] = dep.exemption_value if dep.sub_100 == True else None
        sc['laws'+str(sc_i)] = dep.exemption_laws
        sc['isFairMarket'+str(sc_i)] = False if dep.sub_100 == True else True
        sc['line'+str(sc_i)] = "17." + str(i)
        sc_i += 1
      if dep.is_claiming_exemption == True and dep.exemption_value_2:
        sc['desc'+str(sc_i)] = "Deposit: " + dep.type
        sc['currOwnedVal'+str(sc_i)] = dep.amount
        sc['isCustExempt'+str(sc_i)] = dep.sub_100
        sc['custExemptVal'+str(sc_i)] = dep.exemption_value_2 if dep.sub_100 == True else None
        sc['laws'+str(sc_i)] = dep.exemption_laws_2
        sc['isFairMarket'+str(sc_i)] = False if dep.sub_100 == True else True
        sc['line'+str(sc_i)] = "17." + str(i)
        sc_i += 1
      ol_i += 1
      i += 1
  else:
    ab['noDeposits'] = True

  #
  # Bonds
  #

  if len(prop.financial_assets.bonds_and_stocks) > 0:
    ab['hasBonds'] = True
    if len(prop.financial_assets.bonds_and_stocks) > 0:
      ab['b1Institution'] = prop.financial_assets.bonds_and_stocks[0].institution
      ab['b1Amt'] = currency(prop.financial_assets.bonds_and_stocks[0].amount)
    if len(prop.financial_assets.bonds_and_stocks) > 1:
      ab['b2Institution'] = prop.financial_assets.bonds_and_stocks[1].institution
      ab['b2Amt'] = currency(prop.financial_assets.bonds_and_stocks[1].amount)
    if len(prop.financial_assets.bonds_and_stocks) > 2:
      ab['b3Institution'] = prop.financial_assets.bonds_and_stocks[2].institution
      ab['b3Amt'] = currency(prop.financial_assets.bonds_and_stocks[2].amount)
    #exemptions
    i = 1
    for dep in prop.financial_assets.bonds_and_stocks:
      if dep.is_claiming_exemption == True:
        sc['desc'+str(sc_i)] = "Bond: " + dep.institution
        sc['currOwnedVal'+str(sc_i)] = dep.amount
        sc['isCustExempt'+str(sc_i)] = dep.sub_100
        sc['custExemptVal'+str(sc_i)] = dep.exemption_value if dep.sub_100 == True else None
        sc['laws'+str(sc_i)] = dep.exemption_laws
        sc['isFairMarket'+str(sc_i)] = False if dep.sub_100 == True else True
        sc['line'+str(sc_i)] = "18." + str(i)
        sc_i += 1
      if dep.is_claiming_exemption == True and dep.exemption_value_2:
        sc['desc'+str(sc_i)] = "Bond: " + dep.institution
        sc['currOwnedVal'+str(sc_i)] = dep.amount
        sc['isCustExempt'+str(sc_i)] = dep.sub_100
        sc['custExemptVal'+str(sc_i)] = dep.exemption_value_2 if dep.sub_100 == True else None
        sc['laws'+str(sc_i)] = dep.exemption_laws_2
        sc['isFairMarket'+str(sc_i)] = False if dep.sub_100 == True else True
        sc['line'+str(sc_i)] = "18." + str(i)
        sc_i += 1
      ol_i += 1
      i += 1
  else:
    ab['noBonds'] = True

  #
  # Non-traded stock
  #

  if len(prop.financial_assets.non_traded_stock) > 0:
    ab['hasNonTradedStock'] = True
    i = 1
    for nt in prop.financial_assets.non_traded_stock:
      ab['nt'+str(i)+'Entity'] = nt.entity
      ab['nt'+str(i)+'Ownership'] = nt.ownership_percent
      ab['nt'+str(i)+'Amt'] = currency(nt.value)
      #exemptions
      if nt.is_claiming_exemption == True:
        sc['desc'+str(sc_i)] = "Non-traded Stock: " + nt.entity
        sc['currOwnedVal'+str(sc_i)] = nt.value
        sc['isCustExempt'+str(sc_i)] = nt.sub_100
        sc['custExemptVal'+str(sc_i)] = nt.exemption_value if nt.sub_100 == True else None
        sc['laws'+str(sc_i)] = nt.exemption_laws
        sc['isFairMarket'+str(sc_i)] = False if nt.sub_100 == True else True
        sc['line'+str(sc_i)] = "19." + str(i)
        sc_i += 1
      if nt.is_claiming_exemption == True and nt.exemption_value_2:
        sc['desc'+str(sc_i)] = "Non-traded Stock: " + nt.entity
        sc['currOwnedVal'+str(sc_i)] = nt.value
        sc['isCustExempt'+str(sc_i)] = nt.sub_100
        sc['custExemptVal'+str(sc_i)] = nt.exemption_value_2 if nt.sub_100 == True else None
        sc['laws'+str(sc_i)] = nt.exemption_laws_2
        sc['isFairMarket'+str(sc_i)] = False if nt.sub_100 == True else True
        sc['line'+str(sc_i)] = "19." + str(i)
        sc_i += 1
      ol_i += 1

      i += 1

  else:
    ab['noNonTradedStock'] = True

  #
  # Corporate Bonds
  #

  if len(prop.financial_assets.corporate_bonds) > 0:
    ab['hasCorporateBonds'] = True
    i = 1
    for cb in prop.financial_assets.corporate_bonds:
      ab['cb'+str(i)+'Issuer'] = cb.issuer
      ab['cb'+str(i)+'Amt'] = currency(cb.amount)
      if cb.is_claiming_exemption == True:
        sc['desc'+str(sc_i)] = "Corporate Bonds: " + cb.issuer
        sc['currOwnedVal'+str(sc_i)] = cb.amount
        sc['isCustExempt'+str(sc_i)] = cb.sub_100
        sc['custExemptVal'+str(sc_i)] = cb.exemption_value if cb.sub_100 == True else None
        sc['laws'+str(sc_i)] = cb.exemption_laws
        sc['isFairMarket'+str(sc_i)] = False if cb.sub_100 == True else True
        sc['line'+str(sc_i)] = "20." + str(i)
        sc_i += 1
      if cb.is_claiming_exemption == True and cb.exemption_value_2:
        sc['desc'+str(sc_i)] = "Corporate Bonds: " + cb.issuer
        sc['currOwnedVal'+str(sc_i)] = cb.amount
        sc['isCustExempt'+str(sc_i)] = cb.sub_100
        sc['custExemptVal'+str(sc_i)] = cb.exemption_value_2 if cb.sub_100 == True else None
        sc['laws'+str(sc_i)] = cb.exemption_laws_2
        sc['isFairMarket'+str(sc_i)] = False if cb.sub_100 == True else True
        sc['line'+str(sc_i)] = "20." + str(i)
        sc_i += 1
      ol_i += 1
      i += 1
    #exemptions


  else:
    ab['noCorporateBonds'] = True

  #
  # Retirement Accounts
  #

  if len(prop.financial_assets.retirement_accounts) > 0:
    ab['hasRetirement'] = True
    if len(list(filter(lambda x: x.type == '401(k) or similar plan', prop.financial_assets.retirement_accounts))) > 0:
      ab['kInstitution'] = list(filter(lambda x: x.type == '401(k) or similar plan', prop.financial_assets.retirement_accounts))[0].institution
      ab['kAmt'] = currency(list(filter(lambda x: x.type == '401(k) or similar plan', prop.financial_assets.retirement_accounts))[0].amount)
    if len(list(filter(lambda x: x.type == 'Pension plan', prop.financial_assets.retirement_accounts))) > 0:
      ab['pensionInstitution'] = list(filter(lambda x: x.type == 'Pension plan', prop.financial_assets.retirement_accounts))[0].institution
      ab['pensionAmt'] = currency(list(filter(lambda x: x.type == 'Pension plan', prop.financial_assets.retirement_accounts))[0].amount)
    if len(list(filter(lambda x: x.type == 'IRA', prop.financial_assets.retirement_accounts))) > 0:
      ab['iraInstitution'] = list(filter(lambda x: x.type == 'IRA', prop.financial_assets.retirement_accounts))[0].institution
      ab['iraAmt'] = currency(list(filter(lambda x: x.type == 'IRA', prop.financial_assets.retirement_accounts))[0].amount)
    if len(list(filter(lambda x: x.type == 'Retirement account', prop.financial_assets.retirement_accounts))) > 0:
      ab['retirementInstitution'] = list(filter(lambda x: x.type == 'Retirement account', prop.financial_assets.retirement_accounts))[0].institution
      ab['retirementAmt'] = currency(list(filter(lambda x: x.type == 'Retirement account', prop.financial_assets.retirement_accounts))[0].amount)
    if len(list(filter(lambda x: x.type == 'Keogh', prop.financial_assets.retirement_accounts))) > 0:
      ab['keoghInstitution'] = list(filter(lambda x: x.type == 'Keogh', prop.financial_assets.retirement_accounts))[0].institution
      ab['keoghAmt'] = currency(list(filter(lambda x: x.type == 'Keogh', prop.financial_assets.retirement_accounts))[0].amount)
    if len(list(filter(lambda x: x.type == 'Additional account', prop.financial_assets.retirement_accounts))) > 0:
      ab['add1Institution'] = list(filter(lambda x: x.type == 'Additional account', prop.financial_assets.retirement_accounts))[0].institution
      ab['add1Amt'] = currency(list(filter(lambda x: x.type == 'Additional account', prop.financial_assets.retirement_accounts))[0].amount)
    if len(list(filter(lambda x: x.type == 'Additional account', prop.financial_assets.retirement_accounts))) > 1:
      ab['add2Institution'] = list(filter(lambda x: x.type == 'Additional account', prop.financial_assets.retirement_accounts))[1].institution
      ab['add2Amt'] = currency(list(filter(lambda x: x.type == 'Additional account', prop.financial_assets.retirement_accounts))[1].amount)
  #exemptions
  i = 1
  for dep in prop.financial_assets.retirement_accounts:
    if dep.has_claim == True:
      sc['desc'+str(sc_i)] = "Retirement Account: " + dep.type
      sc['currOwnedVal'+str(sc_i)] = dep.amount
      sc['isCustExempt'+str(sc_i)] = dep.sub_100
      sc['custExemptVal'+str(sc_i)] = dep.exemption_value if dep.sub_100 == True else None
      sc['laws'+str(sc_i)] = dep.exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if dep.sub_100 == True else True
      sc['line'+str(sc_i)] = "21." + str(i)
      sc_i += 1
    if dep.has_claim == True and dep.exemption_value_2:
      sc['desc'+str(sc_i)] = "Retirement Account: " + dep.type
      sc['currOwnedVal'+str(sc_i)] = dep.amount
      sc['isCustExempt'+str(sc_i)] = dep.sub_100
      sc['custExemptVal'+str(sc_i)] = dep.exemption_value_2 if dep.sub_100 == True else None
      sc['laws'+str(sc_i)] = dep.exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if dep.sub_100 == True else True
      sc['line'+str(sc_i)] = "21." + str(i)
      sc_i += 1
    ol_i += 1
    i += 1

  else:
    ab['noRetirement'] = True

  #
  # Security Deposits
  #

  if len(prop.financial_assets.prepayments) > 0:
    ab['hasSecurityDeposits'] = True
    if len(list(filter(lambda x: x.type == 'Electric', prop.financial_assets.prepayments))) > 0:
      ab['electricInstitution'] = list(filter(lambda x: x.type == 'Electric', prop.financial_assets.prepayments))[0].institution
      ab['electricAmt'] = currency(list(filter(lambda x: x.type == 'Electric', prop.financial_assets.prepayments))[0].amount)
    if len(list(filter(lambda x: x.type == 'Gas', prop.financial_assets.prepayments))) > 0:
      ab['gasInstitution'] = list(filter(lambda x: x.type == 'Gas', prop.financial_assets.prepayments))[0].institution
      ab['gasAmt'] = currency(list(filter(lambda x: x.type == 'Gas', prop.financial_assets.prepayments))[0].amount)
    if len(list(filter(lambda x: x.type == 'Heating oil', prop.financial_assets.prepayments))) > 0:
      ab['oilInstitution'] = list(filter(lambda x: x.type == 'Heating oil', prop.financial_assets.prepayments))[0].institution
      ab['oilAmt'] = currency(list(filter(lambda x: x.type == 'Heating oil', prop.financial_assets.prepayments))[0].amount)
    if len(list(filter(lambda x: x.type == 'Security deposit on rental unit', prop.financial_assets.prepayments))) > 0:
      ab['rentalDepInstitution'] = list(filter(lambda x: x.type == 'Security deposit on rental unit', prop.financial_assets.prepayments))[0].institution
      ab['rentalDepAmt'] = currency(list(filter(lambda x: x.type == 'Security deposit on rental unit', prop.financial_assets.prepayments))[0].amount)
    if len(list(filter(lambda x: x.type == 'Prepaid rent', prop.financial_assets.prepayments))) > 0:
      ab['prepaidInstitution'] = list(filter(lambda x: x.type == 'Prepaid rent', prop.financial_assets.prepayments))[0].institution
      ab['prepaidAmt'] = currency(list(filter(lambda x: x.type == 'Prepaid rent', prop.financial_assets.prepayments))[0].amount)
    if len(list(filter(lambda x: x.type == 'Telephone', prop.financial_assets.prepayments))) > 0:
      ab['telephoneInstitution'] = list(filter(lambda x: x.type == 'Telephone', prop.financial_assets.prepayments))[0].institution
      ab['telephoneAmt'] = currency(list(filter(lambda x: x.type == 'Telephone', prop.financial_assets.prepayments))[0].amount)
    if len(list(filter(lambda x: x.type == 'Water', prop.financial_assets.prepayments))) > 0:
      ab['waterInstitution'] = list(filter(lambda x: x.type == 'Water', prop.financial_assets.prepayments))[0].institution
      ab['waterAmt'] = currency(list(filter(lambda x: x.type == 'Water', prop.financial_assets.prepayments))[0].amount)
    if len(list(filter(lambda x: x.type == 'Rented furniture', prop.financial_assets.prepayments))) > 0:
      ab['furnitureInstitution'] = list(filter(lambda x: x.type == 'Rented furniture', prop.financial_assets.prepayments))[0].institution
      ab['furnitureAmt'] = currency(list(filter(lambda x: x.type == 'Rented furniture', prop.financial_assets.prepayments))[0].amount)
    if len(list(filter(lambda x: x.type == 'Other', prop.financial_assets.prepayments))) > 0:
      ab['otherDepInstitution'] = list(filter(lambda x: x.type == 'Other', prop.financial_assets.prepayments))[0].institution
      ab['otherDepAmt'] = currency(list(filter(lambda x: x.type == 'Other', prop.financial_assets.prepayments))[0].amount)
  #exemptions
  i = 1
  for dep in prop.financial_assets.prepayments:
    if dep.has_claim == True:
      sc['desc'+str(sc_i)] = "Prepayments: " + dep.type
      sc['currOwnedVal'+str(sc_i)] = dep.amount
      sc['isCustExempt'+str(sc_i)] = dep.sub_100
      sc['custExemptVal'+str(sc_i)] = dep.exemption_value if dep.sub_100 == True else None
      sc['laws'+str(sc_i)] = dep.exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if dep.sub_100 == True else True
      sc['line'+str(sc_i)] = "22." + str(i)
      sc_i += 1
    if dep.has_claim == True and dep.exemption_value_2:
      sc['desc'+str(sc_i)] = "Prepayments: " + dep.type
      sc['currOwnedVal'+str(sc_i)] = dep.amount
      sc['isCustExempt'+str(sc_i)] = dep.sub_100
      sc['custExemptVal'+str(sc_i)] = dep.exemption_value_2 if dep.sub_100 == True else None
      sc['laws'+str(sc_i)] = dep.exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if dep.sub_100 == True else True
      sc['line'+str(sc_i)] = "22." + str(i)
      sc_i += 1
    ol_i += 1
    i += 1
  else:
    ab['noSecurityDeposits'] = True

  #
  # Annuities
  #

  if len(prop.financial_assets.annuities) > 0:
    ab['hasAnnuities'] = True
    i = 1
    for ann in prop.financial_assets.annuities:
      ab['an'+str(i)+'Institution'] = ann.issuer
      ab['an'+str(i)+'Amt'] = currency(ann.amount)
      #exemptions
      if ann.has_claim == True:
        sc['desc'+str(sc_i)] = "Annuity: " + ann.issuer
        sc['currOwnedVal'+str(sc_i)] = ann.amount
        sc['isCustExempt'+str(sc_i)] = ann.sub_100
        sc['custExemptVal'+str(sc_i)] = ann.exemption_value if ann.sub_100 == True else None
        sc['laws'+str(sc_i)] = ann.exemption_laws
        sc['isFairMarket'+str(sc_i)] = False if ann.sub_100 == True else True
        sc['line'+str(sc_i)] = "23." + str(i)
        sc_i += 1
      if ann.has_claim == True and ann.exemption_value_2:
        sc['desc'+str(sc_i)] = "Annuity: " + ann.issuer
        sc['currOwnedVal'+str(sc_i)] = ann.amount
        sc['isCustExempt'+str(sc_i)] = ann.sub_100
        sc['custExemptVal'+str(sc_i)] = ann.exemption_value_2 if ann.sub_100 == True else None
        sc['laws'+str(sc_i)] = ann.exemption_laws_2
        sc['isFairMarket'+str(sc_i)] = False if ann.sub_100 == True else True
        sc['line'+str(sc_i)] = "23." + str(i)
        sc_i += 1
      ol_i += 1
      i += 1

  else:
    ab['noAnnuities'] = True

  #
  # Education Accounts
  #

  if len(prop.financial_assets.edu_accounts) > 0:
    ab['hasEdu'] = True
    i = 1
    for edu in prop.financial_assets.edu_accounts:
      ab['edu'+str(i)+'Institution'] = edu.institution
      ab['edu'+str(i)+'Amt'] = currency(edu.amount)
      #exemptions
      if edu.has_claim == True:
        sc['desc'+str(sc_i)] = "Edu Acct: " + edu.institution
        sc['currOwnedVal'+str(sc_i)] = edu.amount
        sc['isCustExempt'+str(sc_i)] = edu.sub_100
        sc['custExemptVal'+str(sc_i)] = edu.exemption_value if edu.sub_100 == True else None
        sc['laws'+str(sc_i)] = edu.exemption_laws
        sc['isFairMarket'+str(sc_i)] = False if edu.sub_100 == True else True
        sc['line'+str(sc_i)] = "24." + str(i)
        sc_i += 1
      if edu.has_claim == True and edu.exemption_value_2:
        sc['desc'+str(sc_i)] = "Edu Acct: " + edu.institution
        sc['currOwnedVal'+str(sc_i)] = edu.amount
        sc['isCustExempt'+str(sc_i)] = edu.sub_100
        sc['custExemptVal'+str(sc_i)] = edu.exemption_value_2 if edu.sub_100 == True else None
        sc['laws'+str(sc_i)] = edu.exemption_laws_2
        sc['isFairMarket'+str(sc_i)] = False if edu.sub_100 == True else True
        sc['line'+str(sc_i)] = "24." + str(i)
        sc_i += 1
      ol_i += 1
      i += 1



  else:
    ab['noEdu'] = True

  #
  # Trusts
  #

  if prop.financial_assets.has_future_property_interest == True:
    ab['hasTrusts'] = True
    ab['trustDesc'] = prop.financial_assets.future_property_interest_description
    ab['trustAmt'] = currency(prop.financial_assets.future_property_interest_value)
    #exemptions
    if prop.financial_assets.future_property_interest_has_claim:
      sc['desc'+str(sc_i)] = "Trust: " + prop.financial_assets.future_property_interest_description
      sc['currOwnedVal'+str(sc_i)] = prop.financial_assets.future_property_interest_value
      sc['isCustExempt'+str(sc_i)] = prop.financial_assets.future_property_interest_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.financial_assets.future_property_interest_exemption_value if prop.financial_assets.future_property_interest_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.financial_assets.future_property_interest_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.financial_assets.future_property_interest_sub_100 == True else True
      sc['line'+str(sc_i)] = "25"
    if prop.financial_assets.future_property_interest_has_claim and prop.financial_assets.future_property_interest_exemption_value_2:
      sc['desc'+str(sc_i)] = "Trust: " + prop.financial_assets.future_property_interest_description
      sc['currOwnedVal'+str(sc_i)] = prop.financial_assets.future_property_interest_value
      sc['isCustExempt'+str(sc_i)] = prop.financial_assets.future_property_interest_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.financial_assets.future_property_interest_exemption_value_2 if prop.financial_assets.future_property_interest_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.financial_assets.future_property_interest_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.financial_assets.future_property_interest_sub_100 == True else True
      sc['line'+str(sc_i)] = "25"

      sc_i += 1
    ol_i += 1
  else:
    ab['noTrusts'] = True

  #
  # Patents & IP
  #

  if prop.financial_assets.has_ip_interest == True:
    ab['hasPatents'] = True
    ab['patentDesc'] = prop.financial_assets.ip_interest_description
    ab['patentAmt'] = currency(prop.financial_assets.ip_interest_value)
    #exemptions
    if prop.financial_assets.ip_interest_has_claim:
      sc['desc'+str(sc_i)] = "IP: " + prop.financial_assets.ip_interest_description
      sc['currOwnedVal'+str(sc_i)] = prop.financial_assets.ip_interest_value
      sc['isCustExempt'+str(sc_i)] = prop.financial_assets.ip_interest_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.financial_assets.ip_interest_exemption_value if prop.financial_assets.ip_interest_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.financial_assets.ip_interest_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.financial_assets.ip_interest_sub_100 == True else True
      sc['line'+str(sc_i)] = "26"
      sc_i += 1
    if prop.financial_assets.ip_interest_has_claim and prop.financial_assets.ip_interest_exemption_value_2:
      sc['desc'+str(sc_i)] = "IP: " + prop.financial_assets.ip_interest_description
      sc['currOwnedVal'+str(sc_i)] = prop.financial_assets.ip_interest_value
      sc['isCustExempt'+str(sc_i)] = prop.financial_assets.ip_interest_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.financial_assets.ip_interest_exemption_value_2 if prop.financial_assets.ip_interest_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.financial_assets.ip_interest_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.financial_assets.ip_interest_sub_100 == True else True
      sc['line'+str(sc_i)] = "26"
      sc_i += 1
    ol_i += 1
  else:
    ab['noPatents'] = True

  #
  # Intangible Interest
  #

  if prop.financial_assets.has_intangible_interest == True:
    ab['hasLicenses'] = True
    ab['licenseDesc'] = prop.financial_assets.intangible_interest_description
    ab['licenseAmt'] = currency(prop.financial_assets.intangible_interest_value)
    #exemptions
    if prop.financial_assets.intangible_interest_has_claim:
      sc['desc'+str(sc_i)] = "Interest: " + prop.financial_assets.intangible_interest_description
      sc['currOwnedVal'+str(sc_i)] = prop.financial_assets.intangible_interest_value
      sc['isCustExempt'+str(sc_i)] = prop.financial_assets.intangible_interest_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.financial_assets.intangible_interest_exemption_value if prop.financial_assets.intangible_interest_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.financial_assets.intangible_interest_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.financial_assets.intangible_interest_sub_100 == True else True
      sc['line'+str(sc_i)] = "27"
      sc_i += 1
    if prop.financial_assets.intangible_interest_has_claim and prop.financial_assets.intangible_interest_exemption_value_2:
      sc['desc'+str(sc_i)] = "Interest: " + prop.financial_assets.intangible_interest_description
      sc['currOwnedVal'+str(sc_i)] = prop.financial_assets.intangible_interest_value
      sc['isCustExempt'+str(sc_i)] = prop.financial_assets.intangible_interest_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.financial_assets.intangible_interest_exemption_value_2 if prop.financial_assets.intangible_interest_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.financial_assets.intangible_interest_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.financial_assets.intangible_interest_sub_100 == True else True
      sc['line'+str(sc_i)] = "27"
      sc_i += 1
    ol_i += 1
  else:
    ab['noLicenses'] = True

  #
  # Owed Taxes
  #

  if prop.owed_property.has_tax_refund == True:
    ab['hasTaxRefunds'] = True
    ab['refundDesc'] = prop.owed_property.tax_refund_description
    ab['federalRefundAmt'] = currency(prop.owed_property.tax_refund_federal)
    ab['stateRefundAmt'] = currency(prop.owed_property.tax_refund_state)
    ab['localRefundAmt'] = currency(prop.owed_property.tax_refund_local)
    total_tax_val = prop.owed_property.tax_refund_federal + prop.owed_property.tax_refund_state + prop.owed_property.tax_refund_local
    #exemptions
    if prop.owed_property.tax_refund_has_claim:
      sc['desc'+str(sc_i)] = "Taxes Owed: " + prop.owed_property.tax_refund_description
      sc['currOwnedVal'+str(sc_i)] = total_tax_val
      sc['isCustExempt'+str(sc_i)] = prop.owed_property.tax_refund_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.owed_property.tax_refund_exemption_value
      sc['laws'+str(sc_i)] = prop.owed_property.tax_refund_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.owed_property.tax_refund_sub_100 == True else True
      sc['line'+str(sc_i)] = "28"
      sc_i += 1
    if prop.owed_property.tax_refund_has_claim and prop.owed_property.tax_refund_exemption_value_2:
      sc['desc'+str(sc_i)] = "Taxes Owed: " + prop.owed_property.tax_refund_description
      sc['currOwnedVal'+str(sc_i)] = total_tax_val
      sc['isCustExempt'+str(sc_i)] = prop.owed_property.tax_refund_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.owed_property.tax_refund_exemption_value_2
      sc['laws'+str(sc_i)] = prop.owed_property.tax_refund_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.owed_property.tax_refund_sub_100 == True else True
      sc['line'+str(sc_i)] = "28"
      sc_i += 1
    ol_i += 1
  else:
    ab['noTaxRefunds'] = True

  #
  # Owed Family Support
  #

  if prop.owed_property.has_family_support == True:
    ab['hasFamilySupport'] = True
    ab['familySupportDesc'] = prop.owed_property.family_support_description
    ab['maintAmt'] = currency(prop.owed_property.family_support_maintenance)
    ab['supportAmt'] = currency(prop.owed_property.family_support_support)
    ab['divorceAmt'] = currency(prop.owed_property.family_support_divorce)
    ab['propAmt'] = currency(prop.owed_property.family_support_settlement)
    total_family_support_amt = prop.owed_property.family_support_maintenance + prop.owed_property.family_support_support + prop.owed_property.family_support_divorce + prop.owed_property.family_support_settlement
    #exemptions
    if prop.owed_property.family_support_has_claim:
      sc['desc'+str(sc_i)] = "Family Support: " + prop.owed_property.family_support_description
      sc['currOwnedVal'+str(sc_i)] = total_family_support_amt
      sc['isCustExempt'+str(sc_i)] = prop.owed_property.family_support_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.owed_property.family_support_exemption_value if prop.owed_property.family_support_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.owed_property.family_support_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.owed_property.family_support_sub_100 == True else True
      sc['line'+str(sc_i)] = "29"
      sc_i += 1
    if prop.owed_property.family_support_has_claim and prop.owed_property.family_support_exemption_value_2:
      sc['desc'+str(sc_i)] = "Family Support: " + prop.owed_property.family_support_description
      sc['currOwnedVal'+str(sc_i)] = total_family_support_amt
      sc['isCustExempt'+str(sc_i)] = prop.owed_property.family_support_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.owed_property.family_support_exemption_value_2 if prop.owed_property.family_support_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.owed_property.family_support_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.owed_property.family_support_sub_100 == True else True
      sc['line'+str(sc_i)] = "29"
      sc_i += 1
    ol_i += 1
  else:
    ab['noFamilySupport'] = True

  #
  # Owed Other
  #

  if prop.owed_property.has_other_amounts == True:
    ab['hasOtherAmts'] = True
    ab['otherAmtsDesc'] = prop.owed_property.other_amounts_description
    ab['otherAmtsAmt'] = currency(prop.owed_property.other_amounts_value)
    #exemptions
    if prop.owed_property.other_amounts_has_claim:
      sc['desc'+str(sc_i)] = "Owed Other: " + prop.owed_property.other_amounts_description
      sc['currOwnedVal'+str(sc_i)] = prop.owed_property.other_amounts_value
      sc['isCustExempt'+str(sc_i)] = prop.owed_property.other_amounts_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.owed_property.other_amounts_exemption_value if prop.owed_property.other_amounts_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.owed_property.other_amounts_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.owed_property.other_amounts_sub_100 == True else True
      sc['line'+str(sc_i)] = "30"
      sc_i += 1
    if prop.owed_property.other_amounts_has_claim and prop.owed_property.other_amounts_exemption_value_2:
      sc['desc'+str(sc_i)] = "Owed Other: " + prop.owed_property.other_amounts_description
      sc['currOwnedVal'+str(sc_i)] = prop.owed_property.other_amounts_value
      sc['isCustExempt'+str(sc_i)] = prop.owed_property.other_amounts_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.owed_property.other_amounts_exemption_value_2 if prop.owed_property.other_amounts_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.owed_property.other_amounts_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.owed_property.other_amounts_sub_100 == True else True
      sc['line'+str(sc_i)] = "30"
      sc_i += 1
    ol_i += 1
  else:
    ab['noOtherAmts'] = True

  #
  # Owed Insurance
  #

  if prop.owed_property.has_insurance_interest == True:
    ab['hasInsurance'] = True
    ab['ins1Name'] = prop.owed_property.first_insurance_interest_name
    ab['ins1Beneficiary'] = prop.owed_property.first_insurance_beneficiary
    ab['ins1Amt'] = currency(prop.owed_property.first_insurance_interest_amount)
    ab['ins2Name'] = prop.owed_property.second_insurance_interest_name
    ab['ins2Beneficiary'] = prop.owed_property.second_insurance_beneficiary
    ab['ins2Amt'] = currency(prop.owed_property.second_insurance_interest_amount)
    ab['ins3Name'] = prop.owed_property.third_insurance_interest_name
    ab['ins3Beneficiary'] = prop.owed_property.third_insurance_beneficiary
    ab['ins3Amt'] = currency(prop.owed_property.third_insurance_interest_amount)
    total_insurance_amt = prop.owed_property.first_insurance_interest_amount + prop.owed_property.second_insurance_interest_amount + prop.owed_property.third_insurance_interest_amount
    #exemptions
    if prop.owed_property.first_insurance_interest_has_claim:
      sc['desc'+str(sc_i)] = "Owed insurance"
      sc['currOwnedVal'+str(sc_i)] = prop.owed_property.first_insurance_interest_amount
      sc['isCustExempt'+str(sc_i)] = prop.owed_property.first_insurance_interest_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.owed_property.first_insurance_interest_exemption_value if prop.owed_property.first_insurance_interest_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.owed_property.first_insurance_interest_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.owed_property.first_insurance_interest_sub_100 == True else True
      sc['line'+str(sc_i)] = "31.1"
      sc_i += 1
      ol_i += 1
    if prop.owed_property.first_insurance_interest_has_claim and prop.owed_property.first_insurance_interest_exemption_value_2:
      sc['desc'+str(sc_i)] = "Owed insurance"
      sc['currOwnedVal'+str(sc_i)] = prop.owed_property.first_insurance_interest_amount
      sc['isCustExempt'+str(sc_i)] = prop.owed_property.first_insurance_interest_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.owed_property.first_insurance_interest_exemption_value_2 if prop.owed_property.first_insurance_interest_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.owed_property.first_insurance_interest_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.owed_property.first_insurance_interest_sub_100 == True else True
      sc['line'+str(sc_i)] = "31.1"
      sc_i += 1
      ol_i += 1

    if prop.owed_property.second_insurance_interest_has_claim:
      sc['desc'+str(sc_i)] = "Owed insurance"
      sc['currOwnedVal'+str(sc_i)] = prop.owed_property.second_insurance_interest_amount
      sc['isCustExempt'+str(sc_i)] = prop.owed_property.second_insurance_interest_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.owed_property.second_insurance_interest_exemption_value if prop.owed_property.second_insurance_interest_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.owed_property.second_insurance_interest_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.owed_property.second_insurance_interest_sub_100 == True else True
      sc['line'+str(sc_i)] = "31.2"
      sc_i += 1
      ol_i += 1
    if prop.owed_property.second_insurance_interest_has_claim and prop.owed_property.second_insurance_interest_exemption_value_2:
      sc['desc'+str(sc_i)] = "Owed insurance"
      sc['currOwnedVal'+str(sc_i)] = prop.owed_property.second_insurance_interest_amount
      sc['isCustExempt'+str(sc_i)] = prop.owed_property.second_insurance_interest_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.owed_property.second_insurance_interest_exemption_value_2 if prop.owed_property.second_insurance_interest_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.owed_property.second_insurance_interest_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.owed_property.second_insurance_interest_sub_100 == True else True
      sc['line'+str(sc_i)] = "31.2"
      sc_i += 1
      ol_i += 1

    if prop.owed_property.third_insurance_interest_has_claim:
      sc['desc'+str(sc_i)] = "Owed insurance"
      sc['currOwnedVal'+str(sc_i)] = prop.owed_property.third_insurance_interest_amount
      sc['isCustExempt'+str(sc_i)] = prop.owed_property.third_insurance_interest_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.owed_property.third_insurance_interest_exemption_value if prop.owed_property.third_insurance_interest_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.owed_property.third_insurance_interest_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.owed_property.third_insurance_interest_sub_100 == True else True
      sc['line'+str(sc_i)] = "31.3"
      sc_i += 1
      ol_i += 1
    if prop.owed_property.third_insurance_interest_has_claim and prop.owed_property.third_insuarance_interest_exemption_value_2:
      sc['desc'+str(sc_i)] = "Owed insurance"
      sc['currOwnedVal'+str(sc_i)] = prop.owed_property.third_insurance_interest_amount
      sc['isCustExempt'+str(sc_i)] = prop.owed_property.third_insurance_interest_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.owed_property.third_insurance_interest_exemption_value_2 if prop.owed_property.third_insurance_interest_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.owed_property.third_insurance_interest_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.owed_property.third_insurance_interest_sub_100 == True else True
      sc['line'+str(sc_i)] = "31.3"
      sc_i += 1
      ol_i += 1
  else:
    ab['noInsurance'] = True

  #
  # Owed death claims
  #

  if prop.owed_property.has_trust == True:
    ab['hasDeath'] = True
    ab['deathDesc'] = prop.owed_property.trust_description
    ab['deathAmt'] = currency(prop.owed_property.trust_amount)
    #exemptions
    if prop.owed_property.trust_has_claim:
      sc['desc'+str(sc_i)] = "Death: " + prop.owed_property.trust_description
      sc['currOwnedVal'+str(sc_i)] = prop.owed_property.trust_amount
      sc['isCustExempt'+str(sc_i)] = prop.owed_property.trust_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.owed_property.trust_exemption_value if prop.owed_property.trust_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.owed_property.trust_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.owed_property.trust_sub_100 == True else True
      sc['line'+str(sc_i)] = "32"
      sc_i += 1
    if prop.owed_property.trust_has_claim and prop.owed_property.trust_exemption_value_2:
      sc['desc'+str(sc_i)] = "Death: " + prop.owed_property.trust_description
      sc['currOwnedVal'+str(sc_i)] = prop.owed_property.trust_amount
      sc['isCustExempt'+str(sc_i)] = prop.owed_property.trust_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.owed_property.trust_exemption_value_2 if prop.owed_property.trust_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.owed_property.trust_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.owed_property.trust_sub_100 == True else True
      sc['line'+str(sc_i)] = "32"
      sc_i += 1
    ol_i += 1
  else:
    ab['noDeath'] = True

  #
  # Third Party Claims
  #

  if prop.owed_property.has_third_party == True:
    ab['hasThirdPartyClaims'] = True
    ab['thirdPartyClaimsDesc'] = prop.owed_property.third_party_description
    ab['thirdPartyClaimsAmt'] = currency(prop.owed_property.third_party_amount)
    #exemptions
    if prop.owed_property.third_party_has_claim:
      sc['desc'+str(sc_i)] = "Third-party: " + prop.owed_property.third_party_description
      sc['currOwnedVal'+str(sc_i)] = prop.owed_property.third_party_amount
      sc['isCustExempt'+str(sc_i)] = prop.owed_property.third_party_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.owed_property.third_party_exemption_value if prop.owed_property.third_party_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.owed_property.third_party_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.owed_property.third_party_sub_100 == True else True
      sc['line'+str(sc_i)] = "33"
      sc_i += 1
    if prop.owed_property.third_party_has_claim and prop.owed_property.third_party_exemption_value_2:
      sc['desc'+str(sc_i)] = "Third-party: " + prop.owed_property.third_party_description
      sc['currOwnedVal'+str(sc_i)] = prop.owed_property.third_party_amount
      sc['isCustExempt'+str(sc_i)] = prop.owed_property.third_party_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.owed_property.third_party_exemption_value_2 if prop.owed_property.third_party_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.owed_property.third_party_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.owed_property.third_party_sub_100 == True else True
      sc['line'+str(sc_i)] = "33"
      sc_i += 1
    ol_i += 1
  else:
    ab['noThirdPartyClaims'] = True

  #
  # Contingent Claims
  #

  if prop.owed_property.has_contingent_claims == True:
    ab['hasContingentClaims'] = True
    ab['contingentClaimsDesc'] = prop.owed_property.contingent_claims_description
    ab['contingentClaimsAmt'] = currency(prop.owed_property.contingent_claims_amount)
    #exemptions
    if prop.owed_property.contingent_claims_has_claim:
      sc['desc'+str(sc_i)] = "Contingent Claim: " + prop.owed_property.contingent_claims_description
      sc['currOwnedVal'+str(sc_i)] = prop.owed_property.contingent_claims_description
      sc['isCustExempt'+str(sc_i)] = prop.owed_property.contingent_claims_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.owed_property.contingent_claims_exemption_value if prop.owed_property.contingent_claims_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.owed_property.contingent_claims_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.owed_property.contingent_claims_sub_100 == True else True
      sc['line'+str(sc_i)] = "34"
      sc_i += 1
    if prop.owed_property.contingent_claims_has_claim and prop.owed_property.contingent_claims_exemption_value_2:
      sc['desc'+str(sc_i)] = "Contingent Claim: " + prop.owed_property.contingent_claims_description
      sc['currOwnedVal'+str(sc_i)] = prop.owed_property.contingent_claims_description
      sc['isCustExempt'+str(sc_i)] = prop.owed_property.contingent_claims_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.owed_property.contingent_claims_exemption_value_2 if prop.owed_property.contingent_claims_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.owed_property.contingent_claims_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.owed_property.contingent_claims_sub_100 == True else True
      sc['line'+str(sc_i)] = "34"
      sc_i += 1
    ol_i += 1
  else:
    ab['noContingentClaims'] = True

  #
  # Other Financial Assets
  #

  if prop.owed_property.has_other_assets == True:
    ab['hasOtherFinancialAssets'] = True
    ab['otherFinancialAssetsDesc'] = prop.owed_property.other_assets_description
    ab['otherFinancialAssetsAmt'] = currency(prop.owed_property.other_assets_amount)
    #exemptions
    if prop.owed_property.other_assets_has_claim:
      sc['desc'+str(sc_i)] = "Other Asset: " + prop.owed_property.other_assets_description
      sc['currOwnedVal'+str(sc_i)] = prop.owed_property.other_assets_amount
      sc['isCustExempt'+str(sc_i)] = prop.owed_property.other_assets_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.owed_property.other_assets_exemption_value if prop.owed_property.other_assets_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.owed_property.other_assets_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.owed_property.other_assets_sub_100 == True else True
      sc['line'+str(sc_i)] = "35"
      sc_i += 1
    if prop.owed_property.other_assets_has_claim and prop.owed_property.other_assets_exemption_value_2:
      sc['desc'+str(sc_i)] = "Other Asset: " + prop.owed_property.other_assets_description
      sc['currOwnedVal'+str(sc_i)] = prop.owed_property.other_assets_amount
      sc['isCustExempt'+str(sc_i)] = prop.owed_property.other_assets_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.owed_property.other_assets_exemption_value_2 if prop.owed_property.other_assets_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.owed_property.other_assets_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.owed_property.other_assets_sub_100 == True else True
      sc['line'+str(sc_i)] = "35"
      sc_i += 1
    ol_i += 1
  else:
    ab['noOtherFinancialAssets'] = True

  ab['p4TotalAmt'] = currency(prop.financial_assets.cash_value + sum(deposit.amount for deposit in prop.financial_assets.deposits) + sum(bond.amount for bond in prop.financial_assets.bonds_and_stocks) + sum(ntStock.value for ntStock in prop.financial_assets.non_traded_stock) + sum(cBond.amount for cBond in prop.financial_assets.corporate_bonds) + sum(retAct.amount for retAct in prop.financial_assets.retirement_accounts) + sum(prepay.amount for prepay in prop.financial_assets.prepayments) + sum(annu.amount for annu in prop.financial_assets.annuities) + sum(edu.amount for edu in prop.financial_assets.edu_accounts) + prop.financial_assets.future_property_interest_value + prop.financial_assets.ip_interest_value + prop.financial_assets.intangible_interest_value + prop.owed_property.tax_refund_federal + prop.owed_property.tax_refund_state + prop.owed_property.tax_refund_local + prop.owed_property.family_support_alimony + prop.owed_property.family_support_maintenance + prop.owed_property.family_support_support + prop.owed_property.family_support_divorce + prop.owed_property.family_support_settlement + prop.owed_property.other_amounts_value + prop.owed_property.first_insurance_interest_amount + prop.owed_property.second_insurance_interest_amount + prop.owed_property.third_insurance_interest_amount + prop.owed_property.trust_amount + prop.owed_property.third_party_amount)

  #
  # Business Property
  #

  if prop.business_property.has_property == True:
    ab['hasBusinessProperty'] = True

    #
    # AR
    #

    if prop.business_property.has_ar == True:
      ab['hasAR'] = True
      ab['arDesc'] = prop.business_property.ar_description
      ab['arAmt'] = currency(prop.business_property.ar_amount)
      #exemptions
      if prop.business_property.ar_has_claim:
        sc['desc'+str(sc_i)] = "AR: " + prop.business_property.ar_description
        sc['currOwnedVal'+str(sc_i)] = prop.business_property.ar_amount
        sc['isCustExempt'+str(sc_i)] = prop.business_property.ar_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.business_property.ar_exemption_value if prop.business_property.ar_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.business_property.ar_exemption_laws
        sc['isFairMarket'+str(sc_i)] = False if prop.business_property.ar_sub_100 == True else True
        sc['line'+str(sc_i)] = "38"
        sc_i += 1
      if prop.business_property.ar_has_claim and prop.business_property.ar_exemption_value_2:
        sc['desc'+str(sc_i)] = "AR: " + prop.business_property.ar_description
        sc['currOwnedVal'+str(sc_i)] = prop.business_property.ar_amount
        sc['isCustExempt'+str(sc_i)] = prop.business_property.ar_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.business_property.ar_exemption_value_2 if prop.business_property.ar_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.business_property.ar_exemption_laws_2
        sc['isFairMarket'+str(sc_i)] = False if prop.business_property.ar_sub_100 == True else True
        sc['line'+str(sc_i)] = "38"
        sc_i += 1
      ol_i += 1
    else:
      ab['noAR'] = True

    #
    # Business Equipment
    #

    if prop.business_property.has_equipment == True:
      ab['hasOfficeEquipment'] = True
      ab['officeEquipmentDesc'] = prop.business_property.equipment_description
      ab['officeEquipmentAmt'] = currency(prop.business_property.equipment_amount)
      #exemptions
      if prop.business_property.equipment_has_claim:
        sc['desc'+str(sc_i)] = "Bus Equipment: " + prop.business_property.equipment_description
        sc['currOwnedVal'+str(sc_i)] = prop.business_property.equipment_amount
        sc['isCustExempt'+str(sc_i)] = prop.business_property.equipment_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.business_property.equipment_exemption_value if prop.business_property.equipment_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.business_property.equipment_exemption_laws
        sc['isFairMarket'+str(sc_i)] = False if prop.business_property.equipment_sub_100 == True else True
        sc['line'+str(sc_i)] = "39"
        sc_i += 1
      if prop.business_property.equipment_has_claim and prop.business_property.equipment_exemption_value_2:
        sc['desc'+str(sc_i)] = "Bus Equipment: " + prop.business_property.equipment_description
        sc['currOwnedVal'+str(sc_i)] = prop.business_property.equipment_amount
        sc['isCustExempt'+str(sc_i)] = prop.business_property.equipment_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.business_property.equipment_exemption_value_2 if prop.business_property.equipment_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.business_property.equipment_exemption_laws_2
        sc['isFairMarket'+str(sc_i)] = False if prop.business_property.equipment_sub_100 == True else True
        sc['line'+str(sc_i)] = "39"
        sc_i += 1
      ol_i += 1
    else:
      ab['noOfficeEquipment'] = True

    #
    # Business Machinery
    #

    if prop.business_property.has_machinery == True:
      ab['hasMachinery'] = True
      ab['machineryDesc'] = prop.business_property.machinery_description
      ab['machineryAmt'] = currency(prop.business_property.machinery_amount)
      #exemptions
      if prop.business_property.machinery_has_claim:
        sc['desc'+str(sc_i)] = "Bus Machinery: " + prop.business_property.machinery_description
        sc['currOwnedVal'+str(sc_i)] = prop.business_property.machinery_amount
        sc['isCustExempt'+str(sc_i)] = prop.business_property.machinery_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.business_property.machinery_exemption_value if prop.business_property.machinery_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.business_property.machinery_exemption_laws
        sc['isFairMarket'+str(sc_i)] = False if prop.business_property.machinery_sub_100 == True else True
        sc['line'+str(sc_i)] = "40"
        sc_i += 1
      if prop.business_property.machinery_has_claim and prop.business_property.machinery_exemption_value_2:
        sc['desc'+str(sc_i)] = "Bus Machinery: " + prop.business_property.machinery_description
        sc['currOwnedVal'+str(sc_i)] = prop.business_property.machinery_amount
        sc['isCustExempt'+str(sc_i)] = prop.business_property.machinery_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.business_property.machinery_exemption_value_2 if prop.business_property.machinery_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.business_property.machinery_exemption_laws_2
        sc['isFairMarket'+str(sc_i)] = False if prop.business_property.machinery_sub_100 == True else True
        sc['line'+str(sc_i)] = "40"
        sc_i += 1
      ol_i += 1
    else:
      ab['noMachinery'] = True

    #
    # Business Inventory
    #

    if prop.business_property.has_inventory == True:
      ab['hasInventory'] = True
      ab['inventoryDesc'] = prop.business_property.inventory_description
      ab['inventoryAmt'] = currency(prop.business_property.inventory_amount)
      #exemptions
      if prop.business_property.inventory_has_claim:
        sc['desc'+str(sc_i)] = "Bus Inventory: " + prop.business_property.inventory_description
        sc['currOwnedVal'+str(sc_i)] = prop.business_property.inventory_amount
        sc['isCustExempt'+str(sc_i)] = prop.business_property.inventory_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.business_property.inventory_exemption_value if prop.business_property.inventory_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.business_property.inventory_exemption_laws
        sc['isFairMarket'+str(sc_i)] = False if prop.business_property.inventory_sub_100 == True else True
        sc['line'+str(sc_i)] = "41"
        sc_i += 1
      if prop.business_property.inventory_has_claim and prop.business_property.inventory_exemption_value_2:
        sc['desc'+str(sc_i)] = "Bus Inventory: " + prop.business_property.inventory_description
        sc['currOwnedVal'+str(sc_i)] = prop.business_property.inventory_amount
        sc['isCustExempt'+str(sc_i)] = prop.business_property.inventory_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.business_property.inventory_exemption_value_2 if prop.business_property.inventory_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.business_property.inventory_exemption_laws_2
        sc['isFairMarket'+str(sc_i)] = False if prop.business_property.inventory_sub_100 == True else True
        sc['line'+str(sc_i)] = "41"
        sc_i += 1
      ol_i += 1
    else:
      ab['noInventory'] = True

    #
    # Business partnerships
    #

    if prop.business_property.has_partnerships == True:
      ab['hasPartnerships'] = True
      ab['part1Entity'] = prop.business_property.partnershipDescription1
      ab['part1Ownership'] = prop.business_property.partnershipOwnership1
      ab['part1Amt'] = currency(prop.business_property.partnershipValue1)
      ab['part2Entity'] = prop.business_property.partnershipDescription2
      ab['part2Ownership'] = prop.business_property.partnershipOwnership2
      ab['part2Amt'] = currency(prop.business_property.partnershipValue2)
      ab['part3Entity'] = prop.business_property.partnershipDescription3
      ab['part3Ownership'] = prop.business_property.partnershipOwnership3
      ab['part3Amt'] = currency(prop.business_property.partnershipValue3)
      total_partnership_value = prop.business_property.partnershipValue1 + prop.business_property.partnershipValue2 + prop.business_property.partnershipValue3
      #exemptions
      if prop.business_property.partnership_has_claim:
        sc['desc'+str(sc_i)] = "Bus Partnerships"
        sc['currOwnedVal'+str(sc_i)] = total_partnership_value
        sc['isCustExempt'+str(sc_i)] = prop.business_property.partnership_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.business_property.partnership_exemption_value if prop.business_property.partnership_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.business_property.partnership_exemption_laws
        sc['isFairMarket'+str(sc_i)] = False if prop.business_property.partnership_sub_100 == True else True
        sc['line'+str(sc_i)] = "42"
        sc_i += 1
      if prop.business_property.partnership_has_claim and prop.business_property.partnership_exemption_value_2:
        sc['desc'+str(sc_i)] = "Bus Partnerships"
        sc['currOwnedVal'+str(sc_i)] = total_partnership_value
        sc['isCustExempt'+str(sc_i)] = prop.business_property.partnership_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.business_property.partnership_exemption_value_2 if prop.business_property.partnership_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.business_property.partnership_exemption_laws_2
        sc['isFairMarket'+str(sc_i)] = False if prop.business_property.partnership_sub_100 == True else True
        sc['line'+str(sc_i)] = "42"
        sc_i += 1
      ol_i += 1
    else:
      ab['noPartnerships'] = True

    #
    # Business Lists
    #

    if prop.business_property.has_lists == True:
      ab['hasMailing'] = True
      if prop.business_property.has_identity_lists == True:
        ab['hasPersonalMailing'] = True
        ab['personalMailingDesc'] = prop.business_property.lists_description
        ab['personalMailingAmt'] = currency(prop.business_property.lists_amount)
        #exemptions
        if prop.business_property.lists_has_claim:
          sc['desc'+str(sc_i)] = "Bus Lists: " + prop.business_property.lists_description
          sc['currOwnedVal'+str(sc_i)] = prop.business_property.lists_amount
          sc['isCustExempt'+str(sc_i)] = prop.business_property.lists_sub_100
          sc['custExemptVal'+str(sc_i)] = prop.business_property.lists_exemption_value if prop.business_property.lists_sub_100 == True else None
          sc['laws'+str(sc_i)] = prop.business_property.lists_exemption_laws
          sc['isFairMarket'+str(sc_i)] = False if prop.business_property.lists_sub_100 == True else True
          sc['line'+str(sc_i)] = "43"
          sc_i += 1
        if prop.business_property.lists_has_claim and prop.business_property.lists_exemption_value_2:
          sc['desc'+str(sc_i)] = "Bus Lists: " + prop.business_property.lists_description
          sc['currOwnedVal'+str(sc_i)] = prop.business_property.lists_amount
          sc['isCustExempt'+str(sc_i)] = prop.business_property.lists_sub_100
          sc['custExemptVal'+str(sc_i)] = prop.business_property.lists_exemption_value_2 if prop.business_property.lists_sub_100 == True else None
          sc['laws'+str(sc_i)] = prop.business_property.lists_exemption_laws_2
          sc['isFairMarket'+str(sc_i)] = False if prop.business_property.lists_sub_100 == True else True
          sc['line'+str(sc_i)] = "43"
          sc_i += 1
        ol_i += 1
      else:
        ab['noPersonalMailing'] = True
    else:
      ab['noMailing'] = True

    #
    # Business Other
    #

    if prop.business_property.has_other == True:
      ab['hasOtherBusinessProp'] = True
      ab['otherProp1Desc'] = prop.business_property.otherPropertyDescription1
      ab['otherProp1Amt'] = currency(prop.business_property.otherPropertyAmount1)
      ab['otherProp2Desc'] = prop.business_property.otherPropertyDescription2
      ab['otherProp2Amt'] = currency(prop.business_property.otherPropertyAmount2)
      ab['otherProp3Desc'] = prop.business_property.otherPropertyDescription3
      ab['otherProp3Amt'] = currency(prop.business_property.otherPropertyAmount3)
      ab['otherProp4Desc'] = prop.business_property.otherPropertyDescription4
      ab['otherProp4Amt'] = currency(prop.business_property.otherPropertyAmount4)
      ab['otherProp5Desc'] = prop.business_property.otherPropertyDescription5
      ab['otherProp5Amt'] = currency(prop.business_property.otherPropertyAmount5)
      ab['otherProp6Desc'] = prop.business_property.otherPropertyDescription6
      ab['otherProp6Amt'] = currency(prop.business_property.otherPropertyAmount6)
      total_other_bus_prop_val = prop.business_property.otherPropertyAmount1 + prop.business_property.otherPropertyAmount2 + prop.business_property.otherPropertyAmount3 + prop.business_property.otherPropertyAmount4 + prop.business_property.otherPropertyAmount5 + prop.business_property.otherPropertyAmount6
      #exemptions
      if prop.business_property.otherProperty_has_claim:
        sc['desc'+str(sc_i)] = "Bus Other Prop"
        sc['currOwnedVal'+str(sc_i)] = total_other_bus_prop_val
        sc['isCustExempt'+str(sc_i)] = prop.business_property.otherProperty_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.business_property.otherProperty_exemption_value if prop.business_property.otherProperty_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.business_property.otherProperty_exemption_laws
        sc['isFairMarket'+str(sc_i)] = False if prop.business_property.otherProperty_sub_100 == True else True
        sc['line'+str(sc_i)] = "44"
        sc_i += 1
      if prop.business_property.otherProperty_has_claim and prop.business_property.otherProperty_exemption_value_2:
        sc['desc'+str(sc_i)] = "Bus Other Prop"
        sc['currOwnedVal'+str(sc_i)] = total_other_bus_prop_val
        sc['isCustExempt'+str(sc_i)] = prop.business_property.otherProperty_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.business_property.otherProperty_exemption_value_2 if prop.business_property.otherProperty_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.business_property.otherProperty_exemption_laws_2
        sc['isFairMarket'+str(sc_i)] = False if prop.business_property.otherProperty_sub_100 == True else True
        sc['line'+str(sc_i)] = "44"
        sc_i += 1
      ol_i += 1
    else:
      ab['noOtherBusinessProp'] = True

    ab['p5TotalAmt'] = currency(prop.business_property.ar_amount + prop.business_property.equipment_amount + prop.business_property.machinery_amount + prop.business_property.inventory_amount + prop.business_property.partnershipValue1 + prop.business_property.partnershipValue2 + prop.business_property.partnershipValue3 + prop.business_property.lists_amount + prop.business_property.otherPropertyAmount1 + prop.business_property.otherPropertyAmount2 + prop.business_property.otherPropertyAmount3 + prop.business_property.otherPropertyAmount4 + prop.business_property.otherPropertyAmount5 + prop.business_property.otherPropertyAmount6)

  else:
    ab['noBusinessProperty'] = True

  #
  # Farm stuffs
  #

  if prop.farming_property.has_property == True:
    ab['hasFishing'] = True

    #
    # Farm Animals
    #

    if prop.farming_property.has_animals == True:
      ab['hasFarmAnimals'] = True
      ab['farmAnimalsDesc'] = prop.farming_property.animal_description
      ab['farmAnimalsAmt'] = currency(prop.farming_property.animal_amount)
    #exemptions
      if prop.farming_property.has_animal_claim:
        sc['desc'+str(sc_i)] = "Animals"
        sc['currOwnedVal'+str(sc_i)] = prop.farming_property.animal_amount
        sc['isCustExempt'+str(sc_i)] = prop.farming_property.animal_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.farming_property.animal_exemption_value if prop.farming_property.animal_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.farming_property.animal_exemption_laws
        sc['isFairMarket'+str(sc_i)] = False if prop.farming_property.animal_sub_100 == True else True
        sc['line'+str(sc_i)] = "47"
        sc_i += 1
      if prop.farming_property.has_animal_claim and prop.farming_property.animal_exemption_value_2:
        sc['desc'+str(sc_i)] = "Animals"
        sc['currOwnedVal'+str(sc_i)] = prop.farming_property.animal_amount
        sc['isCustExempt'+str(sc_i)] = prop.farming_property.animal_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.farming_property.animal_exemption_value_2 if prop.farming_property.animal_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.farming_property.animal_exemption_laws_2
        sc['isFairMarket'+str(sc_i)] = False if prop.farming_property.animal_sub_100 == True else True
        sc['line'+str(sc_i)] = "47"
        sc_i += 1
      ol_i += 1
    else:
      ab['noFarmAnimals'] = True

    if prop.farming_property.has_crops == True:
      ab['hasCrops'] = True
      ab['cropsDescription'] = prop.farming_property.crop_description
      ab['cropsAmt'] = currency(prop.farming_property.crop_amount)
      if prop.farming_property.has_crops_claim:
        sc['desc'+str(sc_i)] = "Crops"
        sc['currOwnedVal'+str(sc_i)] = prop.farming_property.crop_amount
        sc['isCustExempt'+str(sc_i)] = prop.farming_property.crops_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.farming_property.crops_exemption_value if prop.farming_property.crops_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.farming_property.crops_exemption_laws
        sc['isFairMarket'+str(sc_i)] = False if prop.farming_property.crops_sub_100 == True else True
        sc['line'+str(sc_i)] = "48"
        sc_i += 1
      if prop.farming_property.has_crops_claim and prop.farming_property.crops_exemption_value_2:
        sc['desc'+str(sc_i)] = "Crops"
        sc['currOwnedVal'+str(sc_i)] = prop.farming_property.crop_amount
        sc['isCustExempt'+str(sc_i)] = prop.farming_property.crops_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.farming_property.crops_exemption_value_2 if prop.farming_property.crops_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.farming_property.crops_exemption_laws_2
        sc['isFairMarket'+str(sc_i)] = False if prop.farming_property.crops_sub_100 == True else True
        sc['line'+str(sc_i)] = "48"
        sc_i += 1
      ol_i += 1
    else:
      ab['noCrops'] = True

    if prop.farming_property.has_equipment == True:
      ab['hasFarmTools'] = True
      ab['farmToolsDesc'] = prop.farming_property.equipment_description
      ab['farmToolsAmt'] = currency(prop.farming_property.equipment_amount)
      if prop.farming_property.has_equipment_claim:
        sc['desc'+str(sc_i)] = "Equipment"
        sc['currOwnedVal'+str(sc_i)] = prop.farming_property.equipment_amount
        sc['isCustExempt'+str(sc_i)] = prop.farming_property.equipment_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.farming_property.equipment_exemption_value if prop.farming_property.equipment_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.farming_property.equipment_exemption_laws
        sc['isFairMarket'+str(sc_i)] = False if prop.farming_property.equipment_sub_100 == True else True
        sc['line'+str(sc_i)] = "49"
        sc_i += 1
      if prop.farming_property.has_equipment_claim and prop.farming_property.equipment_exemption_value_2:
        sc['desc'+str(sc_i)] = "Equipment"
        sc['currOwnedVal'+str(sc_i)] = prop.farming_property.equipment_amount
        sc['isCustExempt'+str(sc_i)] = prop.farming_property.equipment_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.farming_property.equipment_exemption_value_2 if prop.farming_property.equipment_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.farming_property.equipment_exemption_laws_2
        sc['isFairMarket'+str(sc_i)] = False if prop.farming_property.equipment_sub_100 == True else True
        sc['line'+str(sc_i)] = "49"
        sc_i += 1
      ol_i += 1
    else:
      ab['noFarmTools'] = True

    if prop.farming_property.has_supplies == True:
      ab['hasFarmFeed'] = True
      ab['farmFeedDescription'] = prop.farming_property.supplies_description
      ab['farmFeedAmt'] = currency(prop.farming_property.supplies_amount)
      if prop.farming_property.has_supplies_claim:
        sc['desc'+str(sc_i)] = "Supplies"
        sc['currOwnedVal'+str(sc_i)] = prop.farming_property.supplies_amount
        sc['isCustExempt'+str(sc_i)] = prop.farming_property.supplies_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.farming_property.supplies_exemption_value if prop.farming_property.supplies_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.farming_property.supplies_exemption_laws
        sc['isFairMarket'+str(sc_i)] = False if prop.farming_property.supplies_sub_100 == True else True
        sc['line'+str(sc_i)] = "50"
        sc_i += 1
      if prop.farming_property.has_supplies_claim and prop.farming_property.supplies_exemption_value_2:
        sc['desc'+str(sc_i)] = "Supplies"
        sc['currOwnedVal'+str(sc_i)] = prop.farming_property.supplies_amount
        sc['isCustExempt'+str(sc_i)] = prop.farming_property.supplies_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.farming_property.supplies_exemption_value_2 if prop.farming_property.supplies_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.farming_property.supplies_exemption_laws_2
        sc['isFairMarket'+str(sc_i)] = False if prop.farming_property.supplies_sub_100 == True else True
        sc['line'+str(sc_i)] = "50"
        sc_i += 1
      ol_i += 1
    else:
      ab['noFarmFeed'] = True

    if prop.farming_property.has_commercial == True:
      ab['hasOtherFarmProp'] = True
      ab['otherFarmPropDesc'] = prop.farming_property.commercial_description
      ab['otherFarmPropAmt'] = currency(prop.farming_property.commercial_amount)
      if prop.farming_property.has_fishing_claim:
        sc['desc'+str(sc_i)] = "Commercial"
        sc['currOwnedVal'+str(sc_i)] = prop.farming_property.commercial_amount
        sc['isCustExempt'+str(sc_i)] = prop.farming_property.fishing_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.farming_property.fishing_exemption_value if prop.farming_property.fishing_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.farming_property.fishing_exemption_laws
        sc['isFairMarket'+str(sc_i)] = False if prop.farming_property.fishing_sub_100 == True else True
        sc['line'+str(sc_i)] = "51"
        sc_i += 1
      if prop.farming_property.has_fishing_claim and prop.farming_property.fishing_exemption_value_2:
        sc['desc'+str(sc_i)] = "Commercial"
        sc['currOwnedVal'+str(sc_i)] = prop.farming_property.commercial_amount
        sc['isCustExempt'+str(sc_i)] = prop.farming_property.fishing_sub_100
        sc['custExemptVal'+str(sc_i)] = prop.farming_property.fishing_exemption_value_2 if prop.farming_property.fishing_sub_100 == True else None
        sc['laws'+str(sc_i)] = prop.farming_property.fishing_exemption_laws_2
        sc['isFairMarket'+str(sc_i)] = False if prop.farming_property.fishing_sub_100 == True else True
        sc['line'+str(sc_i)] = "51"
        sc_i += 1
      ol_i += 1
    else:
      ab['noOtherFarmProp'] = True

    total_farm_value = prop.farming_property.animal_amount + prop.farming_property.crop_amount + prop.farming_property.equipment_amount + prop.farming_property.supplies_amount + prop.farming_property.commercial_amount

    ab['p6TotalAmt'] = currency(prop.farming_property.animal_amount + prop.farming_property.crop_amount + prop.farming_property.equipment_amount + prop.farming_property.supplies_amount + prop.farming_property.commercial_amount)
  else:
    ab['noFishing'] = True

  if prop.has_other_prop == True:
    ab['hasOtherProperty'] = True
    ab['otherPropertyDesc'] = prop.other_prop_description
    ab['otherPropertyAmt1'] = currency(prop.other_prop_value)
    ab['otherPropertyAmt2'] = currency(prop.other_prop_value2)
    ab['otherPropertyAmt3'] = currency(prop.other_prop_value3)
    ab['p7TotalAmt'] = currency(prop.other_prop_value + prop.other_prop_value2 + prop.other_prop_value3)

    total_other_prop_value = prop.other_prop_value + prop.other_prop_value2 + prop.other_prop_value3
    #exemptions
    if prop.other_prop_has_claim:
      sc['desc'+str(sc_i)] = "Other Property"
      sc['currOwnedVal'+str(sc_i)] = total_other_prop_value
      sc['isCustExempt'+str(sc_i)] = prop.other_prop_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.other_prop_exemption_value if prop.other_prop_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.other_prop_exemption_laws
      sc['isFairMarket'+str(sc_i)] = False if prop.other_prop_sub_100 == True else True
      sc['line'+str(sc_i)] = "53"
      sc_i += 1
    if prop.other_prop_has_claim and prop.other_prop_exemption_value_2:
      sc['desc'+str(sc_i)] = "Other Property"
      sc['currOwnedVal'+str(sc_i)] = total_other_prop_value
      sc['isCustExempt'+str(sc_i)] = prop.other_prop_sub_100
      sc['custExemptVal'+str(sc_i)] = prop.other_prop_exemption_value_2 if prop.other_prop_sub_100 == True else None
      sc['laws'+str(sc_i)] = prop.other_prop_exemption_laws_2
      sc['isFairMarket'+str(sc_i)] = False if prop.other_prop_sub_100 == True else True
      sc['line'+str(sc_i)] = "53"
      sc_i += 1
    ol_i += 1
  else:
    ab['noOtherProperty'] = True

  ab['p7TotalAmt'] = currency(prop.other_prop_value + prop.other_prop_value2 + prop.other_prop_value3)
  ab['p1TotalAmtFinal'] = currency(sum(interest.current_owned_value for interest in prop.interests))
  ab['p2TotalAmtFinal'] = currency(sum(vehicle.current_owned_value for vehicle in prop.ab_vehicles) + sum(vehicle.current_owned_value for vehicle in prop.ab_other_vehicles))
  ab['p3TotalAmtFinal'] = currency(prop.household_goods_value + prop.electronics_value + prop.collectibles_value + prop.hobby_equipment_value + prop.firearms_value + prop.clothes_value + prop.jewelry_value + prop.animal_value + prop.other_household_items_value)
  ab['p4TotalAmtFinal'] = currency(prop.financial_assets.cash_value + sum(deposit.amount for deposit in prop.financial_assets.deposits) + sum(bond.amount for bond in prop.financial_assets.bonds_and_stocks) + sum(ntStock.value for ntStock in prop.financial_assets.non_traded_stock) + sum(cBond.amount for cBond in prop.financial_assets.corporate_bonds) + sum(retAct.amount for retAct in prop.financial_assets.retirement_accounts) + sum(prepay.amount for prepay in prop.financial_assets.prepayments) + sum(annu.amount for annu in prop.financial_assets.annuities) + sum(edu.amount for edu in prop.financial_assets.edu_accounts) + prop.financial_assets.future_property_interest_value + prop.financial_assets.ip_interest_value + prop.financial_assets.intangible_interest_value + prop.owed_property.tax_refund_federal + prop.owed_property.tax_refund_state + prop.owed_property.tax_refund_local + prop.owed_property.family_support_alimony + prop.owed_property.family_support_maintenance + prop.owed_property.family_support_support + prop.owed_property.family_support_divorce + prop.owed_property.family_support_settlement + prop.owed_property.other_amounts_value + prop.owed_property.first_insurance_interest_amount + prop.owed_property.second_insurance_interest_amount + prop.owed_property.third_insurance_interest_amount + prop.owed_property.trust_amount + prop.owed_property.third_party_amount)
  ab['p5TotalAmtFinal'] = currency(prop.business_property.ar_amount + prop.business_property.equipment_amount + prop.business_property.machinery_amount + prop.business_property.inventory_amount + prop.business_property.partnershipValue1 + prop.business_property.partnershipValue2 + prop.business_property.partnershipValue3 + prop.business_property.lists_amount + prop.business_property.otherPropertyAmount1 + prop.business_property.otherPropertyAmount2 + prop.business_property.otherPropertyAmount3 + prop.business_property.otherPropertyAmount4 + prop.business_property.otherPropertyAmount5 + prop.business_property.otherPropertyAmount6)
  ab['p6TotalAmtFinal'] = currency(prop.farming_property.animal_amount + prop.farming_property.crop_amount + prop.farming_property.equipment_amount + prop.farming_property.supplies_amount + prop.farming_property.commercial_amount)
  ab['p7TotalAmtFinal'] = currency(prop.other_prop_value + prop.other_prop_value2 + prop.other_prop_value3)
  ab['totalABPropertyAmt'] = currency(sum(vehicle.current_owned_value for vehicle in prop.ab_vehicles) + sum(vehicle.current_owned_value for vehicle in prop.ab_other_vehicles) + prop.household_goods_value + prop.electronics_value + prop.collectibles_value + prop.hobby_equipment_value + prop.firearms_value + prop.clothes_value + prop.jewelry_value + prop.animal_value + prop.other_household_items_value + prop.financial_assets.cash_value + sum(deposit.amount for deposit in prop.financial_assets.deposits) + sum(bond.amount for bond in prop.financial_assets.bonds_and_stocks) + sum(ntStock.value for ntStock in prop.financial_assets.non_traded_stock) + sum(cBond.amount for cBond in prop.financial_assets.corporate_bonds) + sum(retAct.amount for retAct in prop.financial_assets.retirement_accounts) + sum(prepay.amount for prepay in prop.financial_assets.prepayments) + sum(annu.amount for annu in prop.financial_assets.annuities) + sum(edu.amount for edu in prop.financial_assets.edu_accounts) + prop.financial_assets.future_property_interest_value + prop.financial_assets.ip_interest_value + prop.financial_assets.intangible_interest_value + prop.owed_property.tax_refund_federal + prop.owed_property.tax_refund_state + prop.owed_property.tax_refund_local + prop.owed_property.family_support_alimony + prop.owed_property.family_support_maintenance + prop.owed_property.family_support_support + prop.owed_property.family_support_divorce + prop.owed_property.family_support_settlement + prop.owed_property.other_amounts_value + prop.owed_property.first_insurance_interest_amount + prop.owed_property.second_insurance_interest_amount + prop.owed_property.third_insurance_interest_amount + prop.owed_property.trust_amount + prop.owed_property.third_party_amount + prop.business_property.ar_amount + prop.business_property.equipment_amount + prop.business_property.machinery_amount + prop.business_property.inventory_amount + prop.business_property.partnershipValue1 + prop.business_property.partnershipValue2 + prop.business_property.partnershipValue3 + prop.business_property.lists_amount + prop.business_property.otherPropertyAmount1 + prop.business_property.otherPropertyAmount2 + prop.business_property.otherPropertyAmount3 + prop.business_property.otherPropertyAmount4 + prop.business_property.otherPropertyAmount5 + prop.business_property.otherPropertyAmount6 + prop.farming_property.animal_amount + prop.farming_property.crop_amount + prop.farming_property.equipment_amount + prop.farming_property.supplies_amount + prop.farming_property.commercial_amount + prop.other_prop_value + prop.other_prop_value2 + prop.other_prop_value3)
  ab['totalPersonalProp'] = currency(sum(vehicle.current_owned_value for vehicle in prop.ab_vehicles) + sum(vehicle.current_owned_value for vehicle in prop.ab_other_vehicles) + prop.household_goods_value + prop.electronics_value + prop.collectibles_value + prop.hobby_equipment_value + prop.firearms_value + prop.clothes_value + prop.jewelry_value + prop.animal_value + prop.other_household_items_value + prop.financial_assets.cash_value + sum(deposit.amount for deposit in prop.financial_assets.deposits) + sum(bond.amount for bond in prop.financial_assets.bonds_and_stocks) + sum(ntStock.value for ntStock in prop.financial_assets.non_traded_stock) + sum(cBond.amount for cBond in prop.financial_assets.corporate_bonds) + sum(retAct.amount for retAct in prop.financial_assets.retirement_accounts) + sum(prepay.amount for prepay in prop.financial_assets.prepayments) + sum(annu.amount for annu in prop.financial_assets.annuities) + sum(edu.amount for edu in prop.financial_assets.edu_accounts) + prop.financial_assets.future_property_interest_value + prop.financial_assets.ip_interest_value + prop.financial_assets.intangible_interest_value + prop.owed_property.tax_refund_federal + prop.owed_property.tax_refund_state + prop.owed_property.tax_refund_local + prop.owed_property.family_support_alimony + prop.owed_property.family_support_maintenance + prop.owed_property.family_support_support + prop.owed_property.family_support_divorce + prop.owed_property.family_support_settlement + prop.owed_property.other_amounts_value + prop.owed_property.first_insurance_interest_amount + prop.owed_property.second_insurance_interest_amount + prop.owed_property.third_insurance_interest_amount + prop.owed_property.trust_amount + prop.owed_property.third_party_amount + prop.business_property.ar_amount + prop.business_property.equipment_amount + prop.business_property.machinery_amount + prop.business_property.inventory_amount + prop.business_property.partnershipValue1 + prop.business_property.partnershipValue2 + prop.business_property.partnershipValue3 + prop.business_property.lists_amount + prop.business_property.otherPropertyAmount1 + prop.business_property.otherPropertyAmount2 + prop.business_property.otherPropertyAmount3 + prop.business_property.otherPropertyAmount4 + prop.business_property.otherPropertyAmount5 + prop.business_property.otherPropertyAmount6 + prop.farming_property.animal_amount + prop.farming_property.crop_amount + prop.farming_property.equipment_amount + prop.farming_property.supplies_amount + prop.farming_property.commercial_amount + prop.other_prop_value + prop.other_prop_value2 + prop.other_prop_value3)
  ab['totalPersonalPropCopy'] = currency(sum(vehicle.current_owned_value for vehicle in prop.ab_vehicles) + sum(vehicle.current_owned_value for vehicle in prop.ab_other_vehicles) + prop.household_goods_value + prop.electronics_value + prop.collectibles_value + prop.hobby_equipment_value + prop.firearms_value + prop.clothes_value + prop.jewelry_value + prop.animal_value + prop.other_household_items_value + prop.financial_assets.cash_value + sum(deposit.amount for deposit in prop.financial_assets.deposits) + sum(bond.amount for bond in prop.financial_assets.bonds_and_stocks) + sum(ntStock.value for ntStock in prop.financial_assets.non_traded_stock) + sum(cBond.amount for cBond in prop.financial_assets.corporate_bonds) + sum(retAct.amount for retAct in prop.financial_assets.retirement_accounts) + sum(prepay.amount for prepay in prop.financial_assets.prepayments) + sum(annu.amount for annu in prop.financial_assets.annuities) + sum(edu.amount for edu in prop.financial_assets.edu_accounts) + prop.financial_assets.future_property_interest_value + prop.financial_assets.ip_interest_value + prop.financial_assets.intangible_interest_value + prop.owed_property.tax_refund_federal + prop.owed_property.tax_refund_state + prop.owed_property.tax_refund_local + prop.owed_property.family_support_alimony + prop.owed_property.family_support_maintenance + prop.owed_property.family_support_support + prop.owed_property.family_support_divorce + prop.owed_property.family_support_settlement + prop.owed_property.other_amounts_value + prop.owed_property.first_insurance_interest_amount + prop.owed_property.second_insurance_interest_amount + prop.owed_property.third_insurance_interest_amount + prop.owed_property.trust_amount + prop.owed_property.third_party_amount + prop.business_property.ar_amount + prop.business_property.equipment_amount + prop.business_property.machinery_amount + prop.business_property.inventory_amount + prop.business_property.partnershipValue1 + prop.business_property.partnershipValue2 + prop.business_property.partnershipValue3 + prop.business_property.lists_amount + prop.business_property.otherPropertyAmount1 + prop.business_property.otherPropertyAmount2 + prop.business_property.otherPropertyAmount3 + prop.business_property.otherPropertyAmount4 + prop.business_property.otherPropertyAmount5 + prop.business_property.otherPropertyAmount6 + prop.farming_property.animal_amount + prop.farming_property.crop_amount + prop.farming_property.equipment_amount + prop.farming_property.supplies_amount + prop.farming_property.commercial_amount + prop.other_prop_value + prop.other_prop_value2 + prop.other_prop_value3)
  ab['totalABPropertyAmt'] = currency(sum(interest.current_owned_value for interest in prop.interests) + sum(vehicle.current_owned_value for vehicle in prop.ab_vehicles) + sum(vehicle.current_owned_value for vehicle in prop.ab_other_vehicles) + prop.household_goods_value + prop.electronics_value + prop.collectibles_value + prop.hobby_equipment_value + prop.firearms_value + prop.clothes_value + prop.jewelry_value + prop.animal_value + prop.other_household_items_value + prop.financial_assets.cash_value + sum(deposit.amount for deposit in prop.financial_assets.deposits) + sum(bond.amount for bond in prop.financial_assets.bonds_and_stocks) + sum(ntStock.value for ntStock in prop.financial_assets.non_traded_stock) + sum(cBond.amount for cBond in prop.financial_assets.corporate_bonds) + sum(retAct.amount for retAct in prop.financial_assets.retirement_accounts) + sum(prepay.amount for prepay in prop.financial_assets.prepayments) + sum(annu.amount for annu in prop.financial_assets.annuities) + sum(edu.amount for edu in prop.financial_assets.edu_accounts) + prop.financial_assets.future_property_interest_value + prop.financial_assets.ip_interest_value + prop.financial_assets.intangible_interest_value + prop.owed_property.tax_refund_federal + prop.owed_property.tax_refund_state + prop.owed_property.tax_refund_local + prop.owed_property.family_support_alimony + prop.owed_property.family_support_maintenance + prop.owed_property.family_support_support + prop.owed_property.family_support_divorce + prop.owed_property.family_support_settlement + prop.owed_property.other_amounts_value + prop.owed_property.first_insurance_interest_amount + prop.owed_property.second_insurance_interest_amount + prop.owed_property.third_insurance_interest_amount + prop.owed_property.trust_amount + prop.owed_property.third_party_amount + prop.business_property.ar_amount + prop.business_property.equipment_amount + prop.business_property.machinery_amount + prop.business_property.inventory_amount + prop.business_property.partnershipValue1 + prop.business_property.partnershipValue2 + prop.business_property.partnershipValue3 + prop.business_property.lists_amount + prop.business_property.otherPropertyAmount1 + prop.business_property.otherPropertyAmount2 + prop.business_property.otherPropertyAmount3 + prop.business_property.otherPropertyAmount4 + prop.business_property.otherPropertyAmount5 + prop.business_property.otherPropertyAmount6 + prop.farming_property.animal_amount + prop.farming_property.crop_amount + prop.farming_property.equipment_amount + prop.farming_property.supplies_amount + prop.farming_property.commercial_amount + prop.other_prop_value + prop.other_prop_value2 + prop.other_prop_value3)
---
attachment:
  - name: Form 106AB
    filename: form_b106ab.pdf
    pdf template file: form_b106ab.pdf
    code: ab
    variable name: ab_attach
---
event: schedule_ab
section: schedule_ab
question: |
  Review property fields
review:
  - note: |
      <br>
      ### Property Interests
      % if len(prop.interests) > 0:
        ${ prop_interests_table }
        ${ prop.interests.add_action() }
      % else:
        No property interests currently listed.
        ${ prop.interests.add_action() }
      % endif
  - note: |
      <br>
      ### Vehicles
      % if len(prop.ab_vehicles) > 0:
        ${ prop_ab_vehicles_table }
        ${ prop.ab_vehicles.add_action() }
      % else:
        No vehicles currently listed.
        ${ prop.ab_vehicles.add_action() }
      % endif
  - note: |
      <br>
      ### Other Vehicles
      % if len(prop.ab_other_vehicles) > 0:
        ${ prop_ab_other_vehicles_table }
        ${ prop.ab_other_vehicles.add_action() }
      % else:
        No other vehicles currently listed
        ${ prop.ab_other_vehicles.add_action() }
      % endif
  - note: |
      <br>
      ### Personal and household items
  - Revisit: prop.has_household_goods
    button: |
      % if prop.has_household_goods:
        Owns any household goods and furnishings: Yes
      % else:
        Owns any household goods and furnishings: No
      % endif
  - Revisit: prop.household_goods_description
    button: |
      Household Goods Description:
      ${ prop.household_goods_description }

      Total Value: ${ prop.household_goods_value }
    show if: prop.has_household_goods
  - Revisit: prop.has_electronics
    button: |
      % if prop.has_electronics:
        Owns electronics of value: Yes
      % else:
        Owns electronics of value: No
      % endif
  - Revisit: prop.electronics_description
    button: |
      Electronics Description:
      ${ prop.electronics_description }

      Total Value: ${ prop.electronics_value }
    show if: prop.has_electronics
  - Revisit: prop.has_collectibles
    button: |
      % if prop.has_collectables:
        Owns collectables: Yes
      % else:
        Owns collectables: No
      % endif
  - Revisit: prop.collectibles_description
    button: |
      Collectables Description:
      ${ prop.collectibles_description }

      Total Value: ${ prop.collectibles_value }
    show if: prop.has_collectibles
  - Revisit: prop.has_hobby_equipment
    button: |
      % if prop.has_hobby_equipment:
        Owns Hobby Equipment: Yes
      % else:
        Owns Hobby Equipment: No
      % endif
  - Revisit: prop.hobby_equipment_description
    button: |
      Hobby Equipment Description:
      ${ prop.hobby_equipment_description }

      Total Value: ${ prop.hobby_equipment_value }
    show if: prop.has_hobby_equipment
  - Revisit: prop.has_firearms
    button: |
      % if prop.has_firearms:
        Owns Firearms: Yes
      % else:
        Owns Firearms: No
      % endif
  - Revisit: prop.firearms_description
    button: |
      Firearms Description:
      ${ prop.firearms_description }

      Total Value: ${ prop.firearms_value }
    show if: prop.has_firearms
  - Revisit: prop.has_clothes
    button: |
      % if prop.has_clothes:
        Owns Clothes of Value: Yes
      % else:
        Owns Clothes of Value: No
      % endif
  - Revisit: prop.clothes_description
    button: |
      Clothes Description:
      ${ prop.clothes_description }

      Total Value: ${ prop.clothes_value }
    show if: prop.has_clothes
  - Revisit: prop.has_jewelry
    button: |
      % if prop.has_jewelry:
        Owns jewelry: Yes
      % else:
        Owns jewelry: No
      % endif
  - Revisit: prop.jewelry_description
    button: |
      jewelry Description:
      ${ prop.jewelry_description }

      Total Value: ${ prop.jewelry_value }
    show if: prop.has_jewelry
  - Revisit: prop.has_animals
    button: |
      % if prop.has_animals:
        Owns Animals: Yes
      % else:
        Owns Animals: No
      % endif
  - Revisit: prop.animal_description
    button: |
      Animals Description:
      ${ prop.animal_description }

      Total Value: ${ prop.animal_value }
    show if: prop.has_animals
  - Revisit: prop.has_other_household_items
    button: |
      % if prop.has_other_household_items:
        Has Other Household Items: Yes
      % else:
        Has Other Household Items: No
      % endif
  - Revisit: prop.other_household_items_description
    button: |
      Other Household Items:
      ${ prop.other_household_items_description }

      Total Value: ${ prop.other_household_items_value }
    show if: prop.has_other_household_items
  - Revisit: prop.has_cash
    button: |
      % if prop.has_cash:
        Has cash on hand: Yes
      % else:
        Has cash on hand: No
      % endif
  - Revisit: prop.cash_value
    button: |
      Cash Value: ${ prop.cash_value }
    show if: prop.has_cash
  - note: |
      <br>
      ### Financial Assets

      Deposits
      % if len(prop.financial_assets.deposits) > 0:
        ${ financial_deposits_table }
        ${ prop.financial_assets.deposits.add_action() }
      % else:
        No deposits currently listed.
        ${ prop.financial_assets.deposits.add_action() }
      % endif

      Bonds & Stocks
      % if len(prop.financial_assets.bonds_and_stocks) > 0:
        ${ financial_bonds_table }
        ${ prop.financial_assets.bonds_and_stocks.add_action() }
      % else:
        No Stocks & Bonds
        ${ prop.financial_assets.bonds_and_stocks.add_action() }
      % endif

      Non Traded Stock
      % if len(prop.financial_assets.non_traded_stock) > 0:
        ${ financial_non_traded_stock_table }
        ${ prop.financial_assets.non_traded_stock.add_action() }
      % else:
        No Non Traded Stock
        ${ prop.financial_assets.non_traded_stock.add_action() }
      % endif

      Corporate Bonds
      % if len(prop.financial_assets.corporate_bonds) > 0:
        ${ financial_corporate_bonds_table }
        ${ prop.financial_assets.corporate_bonds.add_action() }
      % else:
        No Corporate Bonds
        ${ prop.financial_assets.corporate_bonds.add_action() }
      % endif

      Retirement Accounts
      % if len(prop.financial_assets.retirement_accounts) > 0:
        ${ financial_retirement_accounts_table }
        ${ prop.financial_assets.retirement_accounts.add_action() }
      % else:
        No Retirement Accounts
        ${ prop.financial_assets.retirement_accounts.add_action() }
      % endif

      Prepayments
      % if len(prop.financial_assets.prepayments) > 0:
        ${ financial_prepayments_table }
        ${ prop.financial_assets.prepayments.add_action() }
      % else:
        No Prepayments
        ${ prop.financial_assets.prepayments.add_action() }
      % endif

      Annuities
      % if len(prop.financial_assets.annuities) > 0:
        ${ financial_annuities_table }
        ${ prop.financial_assets.annuities.add_action() }
      % else:
        No Annuities
        ${ prop.financial_assets.annuities.add_action() }
      % endif

      Education Accounts
      % if len(prop.financial_assets.edu_accounts) > 0:
        ${ financial_edu_account_table }
        ${ prop.financial_assets.edu_account.add_action() }
      % else:
        No Education Accounts
        ${ prop.financial_assets.edu_account.add_action() }
      % endif
  - Revisit: prop.financial_assets.has_future_property_interest
    button: |
      % if prop.financial_assets.has_future_property_interest:
        Has Future Property Interests: Yes
      % else:
        Has Future Property Interests: No
      % endif
  - Revisit: prop.financial_assets.future_property_interest_description
    button: |
      Future Property Interests:
      ${ prop.financial_assets.future_property_interest_description }

      Total Value: ${ prop.financial_assets.future_property_interest_value }
    show if: prop.financial_assets.has_future_property_interest
  - Revisit: prop.financial_assets.has_ip_interest
    button: |
      % if prop.financial_assets.has_ip_interest:
        Has IP Interests: Yes
      % else:
        Has IP Interests: No
      % endif
  - Revisit: prop.financial_assets.ip_interest_description
    button: |
      IP Interests:
      ${ prop.financial_assets.ip_interest_description }

      Total Value: ${ prop.financial_assets.ip_interest_value }
    show if: prop.financial_assets.has_ip_interest
  - Revisit: prop.financial_assets.has_intangible_interest
    button: |
      % if prop.financial_assets.has_intangible_interest:
        Has Intangible Interests: Yes
      % else:
        Has Intangible Interests: No
      % endif
  - Revisit: prop.financial_assets.intangible_interest_description
    button: |
      Intangible Interests:
      ${ prop.financial_assets.intangible_interest_description }

      Total Value: ${ prop.financial_assets.intangible_interest_value }
    show if: prop.financial_assets.has_intangible_interest
  - note: |
      ### Money or Property Owed
  - Revisit: prop.owed_property.has_tax_refund
    button: |
      % if prop.owed_property.has_tax_refund:
        Has Tax Refund: Yes
      % else:
        Has Tax Refund: No
      % endif
  - Revisit: prop.owed_property.tax_refund_description
    button: |
      Tax Refund:
      ${ prop.owed_property.tax_refund_description }

      Federal Value: ${ prop.owed_property.tax_refund_federal }
      State Value: ${ prop.owed_property.tax_refund_state }
      Local Value: ${ prop.owed_property.tax_refund_local }
    show if: prop.owed_property.has_tax_refund
  - Revisit: prop.owed_property.has_family_support
    button: |
      % if prop.owed_property.has_family_support:
        Has Family Support: Yes
      % else:
        Has Family Support: No
      % endif
  - Revisit: prop.owed_property.family_support_description
    button: |
      Family Support:
      ${ prop.owed_property.family_support_description }

      Alimony Amount: ${ prop.owed_property.family_support_alimony }
      Maintenance Amount: ${ prop.owed_property.family_support_maintenance }
      Support Amount: ${ prop.owed_property.family_support_support }
      Divorce Settlement Amount: ${ prop.owed_property.family_support_divorce }
      Property Settlement Amount: ${ prop.owed_property.family_support_settlment }
    show if: prop.owed_property.has_family_support
  - Revisit: prop.owed_property.has_other_amounts
    button: |
      % if prop.owed_property.has_other_amounts:
        Has other owed debts: Yes
      % else:
        Hos other owed debts: No
      % endif
  - Revisit: prop.owed_property.other_amounts_description
    button: |
      Other Amounts:
      ${ prop.owed_property.other_amounts_description }

      Total Value: ${ prop.owed_property.other_amounts_value }
    show if: prop.owed_property.has_other_amounts
  - Revisit: prop.owed_property.has_insurance_interest
    button: |
      % if prop.owed_property.has_insurance_interest:
        Has interest in insurance policies: Yes
      % else:
        Has interest in insurance policies: No
      % endif
  - Revisit: prop.owed_property.first_insurance_interest_name
    button: |
      % if prop.owed_property.first_insurance_interest_name:
        Insurance Interest 1:
        Name: ${ prop.owed_property.first_insurance_interest_name }
        Beneficiary: ${ prop.owed_property.first_insurance_beneficiary }
        Amount: ${ prop.owed_property.first_insurance_interest_amount }
      % endif

      % if prop.owed_property.second_insurance_interest_name:
        Insurance Interest 2:
        Name: ${ prop.owed_property.second_insurance_interest_name }
        Beneficiary: ${ prop.owed_property.second_insurance_beneficiary }
        Amount: ${ prop.owed_property.second_insurance_interest_amount }
      % endif

      % if prop.owed_property.third_insurance_interest_name:
        Insurance Interest 3:
        Name: ${ prop.owed_property.third_insurance_interest_name }
        Beneficiary: ${ prop.owed_property.third_insurance_beneficiary }
        Amount: ${ prop.owed_property.third_insurance_interest_amount }
      % endif
  - Revisit: prop.owed_property.has_trust
    button: |
      % if prop.owed_property.has_trust:
        Has interest in trust: Yes
      % else:
        Has interest in trust: No
      % endif
  - Revisit: prop.owed_property.trust_description
    button: |
      Trust Description
      ${ prop.owed_property.trust_description }

      Trust Value: ${ prop.owed_property.trust_amount }
    show if: prop.owed_property.has_trust
  - Revisit: prop.owed_property.has_third_party
    button: |
      % if prop.owed_property.has_third_party:
        Has claims against third parties: Yes
      % else:
        Has claims against third parties: No
      % endif
  - Revisit: prop.owed_property.third_party_description
    button: |
      Third Party Claims:
      ${ prop.owed_property.third_party_description }

      Total Value: ${ prop.owed_property.third_party_amount }
    show if: prop.owed_property.has_third_party
  - Revisit: prop.owed_property.has_contingent_claims
    button: |
      % if prop.owed_property.has_contingent_claims:
        Has other contingent claims: Yes
      % else:
        Has other contingent claims: No
      % endif
  - Revisit: prop.owed_property.contingent_claims_description
    button: |
      Contingent Claims:
      ${ prop.owed_property.contingent_claims_description }

      Total Value: ${ prop.owed_property.contingent_claims_amount }
    show if: prop.owed_property.has_contingent_claims
  - Revisit: prop.owed_property.has_other_assets
    button: |
      % if prop.owed_property.has_other_assets:
        Has other assets: Yes
      % else:
        Has other assets: No
      % endif
  - Revisit: prop.owed_property.other_assets_description
    button: |
      Other Assets:
      ${ prop.owed_property.other_assets_description }

      Total Value: ${ prop.owed_property.other_assets_amount }
    show if: prop.owed_property.has_other_assets
  - note: |
      <br>
      ### Business Related Property
  - Revisit: prop.business_property.has_property
    button: |
      % if prop.business_property.has_property:
        Has business property: Yes
      % else:
        Has business property: No
      % endif
  - Revisit: prop.business_property.has_ar
    button: |
      % if prop.business_property.has_ar:
        Business has Accounts Receivables: Yes
        ${ prop.business_property.ar_description }
        Total Value: ${ prop.business_property.ar_amount }
      % else:
        Business has Accounts Receivables: No
      % endif

      % if prop.business_property.has_equipment:
        Business has office equipment, furnishings, and supplies: Yes
        ${ prop.business_property.equipment_description }
        Total Value: ${ prop.business_property.equipment_amount }
      % else:
        Business has office equipment, furnishings, and supplies: No
      % endif

      % if prop.business_property.has_machinery:
        Business has machinery: Yes
        ${ prop.business_property.machinery_description }
        Total Value: ${ prop.business_property.machinery_amount }
      % else:
        Business has machinery: No
      % endif

      % if prop.business_property.has_inventory:
        Business has inventory: Yes
        ${ prop.business_property.inventory_description }
        Total Value: ${ prop.business_property.inventory_amount }
      % else:
        Business has inventory: No
      % endif

      % if prop.business_property.has_lists:
        Business has lists: Yes
        ${ prop.business_property.lists_description }
        Total Value: ${ prop.business_property.lists_amount }
      % else:
        Business has lists: No
      % endif
  - note: |
      <br>
      ### Farm or commercial fishing related property
  - Revisit: prop.farming_property.has_property
    button: |
      % if prop.farming_property.has_property:
        Has farming property: Yes
      % else:
        Has farming property: No
      % endif
  - Revisit: prop.farming_property.has_animals
    button: |
      % if prop.farming_property.has_animals:
        Farm has animals: Yes
        ${ prop.farming_property.animal_description }
        Total Value: ${ prop.farming_property.animal_amount }
      % else:
        Farm has animals: No
      % endif

      % if prop.farming_property.has_crops:
        Farm has crops: Yes
        ${ prop.farming_property.crop_description }
        Total Value: ${ prop.farming_property.crop_amount }
      % else:
        Farm has crops: No
      % endif

      % if prop.farming_property.has_equipment:
        Farm has equipment: Yes
        ${ prop.farming_property.equipment_description }
        Total Value: ${ prop.farming_property.equipment_amount }
      % else:
        Farm has equipment: No
      % endif

      % if prop.farming_property.has_supplies:
        Farm has supplies: Yes
        ${ prop.farming_property.supplies_description }
        Total Value: ${ prop.farming_property.supplies_amount }
      % else:
        Farm has supplies: No
      % endif

      % if prop.farming_property.has_commercial:
        Farm has commercial fishing: Yes
        ${ prop.farming_property.commercial_description }
        Total Value: ${ prop.farming_property.commercial_amount }
      % else:
        Farm has commercial fishing: No
      % endif
    show if: prop.farming_property.has_property
  - Revisit: prop.has_other_prop
    button: |
      % if prop.has_other_prop:
        Has other property: Yes
        ${ prop.other_prop_description }
        Total Value: ${ prop.other_prop_value }
      % else:
        Has other property: No
      % endif


continue button field: prop.complete
---

