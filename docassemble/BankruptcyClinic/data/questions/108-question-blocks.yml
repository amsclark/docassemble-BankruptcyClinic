table: secured_claims_table
rows: secured_claims
columns:
  - Name: row_item.creditor_name
  - Description: row_item.property_description
  - Property action: row_item.property_action
edit:
  - creditor_name
  - property_description
  - property_action
---
id: secured_claims_any_exist
section: form_108
question: |
  Do you have any creditors with secured claims?
yesno: secured_claims.there_are_any
---
id: secured_claims_add_another
section: form_108
question: |
  Are there any more creditors with secured claims?
yesno: secured_claims.there_is_another
under: |
  ${ secured_claims_table }
---
id: secured_claims_creditor_property_details
section: form_108
question: |
  Identify the creditor and the property that is collateral
fields: 
  - Creditors Name: secured_claims[i].creditor_name
    # default: Jimbo
  - Description of property: secured_claims[i].property_description
    input type: area
    # default: description
  - What do you intend to do with the property that secures the debt?: secured_claims[i].property_action
    choices:
      - Surrender the property
      - Retain the property and redeem it
      - Retain the property and enter into a Reaffirmation Agreement
      - Retain the property and do something else
    # default: Retain the property and do something else
  - What will you do with the property?: secured_claims[i].property_action_other
    show if: 
      variable: secured_claims[i].property_action
      is: Retain the property and do something else
    # default: something
  - Did you claim the property as exempt on Schedule C?: secured_claims[i].exempt
    datatype: yesnoradio
    # default: False
---
table: personal_leases_table
rows: personal_leases
columns:
  - Name: row_item.name
  - Description: row_item.description
  - Lease Assumed: row_item.lease_assumed
edit:
  - name
  - description
  - lease_assumed
---
id: personal_leases_any_exist
section: form_108
question: |
  Do you have any unexpired personal property leases?
yesno: personal_leases.there_are_any
---
id: personal_leases_add_another
section: form_108
question: |
  Are there any more unexpired personal property leases?
yesno: personal_leases.there_is_another
under: |
  ${ personal_leases_table }
---
id: personal_lease_details
section: form_108
question: |
  Tell the court about an unexpired personal property leases
fields:
  - Lessor Name: personal_leases[i].name
    # default: Lenny
  - Description of leased property: personal_leases[i].description
    # default: NA
  - Will the lease be assumed?: personal_leases[i].lease_assumed
    datatype: yesnoradio
    # default: False
---
id: form_108_review_statement_of_intention
event: form_108
section: form_108
question: |
  Revisit Statement of Intention for Individuals
review:
  - note: |
     <br>
     blblb
     % if len(secured_claims) > 0:
      ${ secured_claims_table }
      ${ secured_claims.add_action() }
     % else:
      No Secured Claims Listed
      ${ secured_claims.add_action() }
     % endif
  - note: |
     % if len(personal_leases) > 0:
      ${ personal_leases_table }
      ${ personal_leases.add_action() }
     % else:
      No Personal Leases Listed
      ${ personal_leases.add_action() }
     % endif
---
attachment:
  - name: Form 108
    filename: form_b108.pdf
    pdf template file: form_b108.pdf
    variable name: attach_108
    code: leases
---
code: |
  debtor_name = debtor[0].name.first + " " + debtor[0].name.middle + " " + debtor[0].name.last
  if len(debtor) > 1:
    debtor2_name = debtor[1].name.first + " " + debtor[1].name.middle + " " + debtor[1].name.last
  else:
    debtor2_name = ''
  leases = {}
  
  leases['debtor1_name_1'] = debtor_name
  leases['debtor1_name_2'] = debtor_name
  leases['debtor2_name_1'] = debtor2_name
  leases['bankruptcy_district'] = current_district
  leases['case_number_1'] = case_number
  leases['case_number_2'] = case_number
  leases['isAmended'] = amended_filing
  
  i = 1
  for claim in secured_claims:
    leases['name'+str(i)] = claim.creditor_name
    leases['desc'+str(i)] = claim.property_description
    
    leases['surrender'+str(i)] = True if claim.property_action == 'Surrender the property' else False
    leases['redeem'+str(i)] = True if claim.property_action == 'Retain the property and redeem it' else False
    leases['reaffirm'+str(i)] = True if claim.property_action == 'Retain the property and enter into a Reaffirmation Agreement' else False
    leases['other'+str(i)] = True if claim.property_action == 'Retain the property and do something else' else False
    leases['otherDesc'+str(i)] = claim.property_action_other if claim.property_action == 'Retain the property and do something else' else None
    leases['noClaim'+str(i)] = True if claim.exempt == False else False
    leases['yesClaim'+str(i)] = True if claim.exempt == True else False
    
    i += 1
  
  y = 1
  for lease in personal_leases:
    leases['lessor'+str(y)] = lease.name
    leases['leaseDesc'+str(y)] = lease.description
    leases['noLease'+str(y)] = True if lease.lease_assumed == False else False
    leases['yesLease'+str(y)] = True if lease.lease_assumed == True else False
    
    y += 1
    