code: |
  prop_options = []
  if len(prop.interests) > 0:
    for interest in prop.interests:
      prop_options.append(f'{interest.type} - {interest.street} {interest.city}, {interest.state}')
  if len(prop.ab_vehicles) > 0:
    for vehicle in prop.ab_vehicles:
      prop_options.append(f'Vehicle - {vehicle.make} {vehicle.model} {vehicle.year}')
  if len(prop.ab_other_vehicles) > 0:
    for vehicle in prop.ab_other_vehicles:
      prop_options.append(f'Vehicle - {vehicle.make} {vehicle.model} {vehicle.year}')
  if prop.has_secured_household_goods:
    prop_options.append(f'Household Goods')
  if prop.farming_property.has_property:
    prop_options.append(f'Farming Property')

---
table: prop_creditors_table
rows: prop.creditors
columns:
  - Description: row_item.prop_description
  - Claim Amount: row_item.claim_amount
  - Creditor: row_item.name
  - Date Incurred: row_item.incurred_date
edit:
  - prop_description
  - claim_amount
  - name
  - incurred_date
---
table: prop_creditors_notify_table
rows: prop.creditors[i].notify
columns:
  - Name: row_item.other_name
  - City: row_item.other_city
  - State: row_item.other_state
edit:
  - other_name
  - other_city
  - other_state
---
id: secured_creditors_any_exist
section: schedule_d
question: |
  Do any creditors have claims secured by your property?
yesno: prop.creditors.there_are_any
---
id: secured_creditors_add_another
section: schedule_d
question: |
  Are there any other secured claims you'd like to list?
yesno: prop.creditors.there_is_another
under: |
  ${ prop_creditors_table }
---
id: secured_debt_notify_others_any_exist
section: schedule_d
question: |
  Are there any others to be notifed for this debt such as collection agencies or other creditors?
subquestion: |
  Only specify others to be notified about your bankruptcy for your most recent debt.
yesno: prop.creditors[i].notify.there_are_any
---
id: secured_debt_notify_others_add_another
section: schedule_d
question: |
  Are there any more parties to be notifed?
yesno: prop.creditors[i].notify.there_is_another
under: |
  ${ prop_creditors_notify_table }
---
id: secured_debt_notify_others_details
section: schedule_d
question: |
  Tell the court about other parties to be notifed about this debt.
fields:
  - Name: prop.creditors[i].notify[j].other_name
    # default: Other org
    required: False
  - Address/PO Box: prop.creditors[i].notify[j].other_street
    # default: 1111 33rd S
    required: False
  - City: prop.creditors[i].notify[j].other_city
    # default: Tampa
    required: False
  - State: prop.creditors[i].notify[j].other_state
    # default: Florida
    required: False
  - Zip: prop.creditors[i].notify[j].other_zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    required: False
list collect: True
---
mandatory: True
code: |
  unsecured_claim = 0
---
event: track_unsecured_claim
code: |
  if action_argument('prop.creditors[i].claim_amount') and action_argument('prop.creditors[i].collateral_value'):
    unsecured_claim = int(action_argument('prop.creditors[i].claim_amount')) - int(action_argument('prop.creditors[i].collateral_value'))
---
template: unsecured_claim_amount
content: |
  % if action_argument('prop.creditors[i].claim_amount') and action_argument('prop.creditors[i].collateral_value'):
  ${int(action_argument('prop.creditors[i].claim_amount')) - int(action_argument('prop.creditors[i].collateral_value'))}
  % endif
target: unsecured_claim_text
---
id: secured_claim_details
section: schedule_d
question: |
  Tell the court about your secured claim.
subquestion: |
  If a creditor has more than one secured claim, list the creditor separately for each claim.
check in: unsecured_claim_amount
fields:
  - Creditor Name: prop.creditors[i].name
    # default: Some creditor
  - note: |
      Creditor Address
  - Address/PO Box: prop.creditors[i].street
    # default: 1111 45th pl
  - City: prop.creditors[i].city
    # default: Tampa
  - State: prop.creditors[i].state
    # default: Florida
  - Zip: prop.creditors[i].zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
  - note: |
      Decribe the debt
  - Who owes the debt?: prop.creditors[i].who
    choices:
      - Debtor 1 only
      - Debtor 2 only
      - Debtor 1 and Debtor 2 only
      - At least one of the debtors and another
    show if: financial_affairs.lived_elsewhere and len(debtor) > 1
    # default: Debtor 1 only
  - Who owes the debt?: prop.creditors[i].who
    choices:
      - Debtor 1 only
      - At least one of the debtors and another
    show if: not financial_affairs.lived_elsewhere
    # default: Debtor 1 only
  - Does this claim relate to community debt?: prop.creditors[i].community_debt
    datatype: yesnoradio
    # default: False
  - Date debt was incurred: prop.creditors[i].incurred_date
    # default: 03/02/23
    input type: area
    required: False
  - note: |
      Describe the property that secures the claim
  - Description: prop.creditors[i].prop_description
    choices:
      code: prop_options
  - note: As of the date you file, the claim is
  - Contingent: prop.creditors[i].contingent
    datatype: yesno
  - Unliquidated: prop.creditors[i].unliquidated
    datatype: yesno
  - Disputed: prop.creditors[i].disputed
    datatype: yesno
  - note: Nature of lein
  - An agreement you made (such as a mortgage or secured car loan): prop.creditors[i].agreement
    datatype: yesno
  - Statutory lien (such as tax lein, mechanic lean): prop.creditors[i].lien
    datatype: yesno
  - Judgement lien from a lawsuit: prop.creditors[i].lawsuit
    datatype: yesno
  - Other (including a right to offset): prop.creditors[i].has_other_lien_type
    datatype: yesno
  - Describe other lean type: prop.creditors[i].other_lien_type
    # default: NA
    required: False
    show if: prop.creditors[i].has_other_lien_type
  - Last 4 digits of account number: prop.creditors[i].account_number
    # default: testid4389999
    required: False
  - note: Tell the court about the value of this secured claim
  - Amount of claim: prop.creditors[i].claim_amount
    datatype: currency
    # default: 405
  - Value of collateral that supports this claim: prop.creditors[i].collateral_value
    datatype: currency
    # default: 300
  - note: |
      Unsecured claim portion -    [TARGET unsecured_claim_text]

  - What do you intend to do with the property that secures the debt?: prop.creditors[i].property_action
    choices:
      - Surrender the property
      - Retain the property and redeem it
      - Retain the property and enter into a Reaffirmation Agreement
      - Retain the property and do something else
    # default: Retain the property and do something else
  - What will you do with the property?: prop.creditors[i].property_action_other
    show if:
      variable: prop.creditors[i].property_action
      is: Retain the property and do something else
    # default: something
  - Did you claim the property as exempt on Schedule C?: prop.creditors[i].exempt
    datatype: yesnoradio
    # default: False

  - Is there a codebtor for this debt?: prop.creditors[i].has_codebtor
    datatype: yesnoradio
    # default: True
  - note: Codebtor Address Information
  - Name: prop.creditors[i].codebtor_name
    # default: Janna
    show if:
      variable: prop.creditors[i].has_codebtor
      is: True
  - Address/PO Box: prop.creditors[i].codebtor_street
    # default: 1111 36th Ave ne
    show if:
      variable: prop.creditors[i].has_codebtor
      is: True
  - City: prop.creditors[i].codebtor_city
    # default: Tampa
    show if:
      variable: prop.creditors[i].has_codebtor
      is: True
  - State: prop.creditors[i].codebtor_state
    # default: Florida
    show if:
      variable: prop.creditors[i].has_codebtor
      is: True
  - Zip: prop.creditors[i].codebtor_zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if:
      variable: prop.creditors[i].has_codebtor
      is: True
list collect: True 
---
id: schedule_d_review
event: schedule_d
section: schedule_d
question: |
  Review Secured Claims
review:
  - note: |
      <br>
      ### Secured Claims
      % if len(prop.creditors) > 0:
        ${ prop_creditors_table }
        ${ prop.creditors.add_action() }
      % else:
        No Secured Claims listed
        ${ prop.creditors.add_action() }
      % endif
---
attachment:
  - name: Form 106D
    filename: form_b106d.pdf
    pdf template file: form_b106d.pdf
    code: claims
    variable name: d_attach
---
code: |
  debtor_name = debtor[0].name.first + " " + debtor[0].name.middle + " " + debtor[0].name.last
  if len(debtor) > 1:
    debtor2_name = debtor[1].name.first + " " + debtor[1].name.middle + " " + debtor[1].name.last
  claims = {}
  leases = {}
  codebtors = {}
  codebtor_count = 1
  leases['debtor1_name_1'] = debtor_name
  leases['debtor1_name_2'] = debtor_name
  leases['bankruptcy_district'] = current_district
  leases['case_number_1'] = case_number
  leases['case_number_2'] = case_number
  leases['isAmended'] = amended_filing
  claims['debtor1_name_1'] = debtor_name
  claims['debtor1_name_2'] = debtor_name
  claims['debtor1_name_3'] = debtor_name
  if len(debtor) > 1:
    leases['debtor2_name_1'] = debtor2_name
    claims['debtor2_name_1'] = debtor2_name
  claims['case_number_1'] = case_number
  claims['case_number_2'] = case_number
  claims['case_number_3'] = case_number
  claims['bankruptcy_district'] = current_district
  claims['isAmended'] = amended_filing
  claims['noSecuredClaims'] = True if len(prop.creditors) == 0 else False
  claims['hasSecuredClaims'] = True if len(prop.creditors) > 0 else False

  i=0
  for creditor in prop.creditors:
    claims['name'+str(i+1)] = prop.creditors[i].name
    claims['street'+str(i+1)] = creditor.street
    claims['city'+str(i+1)] = creditor.city
    claims['state'+str(i+1)] = creditor.state
    claims['zip'+str(i+1)] = creditor.zip
    claims['isDebtor1Only'+str(i+1)] = True if creditor.who == 'Debtor 1 only' or len(debtor) == 1 else False
    claims['isDebtor2Only'+str(i+1)] = True if creditor.who == 'Debtor 2 only' else False
    claims['isBothDebtorsOnly'+str(i+1)] = True if creditor.who == 'Debtor 1 and Debtor 2 only' else False
    claims['isOneOtherDebtor'+str(i+1)] = True if creditor.who == 'At least one of the debtors and another' else False
    claims['isCommunityDebt'+str(i+1)] = True if creditor.community_debt == True else False
    claims['dateIncurred'+str(i+1)] = creditor.incurred_date
    claims['propDescription'+str(i+1)] = creditor.prop_description
    claims['isContingent'+str(i+1)] = True if creditor.contingent == True else False
    claims['isUnliquidated'+str(i+1)] = True if creditor.unliquidated == True else False
    claims['isDisputed'+str(i+1)] = True if creditor.disputed == True else False
    claims['isAgreement'+str(i+1)] = True if creditor.agreement == True else False
    claims['isStatutory'+str(i+1)] = True if creditor.lien == True else False
    claims['isJudgement'+str(i+1)] = True if creditor.lawsuit == True else False
    claims['isOther'+str(i+1)] = True if creditor.has_other_lien_type == True else False
    claims['otherDesc'+str(i+1)] = creditor.other_lien_type if creditor.has_other_lien_type == True else None
    claims['acct'+str(i+1)] = creditor.account_number[:-4]
    claims['claimAmount'+str(i+1)] = currency(creditor.claim_amount)
    claims['collateral'+str(i+1)] = currency(creditor.collateral_value)
    claims['unsecured'+str(i+1)] = currency(creditor.claim_amount - creditor.collateral_value)

    leases['name'+str(i)] = creditor.name
    leases['desc'+str(i)] = creditor.prop_description

    leases['surrender'+str(i)] = True if creditor.property_action == 'Surrender the property' else False
    leases['redeem'+str(i)] = True if creditor.property_action == 'Retain the property and redeem it' else False
    leases['reaffirm'+str(i)] = True if creditor.property_action == 'Retain the property and enter into a Reaffirmation Agreement' else False
    leases['other'+str(i)] = True if creditor.property_action == 'Retain the property and do something else' else False
    leases['otherDesc'+str(i)] = creditor.property_action_other if creditor.property_action == 'Retain the property and do something else' else None
    leases['noClaim'+str(i)] = True if creditor.exempt == False else False
    leases['yesClaim'+str(i)] = True if creditor.exempt == True else False
    i += 1

  lineNum = 1
  y=1
  for creditor in prop.creditors:
    for notify in creditor.notify:
      claims['notiLineId'+str(lineNum)] = lineNum
      claims['notiName'+str(lineNum)] = notify.other_name
      claims['notiAddress'+str(lineNum)] = notify.other_street
      claims['notiCity'+str(lineNum)] = notify.other_city
      claims['notiState'+str(lineNum)] = notify.other_state
      claims['notiZip'+str(lineNum)] = notify.other_zip
      claims['notiCreditorLine'+str(lineNum)] = str(y)
      claims['notiAcct'+str(lineNum)] = creditor.account_number[:-4]
      lineNum += 1
    y += 1
reconsider: True
