section: form_107
question: |
  Give details about your marital status and where you lived before
subquestion: |
  Be as complete and accurate as possible. If two married people are filing together, both are equally responsible for supplying correct information.
fields:
  - Are you currently married?: financial_affairs.marital_status
    datatype: yesnoradio
    # default: True
  - During the last 3 years, have you lived anywhere other than where you live now?: financial_affairs.lived_elsewhere
    datatype: yesnoradio
    # default: True
  - note: List all the places you lived in the last 3 years.
    show if: financial_affairs.lived_elsewhere
  - note: Address 1
    show if: financial_affairs.lived_elsewhere
  - Address/PO Box: financial_affairs.address_street_1
    # default: 1111 36th pl
    show if: financial_affairs.lived_elsewhere
  - City: financial_affairs.address_city_1
    # default: Seattle
    show if: financial_affairs.lived_elsewhere
  - State: financial_affairs.address_state_1
    # default: Washington
    show if: financial_affairs.lived_elsewhere
  - Zip: financial_affairs.address_zip_1
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if: financial_affairs.lived_elsewhere
  - note: Dates you lived there
    show if: financial_affairs.lived_elsewhere
  - From: financial_affairs.address_from_1
    datatype: date
    # default: 01/01/23
    show if: financial_affairs.lived_elsewhere
  - To: financial_affairs.address_to_1
    datatype: date
    # default: 04/01/23
    show if: financial_affairs.lived_elsewhere
  - note: Debtor 2 Address
    show if:
      code: |
        financial_affairs.debtor_count > 1
    hide if:
      variable: financial_affairs.lived_elsewhere
      is: False
  - Same address as you?: financial_affairs.address_same_1
    datatype: yesnoradio
    # default: False
    show if:
      code: |
        financial_affairs.debtor_count > 1
    hide if:
      variable: financial_affairs.lived_elsewhere
      is: False
  - Address/PO Box: financial_affairs.debtor2_address_street_1
    # default: 1111 36th pl
    show if:
      code: |
        financial_affairs.debtor_count > 1
    hide if:
      variable: financial_affairs.address_same_1
      is: True
  - City: financial_affairs.debtor2_address_city_1
    # default: Seattle
    show if:
      code: |
        financial_affairs.debtor_count > 1
    hide if:
      variable: financial_affairs.address_same_1
      is: True
  - State: financial_affairs.debtor2_address_state_1
    # default: Washington
    show if:
      code: |
        financial_affairs.debtor_count > 1
    hide if:
      variable: financial_affairs.address_same_1
      is: True
  - Zip: financial_affairs.debtor2_address_zip_1
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if:
      code: |
        financial_affairs.debtor_count > 1
    hide if:
      variable: financial_affairs.address_same_1
      is: True
  - Same time period as you?: financial_affairs.address_same_dates_1
    datatype: yesnoradio
    # default: False
    show if:
      code: |
        financial_affairs.debtor_count > 1
  - From: financial_affairs.debtor2_address_from_1
    datatype: date
    # default: 01/01/23
    show if:
      code: |
        financial_affairs.debtor_count > 1
    hide if:
      variable: financial_affairs.address_same_dates_1
      is: True
  - To: financial_affairs.debtor2_address_to_1
    datatype: date
    # default: 04/01/23
    show if:
      code: |
        financial_affairs.debtor_count > 1
    hide if:
      variable: financial_affairs.address_same_dates_1
      is: True
  - Has second address: financial_affairs.has_second_address
    datatype: yesnoradio
    # default: True
    show if: financial_affairs.lived_elsewhere
  - note: Address 2
    show if: financial_affairs.has_second_address
  - Address/PO Box: financial_affairs.address_street_2
    # default: 11111 36th pl
    show if: financial_affairs.has_second_address
    required: False
  - City: financial_affairs.address_city_2
    # default: Seattle
    show if: financial_affairs.has_second_address
    required: False
  - State: financial_affairs.address_state_2
    # default: Washington
    show if: financial_affairs.has_second_address
    required: False
  - Zip: financial_affairs.address_zip_2
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if: financial_affairs.has_second_address
    required: False
  - note: Dates you lived there
    show if:
      code: |
        financial_affairs.lived_elsewhere and financial_affairs.has_second_address
  - From: financial_affairs.address_from_2
    datatype: date
    # default: 01/01/23
    show if: financial_affairs.has_second_address
    required: False
  - To: financial_affairs.address_to_2
    datatype: date
    # default: 04/01/23
    show if: financial_affairs.has_second_address
    required: False
  - note: Debtor 2 Address
    show if:
      code: |
        financial_affairs.debtor_count > 1
    hide if:
      variable: financial_affairs.has_second_address
      is: False
  - Same address as you?: financial_affairs.address_same_2
    datatype: yesnoradio
    # default: False
    show if:
      code: |
        financial_affairs.debtor_count > 1
    hide if:
      variable: financial_affairs.has_second_address
      is: False
    required: False
  - Address/PO Box: financial_affairs.debtor2_address_street_2
    # default: 1111 36th pl
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_2") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - City: financial_affairs.debtor2_address_city_2
    # default: Seattle
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_2") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - State: financial_affairs.debtor2_address_state_2
    # default: Washington
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_2") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - Zip: financial_affairs.debtor2_address_zip_2
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_2") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - Same time period as you?: financial_affairs.address_same_dates_2
    datatype: yesnoradio
    # default: False
    js show if:
      val("financial_affairs.has_second_address") === true
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - From: financial_affairs.debtor2_address_from_2
    datatype: date
    # default: 01/01/23
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_dates_2") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - To: financial_affairs.debtor2_address_to_2
    datatype: date
    # default: 04/01/23
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_dates_2") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False

  - note: Address 3
    show if: financial_affairs.has_second_address
  - Address/PO Box: financial_affairs.address_street_3
    # default: 1111 36th pl
    show if: financial_affairs.has_second_address
    required: False
  - City: financial_affairs.address_city_3
    # default: Seattle
    show if: financial_affairs.has_second_address
    required: False
  - State: financial_affairs.address_state_3
    # default: Washington
    show if: financial_affairs.has_second_address
    required: False
  - Zip: financial_affairs.address_zip_3
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if: financial_affairs.has_second_address
    required: False
  - note: Dates you lived there
    show if:
      code: |
        financial_affairs.lived_elsewhere and financial_affairs.has_second_address
  - From: financial_affairs.address_from_3
    datatype: date
    # default: 01/01/23
    show if: financial_affairs.has_second_address
    required: False
  - To: financial_affairs.address_to_3
    datatype: date
    # default: 04/01/23
    show if: financial_affairs.has_second_address
    required: False
  - note: Debtor 2 Address
    show if:
      code: |
        financial_affairs.debtor_count > 1
    hide if:
      variable: financial_affairs.has_second_address
      is: False
  - Same address as you?: financial_affairs.address_same_3
    datatype: yesnoradio
    # default: False
    show if:
      code: |
        financial_affairs.debtor_count > 1
    hide if:
      variable: financial_affairs.has_second_address
      is: False
    required: False
  - Address/PO Box: financial_affairs.debtor2_address_street_3
    # default: 1111 36th pl
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_3") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - City: financial_affairs.debtor2_address_city_3
    # default: Seattle
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_3") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - State: financial_affairs.debtor2_address_state_3
    # default: Washington
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_3") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - Zip: financial_affairs.debtor2_address_zip_3
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_3") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - Same time period as you?: financial_affairs.address_same_dates_3
    datatype: yesnoradio
    # default: False
    js show if:
      val("financial_affairs.has_second_address") === true
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - From: financial_affairs.debtor2_address_from_3
    datatype: date
    # default: 01/01/23
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_dates_3") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - To: financial_affairs.debtor2_address_to_3
    datatype: date
    # default: 04/01/23
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_dates_3") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False

  - note: Address 4
    show if: financial_affairs.has_second_address
  - Address/PO Box: financial_affairs.address_street_4
    # default: 1111 36th pl
    show if: financial_affairs.has_second_address
    required: False
  - City: financial_affairs.address_city_4
    # default: Seattle
    show if: financial_affairs.has_second_address
    required: False
  - State: financial_affairs.address_state_4
    # default: Washington
    show if: financial_affairs.has_second_address
    required: False
  - Zip: financial_affairs.address_zip_4
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if: financial_affairs.has_second_address
    required: False
  - note: Dates you lived there
    show if:
      code: |
        financial_affairs.lived_elsewhere and financial_affairs.has_second_address
  - From: financial_affairs.address_from_4
    datatype: date
    # default: 01/01/23
    show if: financial_affairs.has_second_address
    required: False
  - To: financial_affairs.address_to_4
    datatype: date
    # default: 04/01/23
    show if: financial_affairs.has_second_address
    required: False
  - note: Debtor 2 Address
    show if:
      code: |
        financial_affairs.debtor_count > 1
    hide if:
      variable: financial_affairs.has_second_address
      is: False
  - Same address as you?: financial_affairs.address_same_4
    datatype: yesnoradio
    # default: False
    show if:
      code: |
        financial_affairs.debtor_count > 1
    hide if:
      variable: financial_affairs.has_second_address
      is: False
    required: False
  - Address/PO Box: financial_affairs.debtor2_address_street_4
    # default: 1111 36th pl
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_4") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - City: financial_affairs.debtor2_address_city_4
    # default: Seattle
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_4") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - State: financial_affairs.debtor2_address_state_4
    # default: Washington
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_4") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - Zip: financial_affairs.debtor2_address_zip_4
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_4") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - Same time period as you?: financial_affairs.address_same_dates_4
    datatype: yesnoradio
    # default: False
    js show if:
      val("financial_affairs.has_second_address") === true
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - From: financial_affairs.debtor2_address_from_4
    datatype: date
    # default: 01/01/23
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_dates_4") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - To: financial_affairs.debtor2_address_to_4
    datatype: date
    # default: 04/01/23
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_dates_4") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False

  - note: Address 5
    show if: financial_affairs.has_second_address
  - Address/PO Box: financial_affairs.address_street_5
    # default: 1111 36th pl
    show if: financial_affairs.has_second_address
    required: False
  - City: financial_affairs.address_city_5
    # default: Seattle
    show if: financial_affairs.has_second_address
    required: False
  - State: financial_affairs.address_state_5
    # default: Washington
    show if: financial_affairs.has_second_address
    required: False
  - Zip: financial_affairs.address_zip_5
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if: financial_affairs.has_second_address
    required: False
  - note: Dates you lived there
    show if:
      code: |
        financial_affairs.lived_elsewhere and financial_affairs.has_second_address
  - From: financial_affairs.address_from_5
    datatype: date
    # default: 01/01/23
    show if: financial_affairs.has_second_address
    required: False
  - To: financial_affairs.address_to_5
    datatype: date
    # default: 04/01/23
    show if: financial_affairs.has_second_address
    required: False
  - note: Debtor 2 Address
    show if:
      code: |
        financial_affairs.debtor_count > 1
    hide if:
      variable: financial_affairs.has_second_address
      is: False
  - Same address as you?: financial_affairs.address_same_5
    datatype: yesnoradio
    # default: False
    show if:
      code: |
        financial_affairs.debtor_count > 1
    hide if:
      variable: financial_affairs.has_second_address
      is: False
    required: False
  - Address/PO Box: financial_affairs.debtor2_address_street_5
    # default: 1111 36th pl
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_5") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - City: financial_affairs.debtor2_address_city_5
    # default: Seattle
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_5") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - State: financial_affairs.debtor2_address_state_5
    # default: Washington
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_5") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - Zip: financial_affairs.debtor2_address_zip_5
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_5") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - Same time period as you?: financial_affairs.address_same_dates_5
    datatype: yesnoradio
    # default: False
    js show if:
      val("financial_affairs.has_second_address") === true
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - From: financial_affairs.debtor2_address_from_5
    datatype: date
    # default: 01/01/23
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_dates_5") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - To: financial_affairs.debtor2_address_to_5
    datatype: date
    # default: 04/01/23
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_dates_5") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False

  - note: Address 6
    show if: financial_affairs.has_second_address
  - Address/PO Box: financial_affairs.address_street_6
    # default: 1111 36th pl
    show if: financial_affairs.has_second_address
    required: False
  - City: financial_affairs.address_city_6
    # default: Seattle
    show if: financial_affairs.has_second_address
    required: False
  - State: financial_affairs.address_state_6
    # default: Washington
    show if: financial_affairs.has_second_address
    required: False
  - Zip: financial_affairs.address_zip_6
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if: financial_affairs.has_second_address
    required: False
  - note: Dates you lived there
    show if:
      code: |
        financial_affairs.has_second_address and financial_affairs.has_second_address
  - From: financial_affairs.address_from_6
    datatype: date
    # default: 01/01/23
    show if: financial_affairs.has_second_address
    required: False
  - To: financial_affairs.address_to_6
    datatype: date
    # default: 04/01/23
    show if: financial_affairs.has_second_address
    required: False
  - note: Debtor 2 Address
    show if:
      code: |
        financial_affairs.debtor_count > 1
    hide if:
      variable: financial_affairs.has_second_address
      is: False
  - Same address as you?: financial_affairs.address_same_6
    datatype: yesnoradio
    # default: False
    show if:
      code: |
        financial_affairs.debtor_count > 1
    hide if:
      variable: financial_affairs.has_second_address
      is: False
    required: False
  - Address/PO Box: financial_affairs.debtor2_address_street_6
    # default: 1111 36th pl
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_6") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - City: financial_affairs.debtor2_address_city_6
    # default: Seattle
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_6") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - State: financial_affairs.debtor2_address_state_6
    # default: Washington
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_6") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - Zip: financial_affairs.debtor2_address_zip_6
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_6") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - Same time period as you?: financial_affairs.address_same_dates_6
    datatype: yesnoradio
    # default: False
    js show if:
      val("financial_affairs.has_second_address") === true
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - From: financial_affairs.debtor2_address_from_6
    datatype: date
    # default: 01/01/23
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_dates_6") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - To: financial_affairs.debtor2_address_to_6
    datatype: date
    # default: 04/01/23
    js show if:
      val("financial_affairs.has_second_address") === true && val("financial_affairs.address_same_dates_6") === false
    hide if:
      code: |
        financial_affairs.debtor_count < 2
    required: False
  - note: |
      Within the last 8 years, did you ever live with a spouse or legal equivalent in a community property state or territory? (Community property states and territories include Arizona, California, Idaho, Louisiana, Nevada, New Mexico, Puerto Rico, Texas, Washington, and Wisconsin.
  - no label: financial_affairs.lived_with_spouse
    datatype: yesnoradio
    # default: True
---
section: form_107
question: |
  Explain the sources of your income
fields:
  - note: |
      Did you have any income from employment or from operating a business during this year or the two previous calendar years?
  - no label: financial_affairs.employed
    datatype: yesnoradio
    # default: True
  - note: Employment Details
    show if: financial_affairs.employed
  - note: From January 1 of the current year until the date you filed for bankruptcy
    show if: financial_affairs.employed
  - Sources of income: financial_affairs.current_income_sources
    choices:
      - Wages, commissions, bonuses, tips
      - Operating a business
      - None
    # default: Operating a business
    datatype: checkbox
    show if: financial_affairs.employed
    required: False
  - Gross Income: financial_affairs.current_gross_income
    datatype: currency
    # default: 20000
    show if: financial_affairs.employed
    required: False
  - note: For last calendar year (January 1 to December 31)
    show if: financial_affairs.employed
  - Year: financial_affairs.last_year
    show if: financial_affairs.employed
    # default: 2022
    required: False
  - Sources of income: financial_affairs.last_income_sources
    choices:
      - Wages, commissions, bonuses, tips
      - Operating a business
      - None
    # default: Wages, commissions, bonuses, tips
    datatype: checkbox
    show if: financial_affairs.employed
    required: False
  - Gross Income: financial_affairs.last_gross_income
    datatype: currency
    # default: 30000
    show if: financial_affairs.employed
    required: False
  - note: For the year before that (Jan 1 to December 31)
    show if: financial_affairs.employed
  - Year: financial_affairs.before_year
    # default: 2021
    show if: financial_affairs.employed
    required: False
  - Sources of income: financial_affairs.before_income_sources
    choices:
      - Wages, commissions, bonuses, tips
      - Operating a business
      - None
    # default: Operating a business
    datatype: checkbox
    show if: financial_affairs.employed
    required: False
  - Gross Income: financial_affairs.before_gross_income
    datatype: currency
    # default: 10000
    show if: financial_affairs.employed
    required: False
---
section: form_107
question: |
  Explain the sources of debtor 2's income
fields:
  - note: |
      Did debtor 2 have any income from employment or from operating a business during this year or the two previous calendar years?
  - no label: financial_affairs.debtor2_employed
    datatype: yesnoradio
    # default: True
  - note: Employment Details
    show if: financial_affairs.debtor2_employed
  - note: From January 1 of the current year until the date you filed for bankruptcy
    show if: financial_affairs.debtor2_employed
  - Sources of income: financial_affairs.debtor2_current_income_sources
    choices:
      - Wages, commissions, bonuses, tips
      - Operating a business
      - None
    # default: Operating a business
    datatype: checkbox
    show if: financial_affairs.debtor2_employed
    required: False
  - Gross Income: financial_affairs.debtor2_current_gross_income
    datatype: currency
    # default: 20000
    show if: financial_affairs.debtor2_employed
    required: False
  - note: For last calendar year (January 1 to December 31)
    show if: financial_affairs.debtor2_employed
  - Year: financial_affairs.debtor2_last_year
    # default: 2022
    show if: financial_affairs.debtor2_employed
    required: False
  - Sources of income: financial_affairs.debtor2_last_income_sources
    choices:
      - Wages, commissions, bonuses, tips
      - Operating a business
      - None
    # default: Wages, commissions, bonuses, tips
    datatype: checkbox
    show if: financial_affairs.debtor2_employed
    required: False
  - Gross Income: financial_affairs.debtor2_last_gross_income
    datatype: currency
    # default: 30000
    show if: financial_affairs.debtor2_employed
    required: False
  - note: For the year before that (Jan 1 to December 31)
    show if: financial_affairs.debtor2_employed
  - Year: financial_affairs.debtor2_before_year
    # default: 2021
    show if: financial_affairs.debtor2_employed
    required: False
  - Sources of income: financial_affairs.debtor2_before_income_sources
    choices:
      - Wages, commissions, bonuses, tips
      - Operating a business
      - None
    # default: Operating a business
    datatype: checkbox
    show if: financial_affairs.debtor2_employed
    required: False
  - Gross Income: financial_affairs.debtor2_before_gross_income
    datatype: currency
    # default: 10000
    show if: financial_affairs.debtor2_employed
    required: False
---
section: form_107
question: |
  Did you receive any other income during this year or the two previous calendar years?
subquestion: |
  Include income regardless of whether that income is taxable. Examples of other income are alimony, child support, Social Security, unemployment, and other public benefit payments, pensions, rental income, interest, dividends, money collected from lawsuits, royalties, and ganbling and lottery winnings.
fields:
  - no label: financial_affairs.had_other_income
    datatype: yesnoradio
    # default: True
  - note: Employment Details
    show if: financial_affairs.had_other_income
  - note: From January 1 of current year until the date you filed for bankruptcy
    show if: financial_affairs.had_other_income
  - Source 1: financial_affairs.current_other_source_1
    # default: Income source
    show if: financial_affairs.had_other_income
    required: False
  - Amount: financial_affairs.current_other_source_amount_1
    datatype: currency
    # default: 1000
    show if: financial_affairs.had_other_income
    required: False
  - Source 2: financial_affairs.current_other_source_2
    # default: Income source 2
    show if: financial_affairs.had_other_income
    required: False
  - Amount: financial_affairs.current_other_source_amount_2
    # default: 1000
    show if: financial_affairs.had_other_income
    required: False
  - Source 3: financial_affairs.current_other_source_3
    # default: Income source 3
    show if: financial_affairs.had_other_income
    required: False
  - Amount: financial_affairs.current_other_source_amount_3
    datatype: currency
    # default: 1000
    show if: financial_affairs.had_other_income
    required: False
  - note: For last calendar year (Jan 1 to Dec 31)
    show if: financial_affairs.had_other_income
  - Source 1: financial_affairs.last_other_source_1
    # default: Income source
    show if: financial_affairs.had_other_income
    required: False
  - Amount: financial_affairs.last_other_source_amount_1
    datatype: currency
    # default: 1000
    show if: financial_affairs.had_other_income
    required: False
  - Source 2: financial_affairs.last_other_source_2
    # default: Income source 2
    show if: financial_affairs.had_other_income
    required: False
  - Amount: financial_affairs.last_other_source_amount_2
    datatype: currency
    # default: 1000
    show if: financial_affairs.had_other_income
    required: False
  - Source 3: financial_affairs.last_other_source_3
    # default: Income source 3
    show if: financial_affairs.had_other_income
    required: False
  - Amount: financial_affairs.last_other_source_amount_3
    datatype: currency
    # default: 1000
    show if: financial_affairs.had_other_income
    required: False
  - note: For the calendar year before that.
    show if: financial_affairs.had_other_income
  - Source 1: financial_affairs.before_other_source_1
    # default: Income source
    show if: financial_affairs.had_other_income
    required: False
  - Amount: financial_affairs.before_other_source_amount_1
    datatype: currency
    # default: 1000
    show if: financial_affairs.had_other_income
    required: False
  - Source 2: financial_affairs.before_other_source_2
    # default: Income source 2
    show if: financial_affairs.had_other_income
    required: False
  - Amount: financial_affairs.before_other_source_amount_2
    datatype: currency
    # default: 1000
    show if: financial_affairs.had_other_income
    required: False
  - Source 3: financial_affairs.before_other_source_3
    # default: Income source 3
    show if: financial_affairs.had_other_income
    required: False
  - Amount: financial_affairs.before_other_source_amount_3
    datatype: currency
    # default: 1000
    show if: financial_affairs.had_other_income
    required: False
---
section: form_107
question: |
  Did Debtor 2 receive any other income during this year or the two previous calendar years?
subquestion: |
  Include income regardless of whether that income is taxable. Examples of other income are alimony, child support, Social Security, unemployment, and other public benefit payments, pensions, rental income, interest, dividends, money collected from lawsuits, royalties, and ganbling and lottery winnings.
fields:
  - no label: financial_affairs.debtor2_had_other_income
    datatype: yesnoradio
    # default: True
  - note: Employment Details
    show if: financial_affairs.debtor2_had_other_income
  - note: From January 1 of current year until the date you filed for bankruptcy
    show if: financial_affairs.debtor2_had_other_income
  - Source 1: financial_affairs.debtor2_current_other_source_1
    # default: Income source
    show if: financial_affairs.debtor2_had_other_income
    required: False
  - Amount: financial_affairs.debtor2_current_other_source_amount_1
    datatype: currency
    # default: 1000
    show if: financial_affairs.debtor2_had_other_income
    required: False
  - Source 2: financial_affairs.debtor2_current_other_source_2
    # default: Income source 2
    show if: financial_affairs.debtor2_had_other_income
    required: False
  - Amount: financial_affairs.debtor2_current_other_source_amount_2
    # default: 1000
    show if: financial_affairs.debtor2_had_other_income
    required: False
  - Source 3: financial_affairs.debtor2_current_other_source_3
    # default: Income source 3
    show if: financial_affairs.debtor2_had_other_income
    required: False
  - Amount: financial_affairs.debtor2_current_other_source_amount_3
    # default: 1000
    show if: financial_affairs.debtor2_had_other_income
    required: False
  - note: For last calendar year (Jan 1 to Dec 31)
    show if: financial_affairs.debtor2_had_other_income
  - Source 1: financial_affairs.debtor2_last_other_source_1
    # default: Income source
    show if: financial_affairs.debtor2_had_other_income
    required: False
  - Amount: financial_affairs.debtor2_last_other_source_amount_1
    datatype: currency
    # default: 1000
    show if: financial_affairs.debtor2_had_other_income
    required: False
  - Source 2: financial_affairs.debtor2_last_other_source_2
    # default: Income source 2
    show if: financial_affairs.debtor2_had_other_income
    required: False
  - Amount: financial_affairs.debtor2_last_other_source_amount_2
    datatype: currency
    # default: 1000
    show if: financial_affairs.debtor2_had_other_income
    required: False
  - Source 3: financial_affairs.debtor2_last_other_source_3
    # default: Income source 3
    show if: financial_affairs.debtor2_had_other_income
    required: False
  - Amount: financial_affairs.debtor2_last_other_source_amount_3
    datatype: currency
    # default: 1000
    show if: financial_affairs.debtor2_had_other_income
    required: False
  - note: For the calendar year before that.
    show if: financial_affairs.debtor2_had_other_income
  - Source 1: financial_affairs.debtor2_before_other_source_1
    # default: Income source
    show if: financial_affiars.debtor2_had_other_income
    required: False
  - Amount: financial_affairs.debtor2_before_other_source_amount_1
    datatype: currency
    # default: 1000
    show if: financial_affairs.debtor2_had_other_income
    required: False
  - Source 2: financial_affairs.debtor2_before_other_source_2
    # default: Income source 2
    show if: financial_affairs.debtor2_had_other_income
    required: False
  - Amount: financial_affairs.debtor2_before_other_source_amount_2
    datatype: currency
    # default: 1000
    show if: financial_affairs.debtor2_had_other_income
    required: False
  - Source 3: financial_affairs.debtor2_before_other_source_3
    # default: Income source 3
    show if: financial_affairs.debtor2_had_other_income
    required: False
  - Amount: financial_affairs.debtor2_before_other_source_amount_3
    datatype: currency
    # default: 1000
    show if: financial_affairs.debtor2_had_other_income
    required: False
---
table: consumer_debts_table
rows: financial_affairs.consumer_debt_payments
columns:
  - Creditor Name: row_item.creditor_name
  - Total Amount Paid: row_item.total_amount
  - Amount still owed: row_item.amount_owed
  - For: row_item.payment_for
edit:
  - creditor_name
  - total_amount
  - amount_owed
  - payment_for
---
question: |
  Are either Debtor 1's or Debtor 2's debts primarily consumer debts?
yesno: financial_affairs.primarily_consumer_debts
---
question: |
  Did either Debtor 1 or Debtor 2 pay a consumer creditor a total of $600 or a non-consumer creditor a total of $7,575 in the last 90 days?
yesno: financial_affairs.consumer_debt_payments.there_are_any
---
question: |
  Any other creditors you would like to add?
yesno: financial_affairs.consumer_debt_payments.there_is_another
under: |
  ${ consumer_debts_table }
---
question: |
  Tell the court about a consumer creditor you paid a total of $600 or more to OR about non-consumer creditors you paid over $7,575 to in the last 90 day.
fields:
  - Creditor Name: financial_affairs.consumer_debt_payments[i].creditor_name
    # default: creditor name
  - Address/PO Box: financial_affairs.consumer_debt_payments[i].creditor_street
    # default: 1111 34th Ave
  - City: financial_affairs.consumer_debt_payments[i].creditor_city
    # default: Seattle
  - State: financial_affairs.consumer_debt_payments[i].creditor_state
    # default: Washington
  - Zip: financial_affairs.consumer_debt_payments[i].creditor_zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
  - note: Tell the court about payments you made.
  - Payment Dates: financial_affairs.consumer_debt_payments[i].paymentDates
    input type: area
    rows: 7
    # default:       9/1/23 $595.55
    #8/4/23 $585.77
    #  7/3/23 $590.33
    # 6/2/23 $588.33
    # 5/3/23 %591.44
    required: False
  - Total Amount Paid: financial_affairs.consumer_debt_payments[i].total_amount
    datatype: currency
    # default: 600
  - Amount you still owe: financial_affairs.consumer_debt_payments[i].amount_owed
    datatype: currency
    # default: 1000
  - Payment was for: financial_affairs.consumer_debt_payments[i].payment_for
    choices:
      - Mortgage
      - Car
      - Credit Card
      - Load repayment
      - Suppliers or vendors
      - Other
    # default: Mortgage
  - Other reason: financial_affairs.consumer_debt_payments[i].payment_for
    # default: Other
    show if:
      variable: financial_affairs.consumer_debt_payments[i].payment_for
      is: Other
---
table: insider_payments_table
rows: financial_affairs.insider_payments
columns:
  - Insider Name: row_item.insider_name
  - Total Amount: row_item.total_amount
  - Amount still owed: row_item.amount_owed
  - Reason: row_item.reason
edit:
  - insider_name
  - total_amount
  - amount_owed
---
question: |
  Any other insider payments to add?
yesno: financial_affairs.insider_payments.there_is_another
under: |
  ${ insider_payments_table }
---
question: |
  Did either debtor 1 or debtor 2 make any payment on debt you owed anyone who was an insider?
subquestion: |
  Insiders include your relatives; any general partners; relatives of any general partners; partnerships of which you are a general partner; corporations of which you are an officer, director, person in control, or owner of 20% or more of their voting securities; and any managing agent, including one for a business you operate as a sole propietor. Include payments for domestic support obligations, such as child support and alimony.
yesno: financial_affairs.insider_payments.there_are_any
---
question: |
  Tell the court about the payment to an insider.
fields:
  - Insider Name: financial_affairs.insider_payments[i].insider_name
    # default: Bill
  - Address/PO Box: financial_affairs.insider_payments[i].street
    # default: 111 34th Ave
  - City: financial_affairs.insider_payments[i].city
    # default: Seattle
  - State: financial_affairs.insider_payments[i].state
    # default: Washington
  - Zip: financial_affairs.insider_payments[i].zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
  - note: Tell the court more about the payment
  - Payment Dates: financial_affairs.insider_payments[i].paymentDates
    input type: area
    required: false
    # default:       9/1/23 $500.23
    #  8/2/23 $523.33
    #  7/1/23 $602.23
    #  6/4/23 $543.33
    #  5/3/23 $333.33
  - Total amount paid: financial_affairs.insider_payments[i].total_amount
    datatype: currency
    # default: 1000
  - Amount you still owe: financial_affairs.insider_payments[i].amount_owed
    datatype: currency
    # default: 3000
  - Reason for this payment: financial_affairs.insider_payments[i].reason
    input type: area
    # default: payment reason
---
table: insider_benefits_table
rows: financial_affairs.insider_benefits
columns:
  - Insider Name: row_item.insider_name
  - Total Amount: row_item.total_amount
  - Amount still owed: row_item.amount_owed
edit:
  - insider_name
  - total_amount
  - amount_owed
---
question: |
  Any other payments that benefited insiders to add?
yesno: financial_affairs.insider_benefits.there_is_another
under: |
  ${ insider_benefits_table }
---
question: |
  Insider Benefit
subquestion: |
  Within 1 year before you filed for bankruptcy, did you make any payments or transfer any property on account of a debt that benefited an insider?

  Include payments on debts guaranteed to cosigned by an insider.
yesno: financial_affairs.insider_benefits.there_are_any
---
question: |
  Tell the court about the payment or transfer of any property on account of a debt that benefited an insider
fields:
  - Insider Name: financial_affairs.insider_benefits[i].insider_name
    # default: Bill
  - Address/PO Box: financial_affairs.insider_benefits[i].street
    # default: 1111 34th Ave
  - City: financial_affairs.insider_benefits[i].city
    # default: Seattle
  - State: financial_affairs.insider_benefits[i].state
    # default: Washington
  - Zip: financial_affairs.insider_benefits[i].zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
  - note: Tell the court more about the payment
  - Payment Date 1: financial_affairs.insider_benefits[i].payment_date_1
    datatype: date
    # default: 01/01/23
  - Payment Date 2: financial_affairs.insider_benefits[i].payment_date_2
    datatype: date
    # default: 01/02/23
    required: False
  - Payment Date 3: financial_affairs.insider_benefits[i].payment_date_3
    datatype: date
    # default: 01/02/23
    required: False
  - Total Amount: financial_affairs.insider_benefits[i].total_amount
    datatype: currency
    # default: 1000
  - Amount you still owe: financial_affairs.insider_benefits[i].amount_owed
    datatype: currency
    # default: 3000
  - Reason for this payment: financial_affairs.insider_benefits[i].reason
    input type: area
    # default: payment reason
---
table: lawsuit_table
rows: financial_affairs.lawsuits
columns:
  - Case Title: row_item.case_title
  - Court Name: row_item.court_name
  - Status: row_item.case_status
edit:
  - case_title
  - court_name
  - case_status
---
question: |
  Lawsuits
subquestion: |
  Within 1 year before you filed for bankruptcy, were you a party in any lawsuit, court action, or administrative proceeding?

  Including personal injury cases, small claims actions, divorces, collection suits, paternity actions, support or custody modifications, and contract disputes.
yesno: financial_affairs.lawsuits.there_are_any
---
question: |
  Are there any more lawsuits filed against you to report?
yesno: financial_affairs.lawsuits.there_is_another
under: |
  ${ lawsuit_table }
---
question: |
  Tell the court about the lawsuit filed against you.
fields:
  - Case Title: financial_affairs.lawsuits[i].case_title
    # default: case name
  - Case Number: financial_affairs.lawsuits[i].case_number
    datatype: string
    # default: 2249453
  - note: Nature of the case
  - no label: financial_affairs.lawsuits[i].nature_of_case
    input type: area
    # default: nature of case
  - note: Court Info
  - Name: financial_affairs.lawsuits[i].court_name
    # default: Big court
  - Address/PO Box: financial_affairs.lawsuits[i].court_street
    # default: 1111 34th Ave
  - City: financial_affairs.lawsuits[i].court_city
    # default: Seattle
  - State: financial_affairs.lawsuits[i].court_state
    # default: Washington
  - Zip: financial_affairs.lawsuits[i].court_zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
  - Case Status: financial_affairs.lawsuits[i].case_status
    choices:
      - Pending
      - On appeal
      - Concluded
    # default: Pending
---
table: levies_table
rows: financial_affairs.levies
columns:
  - Creditor Name: row_item.creditor_name
  - Property Value: row_item.property_value
  - Action: row_item.property_action
edit:
  - creditor_name
  - property_value
  - property_action
---
question: |
  Repossesed Property
subquestion: |
  Within 1 year before you filed for bankruptcy, was any of your property repossessed, foreclosed, garnished, attached, seized, or levied?
yesno: financial_affairs.levies.there_are_any
---
question: |
  Are there any more properties that have been repossessed, foreclosed, garnished, attached, seized, or levied in the last year?
yesno: financial_affairs.levies.there_is_another
under: |
  ${ levies_table }
---
question: |
  Tell the court about a repossessed, foreclosed, garnished, attached, seized, or levied property in the last year.
fields:
  - Creditor Name: financial_affairs.levies[i].creditor_name
    # default: Bill
  - Address/PO Box: financial_affairs.levies[i].creditor_street
    # default: 1111 34th Ave
  - City: financial_affairs.levies[i].creditor_city
    # default: Seattle
  - State: financial_affairs.levies[i].creditor_state
    # default: Washington
  - Zip: financial_affairs.levies[i].creditor_zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
  - Property Description: financial_affairs.levies[i].property_description
    input type: area
    # default: Description
  - Explain what happened: financial_affairs.levies[i].property_action
    choices:
      - Property was repossessed
      - Property was foreclosed
      - Property was garnished
      - Property was attached, seized, or levied
    # default: Property was repossessed
  - Dates in description?: financial_affairs.levies[i].date_in_description
    datatype: yesnoradio
    # default: True
  - Date: financial_affairs.levies[i].date
    datatype: date
    # default: 01/01/23
    show if:
      variable: financial_affairs.levies[i].date_in_description
      is: False
    required: False
  - Property Value: financial_affairs.levies[i].property_value
    datatype: currency
    # default: 30000
---
question: |
  Payment Refusal
subquestion: |
  Within 90 days before you filed for bankruptcy, did any creditor, including a bank or financial institution, set off any amounts from your accounts or refuse to make a payment because you owed a debt?
fields:
  - no label: financial_affairs.has_refusal
    datatype: yesnoradio
    # default: True
  - Creditors Name: financial_affairs.refusal_creditor_name
    # default: Bill
    show if: financial_affairs.has_refusal
  - Address/PO Box: financial_affairs.refusal_creditor_street
    # default: 111 34th Ave NE
    show if: financial_affairs.has_refusal
  - City: financial_affairs.refusal_creditor_city
    # default: Seattle
    show if: financial_affairs.has_refusal
  - State: financial_affairs.refusal_creditor_state
    # default: Washington
    show if: financial_affairs.has_refusal
  - Zip: financial_affairs.refusal_creditor_zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if: financial_affairs.has_refusal
  - note: Describe the action the creditor took
    show if: financial_affairs.has_refusal
  - no label: financial_affairs.refusal_description
    # default: Description
    input type: area
    show if: financial_affairs.has_refusal
  - Last 4 digits of account number XXXX-: financial_affairs.refusal_account_number
    # default: 1111
    show if: financial_affairs.has_refusal
    required: False
  - Date action was taken: financial_affairs.refusal_date
    datatype: date
    # default: 01/01/23
    show if: financial_affairs.has_refusal
    required: False
  - Amount: financial_affairs.refusal_amount
    datatype: currency
    # default: 3000
    show if: financial_affairs.has_refusal
---
question: |
  Property Assignee
subquestion: |
  Within 1 year before you filed for bankruptcy, was any of your property in the possession of an assignee for the benefit of creditors, a court-appointed receiver, a custodian, or another official?
yesno: financial_affairs.other_assignee
---
table: gifts_table
rows: financial_affairs.gifts
columns:
  - Name: row_item.person_name
  - Relationship: row_item.relationship
  - Value: row_item.value_1
edit:
  - person_name
  - relationship
  - value_1
---
question: |
  Gifts to other people
subquestion: |
  Within 2 years before you filed for bankruptcy, did you give any gifts with a total value of more than $600 per person?
yesno: financial_affairs.gifts.there_are_any
---
question: |
  Did you make any other gifts over $600 within 2 years before you filed for bankruptcy?
yesno: financial_affairs.gifts.there_is_another
under: |
  ${ gifts_table }
---
question: |
  Tell the court about the gift.
fields:
  - Person to whom you gave the gift: financial_affairs.gifts[i].person_name
    # default: Gifter
  - Address/PO Box: financial_affairs.gifts[i].street
    # default: 111 22nd
  - City: financial_affairs.gifts[i].city
    # default: Seattle
  - State: financial_affairs.gifts[i].state
    # default: Washington
  - Zip: financial_affairs.gifts[i].zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
  - Persons relationship to you: financial_affairs.gifts[i].relationship
    # default: Parent
  - note: Describe the gift
  - no label: financial_affairs.gifts[i].description
    input type: area
    # default: Description
  - note: Dates you gave the gifts
  - no label: financial_affairs.gifts[i].date_1
    # default: 01/01/23
    input type: area
  - note: Value
  - no label: financial_affairs.gifts[i].value_1
    datatype: currency
    # default: 1000
  - no label: financial_affairs.gifts[i].value_2
    datatype: currency
    required: False
---
question: |
  Charitable Contributions Made
subquestion: |
  Within 2 years before you filed for bankruptcy, did you give any gifts or contributions with a total value of more than 600 to any charity?
fields:
  - no label: financial_affairs.has_charity
    datatype: yesnoradio
    # default: True
  - Charity name: financial_affairs.charity_name
    # default: Charity
    show if: financial_affairs.has_charity
  - Address/PO Box: financial_affairs.charity_street
    # default: 1111 55th Ave NE
    show if: financial_affairs.has_charity
  - City: financial_affairs.charity_city
    # default: Seattle
    show if: financial_affairs.has_charity
  - State: financial_affairs.charity_state
    # default: Washington
    show if: financial_affairs.has_charity
  - Zip: financial_affairs.charity_zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if: financial_affairs.has_charity
  - note: Describe what you contributed
    show if: financial_affairs.has_charity
  - no label: financial_affairs.charity_description
    # default: Description
    input type: area
    show if: financial_affairs.has_charity
  - note: Dates you contributed
    show if: financial_affairs.has_charity
  - no label: financial_affairs.charity_date_1
    # default: 01/01/23
    input type: area
    show if: financial_affairs.has_charity
  - note: Values
    show if: financial_affairs.has_charity
  - no label: financial_affairs.charity_value_1
    datatype: currency
    # default: 3000
    show if: financial_affairs.has_charity
  - no label: financial_affairs.charity_value_2
    datatype: currency
    required: False
    show if: financial_affairs.has_charity
---
question: |
  Theft or Disaster Losses
subquestion: |
  Within 1 year before you filed for bankruptcy or since you filed for bankruptcy, did you lose anything because of theft, fire, other disaster, or gambling?
fields:
  - no label: financial_affairs.has_disaster
    datatype: yesnoradio
    # default: True
  - note: Describe the property you lost and how the loss occurred
    show if: financial_affairs.has_disaster
  - no label: financial_affairs.disaster_description
    input type: area
    # default: Description
  - note: Describe any insurance coverage for the loss
    show if: financial_affairs.has_disaster
  - note: Include the amount that insurance has paid.
    show if: financial_affairs.has_disaster
  - no label: financial_affairs.disaster_insurance
    input type: area
    # default: Insurance
    show if: financial_affairs.has_disaster
  - Date of your loss: financial_affairs.disaster_date
    input type: area
    # default: 01/01/23 with some details
    show if: financial_affairs.has_disaster
  - Value of property lost: financial_affairs.disaster_value
    datatype: currency
    # default: 3000
    show if: financial_affairs.has_disaster
---
table: bankruptcy_payments_table
rows: financial_affairs.bankruptcy_payments
columns:
  - Name: row_item.name
  - Amount: row_item.value_1
  - Date: row_item.date_1
edit:
  - name
  - value_1
  - date_1
---
question: |
  Bankruptcy Consultation Payment
subquestion: |
  Within 1 year before you filed for bankruptcy, did you or anyone else acting on your behalf pay or transfer any property to anyone you consulted about seeking bankruptcy or preparing a bankruptcy petition?

  Include any attourneys, bankruptcy petition preparers, or credit counseling agencies for services required in your bankruptcy.
yesno: financial_affairs.bankruptcy_payments.there_are_any
---
question: |
  Are there any more payments made to anyone you consulted about seeing bankruptcy or preparing a bankruptcy petition?
yesno: financial_affairs.bankruptcy_payments.there_is_another
under: |
  ${ bankruptcy_payments_table }
---
question: |
  Tell the court about a payment or transfer of property to anyone you consulted about seeing bankruptcy.
fields:
  - Person who was paid: financial_affairs.bankruptcy_payments[i].name
    # default: Jimbo
  - Address/PO Box: financial_affairs.bankruptcy_payments[i].street
    # default: 111 34th Ave
  - City: financial_affairs.bankruptcy_payments[i].city
    # default: Seattle
  - State: financial_affairs.bankruptcy_payments[i].state
    # default: washington
  - Zip: financial_affairs.bankruptcy_payments[i].zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
  - Email or website: financial_affairs.bankruptcy_payments[i].email_or_website
    # default: www.bankruptcyconsultants.net
  - Person who made the payment if not you: financial_affairs.bankruptcy_payments[i].payment_person
    required: False
  - note: Description of value of any property transferred
  - no label: financial_affairs.bankruptcy_payments[i].property_description
    input type: area
    # default: Description
  - note: Date payment or trasfer was made
  - no label: financial_affairs.bankruptcy_payments[i].date_1
    datatype: date
    # default: 01/01/23
  - no label: financial_affairs.bankruptcy_payments[i].date_2
    datatype: date
    required: False
  - note: Amount of payment
  - no label: financial_affairs.bankruptcy_payments[i].value_1
    datatype: currency
    # default: 4000
  - no label: financial_affairs.bankruptcy_payments[i].value_2
    datatype: currency
    required: False
---
question: |
  Bankruptcy Agent Payments
subquestion: |
  Within 1 year before you filed for bankruptcy, did you or anyone else acting on your behalf pay or transfer any property to anyone who promised to help you deal with your creditors or to make payments to your creditors.

  Do not include any payment or transfers you already listed in the last question.
fields:
  - no label: financial_affairs.has_creditor_help
    datatype: yesnoradio
    # default: True
  - Person who was paid: financial_affairs.creditor_help.name
    # default: Bill
    show if: financial_affairs.has_creditor_help
  - Address/PO Box: financial_affairs.creditor_help.street
    # default: 1111 54th Ave NE
    show if: financial_affairs.has_creditor_help
  - City: financial_affairs.creditor_help.city
    # default: Seattle
    show if: financial_affairs.has_creditor_help
  - State: financial_affairs.creditor_help.state
    # default: Washington
    show if: financial_affairs.has_creditor_help
  - Zip: financial_affairs.creditor_help.zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if: financial_affairs.has_creditor_help
  - note: Description and value of any property transferred
    show if: financial_affairs.has_creditor_help
  - no label: financial_affairs.creditor_help.property_description
    input type: area
    # default: Description
    show if: financial_affairs.has_creditor_help
  - note: Date payment or transfer was made
    show if: financial_affairs.has_creditor_help
  - no label: financial_affairs.creditor_help.date_1
    datatype: date
    # default: 01/01/23
    show if: financial_affairs.has_creditor_help
  - no label: financial_affairs.creditor_help.date_2
    datatype: date
    required: False
    show if: financial_affairs.has_creditor_help
  - note: Amount of payment
    show if: financial_affairs.has_creditor_help
  - no label: financial_affairs.creditor_help.value_1
    datatype: currency
    # default: 2000
    show if: financial_affairs.has_creditor_help
  - no label: financial_affairs.creditor_help.value_2
    datatype: currency
    required: False
    show if: financial_affairs.has_creditor_help
---
table: other_transfers_table
rows: financial_affairs.other_transfers
columns:
  - Name: row_item.name
  - Relationship: row_item.relationship
  - Date: row_item.date
edit:
  - name
  - relationship
  - date
---
question: |
  Other Transfers
subquestion: |
  Within 2 years before you filed for bankruptcy, did you sell, trade, or otherwise transfer any property to anyone, other than property transferred in the ordinary course of your business or financial affairs?

  Include both outright transfers and transfers made as security ( such as the granting of a security interest or mortgage on your property). Do not include gifts and transfers that you have already listed in previous questions.
yesno: financial_affairs.other_transfers.there_are_any
---
question: |
  Do you have any other transfers to add?
yesno: financial_affairs.other_transfers.there_is_another
under: |
  ${ other_transfers_table }
---
question: |
  Tell the court about the transfer.
fields:
  - Person who received transfer: financial_affairs.other_transfers[i].name
    # default: Billy
  - Address/PO Box: financial_affairs.other_transfers[i].street
    # default: 1111 23rd ave ne
  - City: financial_affairs.other_transfers[i].city
    # default: Seattle
  - State: financial_affairs.other_transfers[i].state
    # default: Washington
  - Zip: financial_affairs.other_transfers[i].zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
  - Persons realtionship to you: financial_affairs.other_transfers[i].relationship
    # default: Father
  - note: Description and value of property transferred
  - no label: financial_affairs.other_transfers[i].property_description
    input type: area
    # default: Description
  - note: Describe any property or payments received or debts paid in exchange
  - no label: financial_affairs.other_transfers[i].exchange_description
    input type: area
    # default: Exchange Description
  - Date transfer was made: financial_affairs.other_transfers[i].date
    datatype: date
    # default: 01/01/23
---
question: |
  Self-settled Trusts
subquestion: |
  Within 10 years before you filed for bankruptcy, did you transfer any property to a self-settled trust or similar device of which you are a beneficiary? (These are often called asset-protection devices.)
fields:
  - no label: financial_affairs.has_self_settled_trust
    datatype: yesnoradio
    # default: True
  - Name of trust: financial_affairs.self_settled_trust.name
    input type: area
    # default: Trust Name
    show if: financial_affairs.has_self_settled_trust
  - note: Description and value of the property transferred
    show if: financial_affairs.has_self_settled_trust
  - no label: financial_affairs.self_settled_trust.description
    input type: area
    # default: Description
    show if: financial_affairs.has_self_settled_trust
  - Date transfer was made: financial_affairs.self_settled_trust.date
    datatype: date
    # default: 01/01/23
    show if: financial_affairs.has_self_settled_trust
---
table: instruments_table
rows: financial_affairs.instruments
columns:
  - Name: row_item.name
  - Account Type: row_item.account_type
  - Date: row_item.date
edit:
  - name
  - account_type
  - date
---
question: |
  Financial Account Changes
subquestion: |
  Within 1 year before you filed for bankruptcy, were any financial accounts or instruments held in your name, or for your benefit, closed, sold, moved, or transferred?

  Include checking, savings, money market, or other financial accounts; certificates of deposit; shares in banks, credit unions, brokerage houses, pension funds, cooperatives, associations, and other financial institutions
yesno: financial_affairs.instruments.there_are_any
---
question: |
  Are there any more financial accounts or instruments to list?
yesno: financial_affairs.instruments.there_is_another
under: |
  ${ instruments_table }
---
question: |
  Tell the court about the financial account or instrument.
fields:
  - Name of financial institution: financial_affairs.instruments[i].name
    # default: Big bank
  - Address/PO Box: financial_affairs.instruments[i].street
    # default: 1111 21st St S
  - City: financial_affairs.instruments[i].city
    # default: seattle
  - State: financial_affairs.instruments[i].state
    # default: Washington
  - Zip: financial_affairs.instruments[i].zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
  - note: Last 4 digits of account number
  - no label: financial_affairs.instruments[i].account_number
    datatype: string
    # default: 1111
    required: False
  - note: Type of account or instrument
  - no label: financial_affairs.instruments[i].account_type
    choices:
      - Checking
      - Savings
      - Money Market
      - Brokerage
      - Other
    # default: Savings
  - Other type of account: financial_affairs.instruments[i].account_type
    # default: other type
    show if:
      variable: financial_affairs.instruments[i].account_type
      is: Other
  - note: Date account was closed, sold, moved, or trasferred
  - no label: financial_affairs.instruments[i].date
    # default: 01/01/23
    input type: area
  - note: Last balance before closing or transfer
  - no label: financial_affairs.instruments[i].last_balance
    datatype: currency
    # default: 3000
---
question: |
  Safe Deposit Box
subquestion: |
  Do you now have, or did you have within 1 year before you filed for bankruptcy, any safe deposit box or other depository for securities, cash, or other valuables?
fields:
  - no label: financial_affairs.has_deposit_box
    datatype: yesnoradio
    # default: True
  - Name of financial institution: financial_affairs.deposit_box.name
    # default: BECU
    show if: financial_affairs.has_deposit_box
  - Address/PO Box: financial_affairs.deposit_box.street
    # default: 1111 25th Ave NE
    show if: financial_affairs.has_deposit_box
  - City: financial_affairs.deposit_box.city
    # default: Seattle
    show if: financial_affairs.has_deposit_box
  - State: financial_affairs.deposit_box.state
    # default: Washington
    show if: financial_affairs.has_deposit_box
  - Zip: financial_affairs.deposit_box.zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if: financial_affairs.has_deposit_box
  - note: Who else had access to it?
    show if: financial_affairs.has_deposit_box
  - Name: financial_affairs.deposit_box.other_name
    required: False
    # default: Jan
    show if: financial_affairs.has_deposit_box
  - Address/PO Box: financial_affairs.deposit_box.other_street
    # default: 54rd ave ne
    required: False
    show if: financial_affairs.has_deposit_box
  - City: financial_affairs.deposit_box.other_city
    # default: Seattle
    required: False
    show if: financial_affairs.has_deposit_box
  - State: financial_affairs.deposit_box.other_state
    # default: Washington
    required: False
    show if: financial_affairs.has_deposit_box
  - Zip: financial_affairs.deposit_box.other_zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    required: False
    show if: financial_affairs.has_deposit_box
  - note: Describe the contents
    show if: financial_affairs.has_deposit_box
  - no label: financial_affairs.deposit_box.contents
    # default: Deposit box contents
    input type: area
    show if: financial_affairs.has_deposit_box
  - Do you still have it?: financial_affairs.deposit_box.still_owns
    datatype: yesnoradio
    # default: True
    show if: financial_affairs.has_deposit_box
---
question: |
  Storage Unit
subquestion: |
  Have you stored property in a storage unit or place other than your home within 1 year befor eyou filed for bankruptcy?
fields:
  - no label: financial_affairs.has_storage_unit
    datatype: yesnoradio
    # default: True
  - Name of storage facility: financial_affairs.storage_unit.name
    # default: BECU
    show if: financial_affairs.has_storage_unit
  - Address/PO Box: financial_affairs.storage_unit.street
    # default: 1111 25th Ave NE
    show if: financial_affairs.has_storage_unit
  - City: financial_affairs.storage_unit.city
    # default: Seattle
    show if: financial_affairs.has_storage_unit
  - State: financial_affairs.storage_unit.state
    # default: Washington
    show if: financial_affairs.has_storage_unit
  - Zip: financial_affairs.storage_unit.zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if: financial_affairs.has_storage_unit
  - note: Who else had access to it?
    show if: financial_affairs.has_storage_unit
  - Name: financial_affairs.storage_unit.other_name
    required: False
    # default: Jan
    show if: financial_affairs.has_storage_unit
  - Address/PO Box: financial_affairs.storage_unit.other_street
    # default: 1111 54rd ave ne
    required: False
    show if: financial_affairs.has_storage_unit
  - City: financial_affairs.storage_unit.other_city
    # default: Seattle
    required: False
    show if: financial_affairs.has_storage_unit
  - State: financial_affairs.storage_unit.other_state
    # default: Washington
    required: False
    show if: financial_affairs.has_storage_unit
  - Zip: financial_affairs.storage_unit.other_zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    required: False
    show if: financial_affairs.has_storage_unit
  - note: Describe the contents and list value
    show if: financial_affairs.has_storage_unit
  - no label: financial_affairs.storage_unit.contents
    # default: Deposit box contents
    input type: area
    show if: financial_affairs.has_storage_unit
  - Do you still have it?: financial_affairs.storage_unit.still_owns
    datatype: yesnoradio
    # default: True
    show if: financial_affairs.has_storage_unit
---
question: |
  Borrowed Property
subquestion: |
  Do you hold or control any property that someone else owns? Include any property you borrowed from, are storing for, or hold in trust for someone.
fields:
  - no label: financial_affairs.has_held_property
    datatype: yesnoradio
    # default: True
  - Owners name: financial_affairs.held_property.name
    # default: Craig
    show if: financial_affairs.has_held_property
  - Address/PO Box: financial_affairs.held_property.street
    # default: 34th Ave NE
    show if: financial_affairs.has_held_property
  - City: financial_affairs.held_property.city
    # default: Seattle
    show if: financial_affairs.has_held_property
  - State: financial_affairs.held_property.state
    # default: Washington
    show if: financial_affairs.has_held_property
  - Zip: financial_affairs.held_property.zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if: financial_affairs.has_held_property
  - note: Where is the property?
    show if: financial_affairs.has_held_property
  - Address/PO Box: financial_affairs.held_property.prop_street
    # default: 1111 1st Ave
    show if: financial_affairs.has_held_property
  - City: financial_affairs.held_property.prop_city
    # default: Seattle
    show if: financial_affairs.has_held_property
  - State: financial_affairs.held_property.prop_state
    # default: Washington
    show if: financial_affairs.has_held_property
  - Zip: financial_affairs.held_property.prop_zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if: financial_affairs.has_held_property
  - note: Describe the property
    show if: financial_affairs.has_held_property
  - no label: financial_affairs.held_property.property_description
    input type: area
    # default: property description
    show if: financial_affairs.has_held_property
  - Value: financial_affairs.held_property.value
    datatype: currency
    # default: 2000
    show if: financial_affairs.has_held_property
---
question: |
  Environmental Law Liability
subquestion: |
  For the purpose of the next few questions the following definitions apply:

  Environmental law means any federal, state, or local statute or regulation concerning pollution, contamination, release of hazardous or toxic substances, wastes, or material inot the air, land, soil, surface wather, groundwater, or other medium, including statues or regulations controlling the cleanup of these substances, wastes, or material.

  Site means any location, facility, or property as defined under any environmental law, whether you now own, operate, or utilize it or used to own, operate, or utilize it, including disposal sites.

  Hazaradous material means anything an environmental law defines as a hazardous waste, hazardous substance, toxic substance, hazardous material, pollutant, containmant, or similar term.

  Report all notices, releases, and proceedings that you know about, regardless of when they occurred.

  Has any government unit notified you that you may be liable or potentially liable under or in violation of an environmental law?
fields:
  - no label: financial_affairs.environment.has_liability
    datatype: yesnoradio
    # default: True
  - Name of site: financial_affairs.environment.liability_name
    # default: Site
    show if: financial_affairs.environment.has_liability
  - Address/PO Box: financial_affairs.environment.liability_street
    # default: 1111 54th Ave
    show if: financial_affairs.environment.has_liability
  - City: financial_affairs.environment.liability_city
    # default: Seattle
    show if: finanical_affairs.environment.has_liability
  - State: financial_affairs.environment.liability_state
    # default: Washington
    show if: financial_affairs.environment.has_liability
  - Zip: financial_affairs.environment.liability_zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if: financial_affairs.environment.has_liability
  - note: Government Unit
    show if: financial_affairs.environment.has_liability
  - Name: financial_affairs.environment.liability_unit_name
    # default: Govt Unit
    show if: financial_affairs.environment.has_liability
  - Address/PO Box: financial_affairs.environment.liability_unit_street
    # default: 1111 23rd Ave NE
    show if: financial_affairs.environment.has_liability
  - City: financial_affairs.environment.liability_unit_city
    # default: Seattle
    show if: financial_affairs.environment.has_liability
  - State: financial_affairs.environment.liability_unit_state
    # default: Washington
    show if: financial_affairs.environment.has_liability
  - Zip: financial_affairs.environment.liability_unit_zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if: financial_affairs.environment.has_liability
  - note: Environmental law, if you know it
    show if: financial_affairs.environment.has_liability
  - no label: financial_affairs.environment.liability_law
    input type: area
    # default: Applicable law
    show if: financial_affairs.environment.has_liability
  - note: Date of notice
    show if: financial_affairs.environment.has_liability
  - no label: financial_affairs.environment.liability_date
    datatype: date
    # default: 01/01/23
    show if: financial_affairs.environment.has_liability
---
question: |
  Hazardous Material
subquestion: |
  Have you notified any governmental unit of any realease of hazardous material?
fields:
  - no label: financial_affairs.environment.has_release
    datatype: yesnoradio
    # default: True
  - Name of site: financial_affairs.environment.release_name
    # default: Site
    show if: financial_affairs.environment.has_release
  - Address/PO Box: financial_affairs.environment.release_street
    # default: 111 54th Ave
    show if: financial_affairs.environment.has_release
  - City: financial_affairs.environment.release_city
    # default: Seattle
    show if: finanical_affairs.environment.has_release
  - State: financial_affairs.environment.release_state
    # default: Washington
    show if: financial_affairs.environment.has_release
  - Zip: financial_affairs.environment.release_zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if: financial_affairs.environment.has_release
  - note: Government Unit
    show if: financial_affairs.environment.has_release
  - Name: financial_affairs.environment.release_unit_name
    # default: Govt Unit
    show if: financial_affairs.environment.has_release
  - Address/PO Box: financial_affairs.environment.release_unit_street
    # default: 1111 23rd Ave NE
    show if: financial_affairs.environment.has_release
  - City: financial_affairs.environment.release_unit_city
    # default: Seattle
    show if: financial_affairs.environment.has_release
  - State: financial_affairs.environment.release_unit_state
    # default: Washington
    show if: financial_affairs.environment.has_release
  - Zip: financial_affairs.environment.release_unit_zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if: financial_affairs.environment.has_release
  - note: Environmental law, if you know it
    show if: financial_affairs.environment.has_release
  - no label: financial_affairs.environment.release_law
    input type: area
    # default: Applicable law
    show if: financial_affairs.environment.has_release
  - note: Date of notice
    show if: financial_affairs.environment.has_release
  - no label: financial_affairs.environment.release_date
    datatype: date
    # default: 01/01/23
    show if: financial_affairs.environment.has_release
---
question: |
  Environmental Judicial Proceeding
subquestion: |
  Have you been a party in any judicial or administrative proceeding under any environmental law? Include settlements and orders.
fields:
  - no label: financial_affairs.environment.has_proceeding
    datatype: yesnoradio
    # default: True
  - Case title: financial_affairs.environment.proceeding_case_title
    input type: area
    # default: Case Title
    show if: financial_affairs.environment.has_proceeding
  - Case number: financial_affairs.environment.proceeding_case_number
    datatype: string
    # default: 3343902
    show if: financial_affairs.environment.has_proceeding
  - note: Court or agency
  - Court Name: financial_affairs.environment.proceeding_court_name
    # default: Court Name
    show if: financial_affairs.environment.has_proceeding
  - Address/PO Box: financial_affairs.environment.proceeding_court_street
    # default: 1111 34th Ave NE
    show if: financial_affairs.environment.has_proceeding
  - City: financial_affairs.environment.proceeding_court_city
    # default: Seattle
    show if: financial_affairs.environment.has_proceeding
  - State: financial_affairs.environment.proceeding_court_state
    # default: Washington
    show if: financial_affairs.environment.has_proceeding
  - Zip: financial_affairs.environment.proceeding_court_zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if: financial_affairs.environment.has_proceeding
  - note: Nature of the case
    show if: financial_affairs.environment.has_proceeding
  - no label: financial_affairs.environment.proceeding_description
    input type: area
    # default: Nature of the case
    show if: financial_affairs.environment.has_proceeding
  - Status of the case: financial_affairs.environment.proceeding_status
    choices:
      - Pending
      - On appeal
      - Concluded
    # default: Pending
    show if: financial_affairs.environment.has_proceeding
---
question: |
  Business Connections
subquestion: |
  Within 4 years before you filed for bankruptcy, did you own a business or have any of the following connections to any business?
fields:
  - no label: financial_affairs.business_types
    datatype: checkboxes
    choices:
      - A sole proprietor or self-employed in a trade, profession, or other activity, either full-time or part-time
      - A member of a limited liability company (LLC) or limited liability partnership (LLP)
      - A partner in a partnership
      - An officer, director, or managing executive of a corporation
      - An owner of at least 5% of the voting or equity securities of a corporation
---
table: businesses_table
rows: financial_affairs.businesses
columns:
  - Business Name: row_item.name
  - From: row_item.from_date
  - To: row_item.to
edit:
  - name
  - from
  - to
---
question: |
  Do you have any businesses or have any connections to any business?
yesno: financial_affairs.businesses.there_are_any
---
question: |
  Do you have any more businesses to tell the court about?
yesno: financial_affairs.businesses.there_is_another
under: |
  ${ businesses_table }
---
question: |
  Tell the court about the business.
fields:
  - Business Name: financial_affairs.businesses[i].name
    # default: business name
  - Address/PO Box: financial_affairs.businesses[i].street
    # default: 34th Ave NE
  - City: financial_affairs.businesses[i].city
    # default: Seattle
  - State: financial_affairs.businesses[i].state
    # default: Washington
  - Zip: financial_affairs.businesses[i].zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
  - note: Describe the nature of the business
  - no label: financial_affairs.businesses[i].nature
    input type: area
    # default: Business nature
  - note: Name of accountant or bookkeeper
  - no label: financial_affairs.businesses[i].accountant
    input type: area
    # default: Accountant
  - note: |
      Employer Identification number
      Do not include Social Security number or ITIN
  - EIN: financial_affairs.businesses[i].ein
    # default: 11-1111111
  - note: Dates business existed
  - From: financial_affairs.businesses[i].from_date
    datatype: date
    # default: 01/01/23
  - To: financial_affairs.businesses[i].to
    datatype: date
    # default: 01/01/23
---
question: |
  Financial Statements
subquestion: |
  Within 2 years before you filed for bankruptcy, did you give a financial statement to anyone about your business? Include all financial institutions, creditors, or other parties.
fields:
  - no label: financial_affairs.has_statement
    datatype: yesnoradio
    # default: True
  - Name: financial_affairs.statement_name
    # default: Name
    show if: financial_affairs.has_statement
  - Address/PO Box: financial_affairs.statement_street
    # default: 1111 34th Ave NE
    show if: financial_affairs.has_statement
  - City: financial_affairs.statement_city
    # default: Seattle
    show if: financial_affairs.has_statement
  - State: financial_affairs.statement_state
    # default: Washington
    show if: financial_affairs.has_statement
  - Zip: financial_affairs.statement_zip
    datatype: number
    minlength: 5
    maxlength: 5
    # default: 33593
    show if: financial_affairs.has_statement
  - note: Date issued
    show if: financial_affairs.has_statement
  - no label: financial_affairs.statement_date
    datatype: date
    # default: 01/01/23
    required: False
---
attachment:
  - name: Form 107Ext1
    filename: form_b107ext1.pdf
    pdf template file: form_b_107_ext1.pdf
    variable name: form_107_ext1
    code: fin
---
attachment:
  - name: Form 107Ext2
    filename: form_b107ext2.pdf
    pdf template file: form_b_107_ext2.pdf
    variable name: form_107_ext2
    code: fin
---
attachment:
  - name: Form 107
    filename: form_b107_v2.pdf
    pdf template file: form_b_107_v2.pdf
    variable name: form_107_temp
    code: fin
---
attachment:
  - name: Form 107Ext3
    filename: form_b107ext3.pdf
    pdf template file: form_b_107_ext3.pdf
    variable name: form_107_ext3
    code: fin
---
code: |
  debtor_name = debtor[0].name.first + " " + debtor[0].name.middle + " " + debtor[0].name.last
  if len(debtor) > 1:
    debtor2_name = debtor[1].name.first + " " + debtor[1].name.middle + " " + debtor[1].name.last
  else:
    debtor2_name = ''
  fin = {}

  fin['debtor1_name_1'] = debtor_name
  fin['debtor1_name_2'] = debtor_name
  fin['debtor1_name_3'] = debtor_name
  fin['debtor1_name_4'] = debtor_name
  fin['debtor1_name_5'] = debtor_name
  fin['debtor1_name_6'] = debtor_name
  fin['debtor1_name_7'] = debtor_name
  fin['debtor1_name_8'] = debtor_name
  fin['debtor1_name_9'] = debtor_name
  fin['debtor1_name_10'] = debtor_name
  fin['debtor1_name_11'] = debtor_name
  fin['debtor1_name_12'] = debtor_name
  fin['debtor2_name_1'] = debtor2_name
  fin['bankruptcy_district'] = current_district
  fin['case_number_1'] = case_number
  fin['case_number_2'] = case_number
  fin['case_number_3'] = case_number
  fin['case_number_4'] = case_number
  fin['case_number_5'] = case_number
  fin['case_number_6'] = case_number
  fin['case_number_7'] = case_number
  fin['case_number_8'] = case_number
  fin['case_number_9'] = case_number
  fin['case_number_10'] = case_number
  fin['case_number_11'] = case_number
  fin['case_number_12'] = case_number
  fin['isAmended'] = amended_filing

  fin['yesMarried'] = True if financial_affairs.marital_status == True else False
  fin['noMarried'] = True if financial_affairs.marital_status == False else False
  fin['noLivedElsewhere'] = True if financial_affairs.lived_elsewhere == False else False
  fin['yesLivedElsewhere'] = True if financial_affairs.lived_elsewhere == True else False
  fin['add1_D1_address'] = financial_affairs.address_street_1
  fin['add1_D1_from'] = format_date(financial_affairs.address_from_1, format='MM/dd/yyyy')
  fin['add1_D1_to'] = format_date(financial_affairs.address_to_1, format='MM/dd/yyyy')
  fin['add1_D1_city'] = financial_affairs.address_city_1
  fin['add1_D1_state'] = financial_affairs.address_state_1
  fin['add1_D1_zip'] = financial_affairs.address_zip_1
  fin['add2_D1_from'] = format_date(financial_affairs.address_from_2, format='MM/dd/yyyy')
  fin['add2_D1_to'] = format_date(financial_affairs.address_to_2, format='MM/dd/yyyy')
  fin['add2_D1_city'] = financial_affairs.address_city_2
  fin['add2_D1_state'] = financial_affairs.address_state_2
  fin['add2_D1_zip'] = financial_affairs.address_zip_2
  fin['add3_D1_address'] = financial_affairs.address_street_3
  fin['add3_D1_from'] = format_date(financial_affairs.address_from_3, format='MM/dd/yyyy')
  fin['add3_D1_to'] = format_date(financial_affairs.address_to_3, format='MM/dd/yyyy')
  fin['add3_D1_city'] = financial_affairs.address_city_3
  fin['add3_D1_state'] = financial_affairs.address_state_3
  fin['add3_D1_zip'] = financial_affairs.address_zip_3
  fin['add4_D1_from'] = format_date(financial_affairs.address_from_4, format='MM/dd/yyyy')
  fin['add4_D1_to'] = format_date(financial_affairs.address_to_4, format='MM/dd/yyyy')
  fin['add4_D1_city'] = financial_affairs.address_city_4
  fin['add4_D1_state'] = financial_affairs.address_state_4
  fin['add4_D1_zip'] = financial_affairs.address_zip_4
  fin['add5_D1_address'] = financial_affairs.address_street_5
  fin['add5_D1_from'] = format_date(financial_affairs.address_from_5, format='MM/dd/yyyy')
  fin['add5_D1_to'] = format_date(financial_affairs.address_to_5, format='MM/dd/yyyy')
  fin['add5_D1_city'] = financial_affairs.address_city_5
  fin['add5_D1_state'] = financial_affairs.address_state_5
  fin['add5_D1_zip'] = financial_affairs.address_zip_5
  fin['add6_D1_from'] = format_date(financial_affairs.address_from_6, format='MM/dd/yyyy')
  fin['add6_D1_to'] = format_date(financial_affairs.address_to_6, format='MM/dd/yyyy')
  fin['add6_D1_city'] = financial_affairs.address_city_6
  fin['add6_D1_state'] = financial_affairs.address_state_6
  fin['add6_D1_zip'] = financial_affairs.address_zip_6
  fin['noCommunity'] = True if financial_affairs.lived_with_spouse == False else False
  fin['yesCommunity'] = True if financial_affairs.lived_with_spouse == True else False
  fin['noRegularIncome'] = True if financial_affairs.employed == False else False
  fin['yesRegularIncome'] = True if financial_affairs.employed == True else False
  fin['curr_D1_HasWages'] = True if financial_affairs.current_income_sources == 'Wages, commissions, bonuses, tips' else False
  fin['curr_D1_GrossIncome'] = currency(financial_affairs.current_gross_income)
  fin['curr_D1_HasBus'] = True if financial_affairs.current_income_sources == 'Operating a business' else False
  fin['lastYear'] = financial_affairs.last_year
  fin['last_D1_HasWages'] = True if financial_affairs.last_income_sources == 'Wages, commissions, bonuses, tips' else False
  fin['last_D1_GrossIncome'] = currency(financial_affairs.last_gross_income)
  fin['last_D1_HasBus'] = True if financial_affairs.last_income_sources == 'Operating a business' else False
  fin['beforeYear'] = financial_affairs.before_year
  fin['before_D1_HasWages'] = True if financial_affairs.before_income_sources == 'Wages, commissions, bonuses, tips' else False
  fin['before_D1_GrossIncome'] = currency(financial_affairs.before_gross_income)
  fin['before_D1_HasBus'] = True if financial_affairs.before_income_sources == 'Operating a business' else False

  fin['noOtherIncome'] = True if financial_affairs.had_other_income == False else False
  fin['yesOtherIncome'] = True if financial_affairs.had_other_income == True else False
  fin['curr_D1_Source1'] = financial_affairs.current_other_source_1
  fin['curr_D1_Amt1'] = currency(financial_affairs.current_other_source_amount_1)
  fin['curr_D1_Source2'] = financial_affairs.current_other_source_2
  fin['curr_D1_Amt2'] = currency(financial_affairs.current_other_source_amount_2)
  fin['curr_D1_Source3'] = financial_affairs.current_other_source_3
  fin['curr_D1_Amt3'] = currency(financial_affairs.current_other_source_amount_3)

  fin['lastYear-1'] = fin['lastYear']
  fin['last_D1_Source1'] = financial_affairs.last_other_source_1
  fin['last_D1_Amt1'] = currency(financial_affairs.last_other_source_amount_1)
  fin['last_D1_Source2'] = financial_affairs.last_other_source_2
  fin['last_D1_Amt2'] = currency(financial_affairs.last_other_source_amount_2)
  fin['last_D1_Source3'] = financial_affairs.last_other_source_3
  fin['last_D1_Amt3'] = currency(financial_affairs.last_other_source_amount_3)

  fin['beforeYear-1'] = fin['beforeYear']
  fin['before_D1_Source1'] = financial_affairs.before_other_source_1
  fin['before_D1_Amt1'] = currency(financial_affairs.before_other_source_amount_1)
  fin['before_D1_Source2'] = financial_affairs.before_other_source_2
  fin['before_D1_Amt2'] = currency(financial_affairs.before_other_source_amount_2)
  fin['before_D1_Source3'] = financial_affairs.before_other_source_3
  fin['before_D1_Amt3'] = currency(financial_affairs.before_other_source_amount_3)

  if len(debtor) > 1:
    fin['add1_D2_SameAddress'] = True if financial_affairs.address_same_1 == True else False
    if financial_affairs.address_same_1 == True:
      fin['add1_D2_SameTime'] = True if financial_affairs.address_same_dates_1 == True else False
      if financial_affairs.address_same_dates_1 == False:
        fin['add1_D2_from'] = format_date(financial_affairs.debtor2_address_from_1, format='MM/dd/yyyy')
        fin['add1_D2_to'] = format_date(financial_affairs.debtor2_address_to_1, format='MM/dd/yyyy')

    else:
      fin['add1_D2_address'] = financial_affairs.debtor2_address_street_1
      fin['add1_D2_city'] = financial_affairs.debtor2_address_city_1
      fin['add1_D2_state'] = financial_affairs.debtor2_address_state_1
      fin['add1_D2_zip'] = financial_affairs.debtor2_address_zip_1
    fin['add2_D2_SameAddress'] = True if financial_affairs.address_same_2 == True else False
    if financial_affairs.address_same_2 == True:
      fin['add2_D2_SameTime'] = True if financial_affairs.address_same_dates_2 == True else False
      if finacial_affairs.address_same_dates2 == False:
        fin['add2_D2_from'] = format_date(financial_affairs.debtor2_address_from_2, format='MM/dd/yyyy')
        fin['add2_D2_to'] = format_date(financial_affairs.debtor2_address_to_2, format='MM/dd/yyyy')
    else:
      fin['add2_D2_address'] = financial_affairs.debtor2_address_street_2
      fin['add2_D2_city'] = financial_affairs.debtor2_address_city_2
      fin['add2_D2_state'] = financial_affairs.debtor2_address_state_2
      fin['add2_D2_zip'] = financial_affairs.debtor2_address_zip_2
    fin['add2_D1_address'] = financial_affairs.address_street_2
    #end first
    fin['add3_D2_SameAddress'] = True if financial_affairs.address_same_3 == True else False
    if financial_affairs.address_same_3 == True:
      fin['add3_D2_SameTime'] = True if financial_affairs.address_same_dates_3 == True else False
      if financial_affairs.address_same_dates_3 == False:
        fin['add3_D2_from'] = format_date(financial_affairs.debtor2_address_from_3, format='MM/dd/yyyy')
        fin['add3_D2_to'] = format_date(financial_affairs.debtor2_address_to_3, format='MM/dd/yyyy')

    else:
      fin['add3_D2_address'] = financial_affairs.debtor2_address_street_3
      fin['add3_D2_city'] = financial_affairs.debtor2_address_city_3
      fin['add3_D2_state'] = financial_affairs.debtor2_address_state_3
      fin['add3_D2_zip'] = financial_affairs.debtor2_address_zip_3
    fin['add4_D2_SameAddress'] = True if financial_affairs.address_same_4 == True else False
    if financial_affairs.address_same_4 == True:
      fin['add4_D2_SameTime'] = True if financial_affairs.address_same_dates_4 == True else False
      if finacial_affairs.address_same_dates4 == False:
        fin['add4_D2_from'] = format_date(financial_affairs.debtor2_address_from_4, format='MM/dd/yyyy')
        fin['add4_D2_to'] = format_date(financial_affairs.debtor2_address_to_4, format='MM/dd/yyyy')
    else:
      fin['add4_D2_address'] = financial_affairs.debtor2_address_street_4
      fin['add4_D2_city'] = financial_affairs.debtor2_address_city_4
      fin['add4_D2_state'] = financial_affairs.debtor2_address_state_4
      fin['add4_D2_zip'] = financial_affairs.debtor2_address_zip_4
    fin['add4_D1_address'] = financial_affairs.address_street_4
   #end set 2
    fin['add5_D2_SameAddress'] = True if financial_affairs.address_same_5 == True else False
    if financial_affairs.address_same_3 == True:
      fin['add5_D2_SameTime'] = True if financial_affairs.address_same_dates_5 == True else False
      if financial_affairs.address_same_dates_5 == False:
        fin['add5_D2_from'] = format_date(financial_affairs.debtor2_address_from_5, format='MM/dd/yyyy')
        fin['add5_D2_to'] = format_date(financial_affairs.debtor2_address_to_5, format='MM/dd/yyyy')

    else:
      fin['add5_D2_address'] = financial_affairs.debtor2_address_street_3
      fin['add5_D2_city'] = financial_affairs.debtor2_address_city_5
      fin['add5_D2_state'] = financial_affairs.debtor2_address_state_5
      fin['add5_D2_zip'] = financial_affairs.debtor2_address_zip_5
    fin['add6_D2_SameAddress'] = True if financial_affairs.address_same_6 == True else False
    if financial_affairs.address_same_6 == True:
      fin['add6_D2_SameTime'] = True if financial_affairs.address_same_dates_6 == True else False
      if finacial_affairs.address_same_dates6 == False:
        fin['add6_D2_from'] = format_date(financial_affairs.debtor2_address_from_6, format='MM/dd/yyyy')
        fin['add6_D2_to'] = format_date(financial_affairs.debtor2_address_to_6, format='MM/dd/yyyy')
    else:
      fin['add6_D2_address'] = financial_affairs.debtor2_address_street_6
      fin['add6_D2_city'] = financial_affairs.debtor2_address_city_6
      fin['add6_D2_state'] = financial_affairs.debtor2_address_state_6
      fin['add6_D2_zip'] = financial_affairs.debtor2_address_zip_6
    fin['add6_D1_address'] = financial_affairs.address_street_6

    fin['curr_D2_HasWages'] = True if 'Wages, commissions, bonuses, tips' in financial_affairs.debtor2_current_income_sources else False
    fin['curr_D2_GrossIncome'] = currency(financial_affairs.debtor2_current_gross_income)
    fin['curr_D2_HasBus'] = True if financial_affairs.debtor2_current_income_sources == 'Operating a business' else False
    fin['last_D2_HasWages'] = True if financial_affairs.debtor2_last_income_sources == 'Wages, commissions, bonuses, tips' else False
    fin['last_D2_GrossIncome'] = currency(financial_affairs.debtor2_last_gross_income)
    fin['before_D2_HasWages'] = True if financial_affairs.debtor2_before_income_sources == 'Wages, commissions, bonuses, tips' else False
    fin['before_D2_GrossIncome'] = currency(financial_affairs.debtor2_before_gross_income)
    fin['last_D2_HasBus'] = True if financial_affairs.debtor2_last_income_sources == 'Operating a business' else False
    fin['before_D2_HasWages'] = True if financial_affairs.debtor2_before_income_sources == 'Wages, commissions, bonuses, tips' else False
    fin['before_D2_Gross_income'] = currency(financial_affairs.debtor2_before_gross_income)
    fin['before_D2_HasBus'] = True if financial_affairs.debtor2_before_income_sources == 'Operating a business' else False
    fin['curr_D2_Source1'] = financial_affairs.debtor2_current_other_source_1
    fin['curr_D2_Amt1'] = currency(financial_affairs.debtor2_current_other_source_amount_1)
    fin['curr_D2_Source2'] = financial_affairs.debtor2_current_other_source_2
    fin['curr_D2_Amt2'] = currency(financial_affairs.debtor2_current_other_source_amount_2)
    fin['curr_D2_Source3'] = financial_affairs.debtor2_current_other_source_3
    fin['curr_D2_Amt3'] = currency(financial_affairs.debtor2_current_other_source_amount_3)
    fin['last_D2_Source1'] = financial_affairs.debtor2_last_other_source_1
    fin['last_D2_Amt1'] = currency(financial_affairs.debtor2_last_other_source_amount_1)
    fin['last_D2_Source2'] = financial_affairs.debtor2_last_other_source_2
    fin['last_D2_Amt2'] = currency(financial_affairs.debtor2_last_other_source_amount_2)
    fin['last_D2_Source3'] = financial_affairs.debtor2_last_other_source_3
    fin['last_D2_Amt3'] = currency(financial_affairs.debtor2_last_other_source_amount_3)
    fin['before_D2_Source1'] = financial_affairs.debtor2_before_other_source_1
    fin['before_D2_Amt1'] = currency(financial_affairs.debtor2_before_other_source_amount_1)
    fin['before_D2_Source2'] = financial_affairs.debtor2_before_other_source_2
    fin['before_D2_Amt2'] = currency(financial_affairs.debtor2_before_other_source_amount_2)
    fin['before_D2_Source3'] = financial_affairs.debtor2_before_other_source_3
    fin['before_D2_Amt3'] = currency(financial_affairs.debtor2_before_other_source_amount_3)

  if financial_affairs.primarily_consumer_debts == True:
    fin['yesBothConsumerDebts'] = True
  else:
    fin['noBothConsumerDebts'] = True
    fin['yesConsumerPayments'] = True


  x=1
  for payment in financial_affairs.consumer_debt_payments:
    fin['creditor'+str(x)] = payment.creditor_name
    fin['creditor_totalPaid'+str(x)] = currency(payment.total_amount)
    fin['creditor_amountOwed'+str(x)] = currency(payment.amount_owed)
    fin['creditor_isMortgage'+str(x)] = True if payment.payment_for == 'Mortgage' else False
    fin['creditor_address'+str(x)] = payment.creditor_street
    fin['creditor_paymentDates'+str(x)] = payment.paymentDates
    fin['creditor_isCar'+str(x)] = True if payment.payment_for == 'Car' else False
    fin['creditor_isCC'+str(x)] = True if payment.payment_for == 'Credit Card' else False
    fin['creditor_isLoan'+str(x)] = True if payment.payment_for == 'Load repayment' else False
    fin['creditor_isVendor'+str(x)] = True if payment.payment_for == 'Suppliers or vendors' else False
    fin['creditor_city'+str(x)] = payment.creditor_city
    fin['creditor_state'+str(x)] = payment.creditor_state
    fin['creditor_zip'+str(x)] = payment.creditor_zip
    fin['creditor_isOther'+str(x)] = True if payment.payment_for == 'Other' else False
    fin['creditor_other'+str(x)] = payment.payment_for

    x += 1

  fin['noInsiderPayments'] = True if financial_affairs.insider_payments.there_are_any == False else False
  fin['yesInsiderPayments'] = True if financial_affairs.insider_payments.there_are_any == True else False
  x = 1
  for payment in financial_affairs.insider_payments:
    fin['insider'+str(x)] = payment.insider_name
    fin['insider_address'+str(x)] = payment.street
    fin['insider_city'+str(x)] = payment.city
    fin['insider_state'+str(x)] = payment.state
    fin['insider_zip'+str(x)] = payment.zip
    fin['insider_paymentDates'+str(x)] = payment.paymentDates
    fin['insider_totalPaid'+str(x)] = currency(payment.total_amount)
    fin['insider_amountOwed'+str(x)] = currency(payment.amount_owed)
    fin['insider_reason'+str(x)] = payment.reason

    x += 1

  fin['noBenefitPayments'] = True if financial_affairs.insider_benefits.there_are_any == False else False
  fin['yesBenefitPayments'] = True if financial_affairs.insider_benefits.there_are_any == True else False
  x = 1
  for payment in financial_affairs.insider_benefits:
    fin['benefit'+str(x)] = payment.insider_name
    fin['benefit_address'+str(x)] = payment.street
    fin['benefit_city'+str(x)] = payment.city
    fin['benefit_state'+str(x)] = payment.state
    fin['benefit_zip'+str(x)] = payment.zip
    fin['benefit_payment1_'+str(x)] = format_date(payment.payment_date_1, format='MM/dd/yyyy')
    fin['benefit_payment2_'+str(x)] = format_date(payment.payment_date_2, format='MM/dd/yyyy')
    fin['benefit_payment3_'+str(x)] = format_date(payment.payment_date_3, format='MM/dd/yyyy')
    fin['benefit_totalPaid'+str(x)] = currency(payment.total_amount)
    fin['benefit_amountOwed'+str(x)] = currency(payment.amount_owed)
    fin['benefit_reason'+str(x)] = payment.reason

    x += 1

  fin['noLawsuit'] = True if financial_affairs.lawsuits.there_are_any == False else False
  fin['yesLawsuit'] = True if financial_affairs.lawsuits.there_are_any == True else False
  x = 1
  for lawsuit in financial_affairs.lawsuits:
    fin['case_nature'+str(x)] = lawsuit.nature_of_case
    fin['case_title1-'+str(x)] = lawsuit.case_title
    fin['case_court'+str(x)] = lawsuit.court_name
    fin['case_isPending'+str(x)] = True if lawsuit.case_status == 'Pending' else False
    fin['case_isAppeal'+str(x)] = True if lawsuit.case_status == 'On appeal' else False
    fin['case_isConcluded'+str(x)] = True if lawsuit.case_status == 'Concluded' else False
    fin['case_number'+str(x)] = lawsuit.case_number
    fin['case_address'+str(x)] = lawsuit.court_street
    fin['case_city'+str(x)] = lawsuit.court_city
    fin['case_state'+str(x)] = lawsuit.court_state
    fin['case_zip'+str(x)] = lawsuit.court_zip
    x += 1

  fin['noSeized'] = True if financial_affairs.levies.there_are_any == False else False
  fin['yesSeized'] = True if financial_affairs.levies.there_are_any == True else False
  x = 1
  for levy in financial_affairs.levies:
    fin['seized_creditor'+str(x)] = levy.creditor_name
    fin['seized_address'+str(x)] = levy.creditor_street
    fin['seized_city'+str(x)] = levy.creditor_city
    fin['seized_state'+str(x)] = levy.creditor_state
    fin['seized_zip'+str(x)] = levy.creditor_zip
    fin['seized_property'+str(x)] = levy.property_description
    if levy.date_in_description:
      fin['seized_date'+str(x)] = 'Various'
    else:
      fin['seized_date'+str(x)] = format_date(levy.date, format='MM/dd/yyyy')
    fin['seized_value'+str(x)] = currency(levy.property_value)
    fin['seized_isRepossessed'+str(x)] = True if levy.property_action == 'Property was repossessed' else False
    fin['seized_isForeclosed'+str(x)] = True if levy.property_action == 'Property was foreclosed' else False
    fin['seized_isGarnished'+str(x)] = True if levy.property_action == 'Property was garnished' else False
    fin['seized_isAttached'+str(x)] = True if levy.property_action == 'Property was attached, seized, or levied' else False

    x += 1

  fin['noBankAction'] = True if financial_affairs.has_refusal == False else False
  fin['yesBankAction'] = True if financial_affairs.has_refusal == True else False
  fin['bank_name1'] = financial_affairs.refusal_creditor_name
  fin['bank_address1'] = financial_affairs.refusal_creditor_street
  fin['bank_city1'] = financial_affairs.refusal_creditor_city
  fin['bank_state1'] = financial_affairs.refusal_creditor_state
  fin['bank_zip1'] = financial_affairs.refusal_creditor_zip
  fin['bank_action1'] = financial_affairs.refusal_description
  fin['bank_date1'] = format_date(financial_affairs.refusal_date, format='MM/dd/yyyy')
  fin['bank_amount1'] = currency(financial_affairs.refusal_amount)
  fin['bank_acct1'] = financial_affairs.refusal_account_number

  fin['noAssignee'] = True if financial_affairs.other_assignee == False else False
  fin['yesAssignee'] = True if financial_affairs.other_assignee == True else False

  fin['noGifts'] = True if financial_affairs.gifts.there_are_any == False else False
  fin['yesGifts'] = True if financial_affairs.gifts.there_are_any == True else False
  x = 1
  for gift in financial_affairs.gifts:
    fin['gift_name'+str(x)] = gift.person_name
    fin['gift_address'+str(x)] = gift.street
    fin['gift_city'+str(x)] = gift.city
    fin['gift_state'+str(x)] = gift.state
    fin['gift_zip'+str(x)] = gift.zip
    fin['gift_relation'+str(x)] = gift.relationship
    fin['gift_date1-'+str(x)] = gift.date_1
    fin['gift'+str(x)] = gift.description
    fin['gift_amt1-'+str(x)] = currency(gift.value_1)
    fin['gift_amt2-'+str(x)] = currency(gift.value_2)

    x += 1

  fin['noCharity'] = True if financial_affairs.has_charity == False else False
  fin['yesCharity'] = True if financial_affairs.has_charity == True else False
  fin['charity_desc1'] = financial_affairs.charity_description
  fin['charity1'] = financial_affairs.charity_name
  fin['charity_date1-1'] = financial_affairs.charity_date_1
  fin['charity_amt1-1'] = currency(financial_affairs.charity_value_1)
  fin['charity_amt2-1'] = currency(financial_affairs.charity_value_2)
  fin['charity_address1'] = financial_affairs.charity_street
  fin['charity_city1'] = financial_affairs.charity_city
  fin['charity_state1'] = financial_affairs.charity_state
  fin['charity_zip1'] = financial_affairs.charity_zip

  fin['noLoss'] = True if financial_affairs.has_disaster == False else False
  fin['yesLoss'] = True if financial_affairs.has_disaster == True else False
  fin['loss_prop_desc'] = financial_affairs.disaster_description
  fin['loss_insurance_desc'] = financial_affairs.disaster_insurance
  fin['loss_date'] = financial_affairs.disaster_date
  fin['loss_amount'] = currency(financial_affairs.disaster_value)

  fin['noConsulting'] = True if financial_affairs.bankruptcy_payments.there_are_any == False else False
  fin['yesConsulting'] = True if financial_affairs.bankruptcy_payments.there_are_any == True else False
  x = 1
  for payment in financial_affairs.bankruptcy_payments:
    fin['consult_name'+str(x)] = payment.name
    fin['consult_address'+str(x)] = payment.street
    fin['consult_city'+str(x)] = payment.city
    fin['consult_state'+str(x)] = payment.state
    fin['consult_zip'+str(x)] = payment.zip
    fin['consult_email'+str(x)] = payment.email_or_website
    fin['consult_date1-'+str(x)] = format_date(payment.date_1, format='MM/dd/yyyy')
    fin['consult_amt1-'+str(x)] = currency(payment.value_1)
    if payment.value_2 > 0:
      fin['consult_date2-'+str(x)] = format_date(payment.date_2, format='MM/dd/yyyy')
      fin['consult_amt2-'+str(x)] = currency(payment.value_2)
    fin['consult_who'+str(x)] = payment.payment_person
    fin['consult_describe'+str(x)] = payment.property_description

    x += 1

  fin['noAid'] = True if financial_affairs.has_creditor_help == False else False
  fin['yesAid'] = True if financial_affairs.has_creditor_help == True else False
  fin['aid_name1'] = financial_affairs.creditor_help.name
  fin['aid_describe1'] = financial_affairs.creditor_help.property_description
  fin['aid_address1'] = financial_affairs.creditor_help.street
  fin['aid_city1'] = financial_affairs.creditor_help.city
  fin['aid_state1'] = financial_affairs.creditor_help.state
  fin['aid_zip1'] = financial_affairs.creditor_help.zip
  fin['aid_date1-1'] = format_date(financial_affairs.creditor_help.date_1, format='MM/dd/yyyy')
  fin['aid_amt1-1'] = currency(financial_affairs.creditor_help.value_1)
  if financial_affairs.creditor_help.value_2 > 0:
    fin['aid_date2-1'] = format_date(financial_affairs.creditor_help.date_2, format='MM/dd/yyyy')
    fin['aid_amt2-1'] = currency(financial_affairs.creditor_help.value_2)

  fin['noOrdinary'] = True if financial_affairs.other_transfers.there_are_any == False else False
  fin['yesOrdinary'] = True if financial_affairs.other_transfers.there_are_any == True else False
  x = 1
  for transfer in financial_affairs.other_transfers:
    fin['ordinary_name'+str(x)] = transfer.name
    fin['ordinary_address'+str(x)] = transfer.street
    fin['ordinary_city'+str(x)] = transfer.city
    fin['ordinary_state'+str(x)] = transfer.state
    fin['ordinary_zip'+str(x)] = transfer.zip
    fin['ordinary_date'+str(x)] = format_date(transfer.date, format='MM/dd/yyyy')
    fin['ordinary_describe'+str(x)] = transfer.property_description
    fin['ordinary_relation'+str(x)] = transfer.relationship
    fin['ordinary_payments'+str(x)] = transfer.exchange_description

    x += 1

  fin['noTrust'] = True if financial_affairs.has_self_settled_trust == False else False
  fin['yesTrust'] = True if financial_affairs.has_self_settled_trust == True else False
  fin['trust_describe'] = financial_affairs.self_settled_trust.description
  fin['trust_name'] = financial_affairs.self_settled_trust.name
  fin['trust_date'] = format_date(financial_affairs.self_settled_trust.date, format='MM/dd/yyyy')

  fin['noAccounts'] = True if financial_affairs.instruments.there_are_any == False else False
  fin['yesAccounts'] = True if financial_affairs.instruments.there_are_any == True else False
  x = 1
  for acct in financial_affairs.instruments:
    fin['account_name'+str(x)] = acct.name
    fin['account_address'+str(x)] = acct.street
    fin['account_city'+str(x)] = acct.city
    fin['account_state'+str(x)] = acct.state
    fin['account_zip'+str(x)] = acct.zip
    fin['account_number'+str(x)] = acct.account_number
    fin['account_date'+str(x)] = acct.date
    fin['account_balance'+str(x)] = currency(acct.last_balance)
    fin['account_isChecking'+str(x)] = True if acct.account_type == 'Checking' else False
    fin['account_isSavings'+str(x)] = True if acct.account_type == 'Savings' else False
    fin['account_isMoneyMarket'+str(x)] = True if acct.account_type == 'Money Market' else False
    fin['account_isBrokerage'+str(x)] = True if acct.account_type == 'Brokerage' else False
    fin['account_isOther'+str(x)] = True if acct.account_type == 'Other' else False
    fin['account_other'+str(x)] = acct.account_type

    x += 1

  fin['noSafe'] = True if financial_affairs.has_deposit_box == False else False
  fin['yesSafe'] = True if financial_affairs.has_deposit_box == True else False
  fin['safe_bank_name1'] = financial_affairs.deposit_box.name
  fin['safe_bank_address1'] = financial_affairs.deposit_box.street
  fin['safe_bank_city1'] = financial_affairs.deposit_box.city
  fin['safe_bank_state1'] = financial_affairs.deposit_box.state
  fin['safe_bank_zip1'] = financial_affairs.deposit_box.zip
  fin['safe_who_name1'] = financial_affairs.deposit_box.other_name
  fin['safe_who_address1'] = financial_affairs.deposit_box.other_street
  fin['safe_who_city1'] = financial_affairs.deposit_box.other_city
  fin['safe_who_state1'] = financial_affairs.deposit_box.other_state
  fin['safe_who_zip1'] = financial_affairs.deposit_box.other_zip
  fin['safe_describe1'] = financial_affairs.deposit_box.contents
  if financial_affairs.deposit_box.still_owns == True:
    fin['safe_yesHave1'] = True
  else:
    fin['save_noHave1'] = True

  fin['noStorage'] = True if financial_affairs.has_storage_unit == False else False
  fin['yesStorage'] = True if financial_affairs.has_storage_unit == True else False
  fin['storage_bank_name1'] = financial_affairs.storage_unit.name
  fin['storage_bank_address1'] = financial_affairs.storage_unit.street
  fin['storage_bank_city1'] = financial_affairs.storage_unit.city
  fin['storage_bank_state1'] = financial_affairs.storage_unit.state
  fin['storage_bank_zip1'] = financial_affairs.storage_unit.zip
  fin['storage_who_name1'] = financial_affairs.storage_unit.other_name
  fin['storage_who_address1'] = financial_affairs.storage_unit.other_street
  fin['storage_who_city1'] = financial_affairs.storage_unit.other_city
  fin['storage_who_state1'] = financial_affairs.storage_unit.other_state
  fin['storage_who_zip1'] = financial_affairs.storage_unit.other_zip
  fin['storage_describe1'] = financial_affairs.storage_unit.contents
  fin['storage_noHave1'] = True if financial_affairs.storage_unit.still_owns == False else False
  fin['storage_yesHave1'] = True if financial_affairs.storage_unit.still_owns == True else False

  fin['noControl'] = True if financial_affairs.has_held_property == False else False
  fin['yesControl'] = True if financial_affairs.has_held_property == True else False
  fin['control_owner'] = financial_affairs.held_property.name
  fin['control_owner_address'] = financial_affairs.held_property.street
  fin['control_owner_city'] = financial_affairs.held_property.city
  fin['control_owner_state'] = financial_affairs.held_property.state
  fin['control_owner_zip'] = financial_affairs.held_property.zip
  fin['control_prop_address'] = financial_affairs.held_property.prop_street
  fin['control_prop_city'] = financial_affairs.held_property.prop_city
  fin['control_prop_state'] = financial_affairs.held_property.prop_state
  fin['control_prop_zip'] = financial_affairs.held_property.prop_zip
  fin['control_describe'] = financial_affairs.held_property.property_description
  fin['control_value'] = currency(financial_affairs.held_property.value)

  fin['noLiability'] = True if financial_affairs.environment.has_liability == False else False
  fin['yesLiability'] = True if financial_affairs.environment.has_liability == True else False
  fin['liability_describe'] = financial_affairs.environment.liability_law
  fin['liability_date'] = format_date(financial_affairs.environment.liability_date, format='MM/dd/yyyy')
  fin['liability_site'] = financial_affairs.environment.liability_name
  fin['liability_site_address'] = financial_affairs.environment.liability_street
  fin['liability_site_city'] = financial_affairs.environment.liability_city
  fin['liability_site_state'] = financial_affairs.environment.liability_state
  fin['liability_site_zip'] = financial_affairs.environment.liability_zip
  fin['liability_unit'] = financial_affairs.environment.liability_unit_name
  fin['liability_unit_address'] = financial_affairs.environment.liability_unit_street
  fin['liability_unit_city'] = financial_affairs.environment.liability_unit_city
  fin['liability_unit_state'] = financial_affairs.environment.liability_unit_state
  fin['liability_unit_zip'] = financial_affairs.environment.liability_unit_zip

  fin['noHazard'] = True if financial_affairs.environment.has_release == False else False
  fin['yesHazard'] = True if financial_affairs.environment.has_release == True else False
  fin['hazard_site'] = financial_affairs.environment.release_name
  fin['hazard_unit'] = financial_affairs.environment.release_unit_name
  fin['hazard_describe'] = financial_affairs.environment.release_law
  fin['hazard_date'] = format_date(financial_affairs.environment.release_date, format='MM/dd/yyyy')
  fin['hazard_address'] = financial_affairs.environment.release_street
  fin['hazard_city'] = financial_affairs.environment.release_city
  fin['hazard_state'] = financial_affairs.environment.release_state
  fin['hazard_zip'] = financial_affairs.environment.release_zip
  fin['hazard_unit_address'] = financial_affairs.environment.release_unit_street
  fin['hazard_unit_city'] = financial_affairs.environment.release_unit_city
  fin['hazard_unit_state'] = financial_affairs.environment.release_unit_state
  fin['hazard_unit_zip'] = financial_affairs.environment.release_unit_zip

  fin['noEnvLaw'] = True if financial_affairs.environment.has_proceeding == False else False
  fin['yesEnvLaw'] = True if financial_affairs.environment.has_proceeding == True else False
  fin['env_title'] = financial_affairs.environment.proceeding_case_title
  fin['env_caseNumber'] = financial_affairs.environment.proceeding_case_number
  fin['env_court'] = financial_affairs.environment.proceeding_court_name
  fin['env_court_address'] = financial_affairs.environment.proceeding_court_street
  fin['env_court_city'] = financial_affairs.environment.proceeding_court_city
  fin['env_court_state'] = financial_affairs.environment.proceeding_court_state
  fin['env_court_zip'] = financial_affairs.environment.proceeding_court_zip
  fin['env_nature'] = financial_affairs.environment.proceeding_description
  fin['env_isPending'] = True if financial_affairs.environment.proceeding_status == 'Pending' else False
  fin['env_isAppeal'] = True if financial_affairs.environment.proceeding_status == 'On appeal' else False
  fin['env_isConcluded'] = True if financial_affairs.environment.proceeding_status == 'Concluded' else False

  fin['yesSole'] = financial_affairs.business_types['A sole proprietor or self-employed in a trade, profession, or other activity, either full-time or part-time']
  fin['yesLLC'] = financial_affairs.business_types['A member of a limited liability company (LLC) or limited liability partnership (LLP)']
  fin['yesPartner'] = financial_affairs.business_types['A partner in a partnership']
  fin['yesOfficer'] = financial_affairs.business_types['An officer, director, or managing executive of a corporation']
  fin['yesOwner'] = financial_affairs.business_types['An owner of at least 5% of the voting or equity securities of a corporation']

  if fin['yesSole'] == True or fin['yesLLC'] == True or fin['yesPartner'] == True or fin['yesOfficer'] == True or fin['yesOwner'] == True:
    fin['yesAbove'] = True
  else:
    fin['noneAbove'] = True

  x = 1
  for bus in financial_affairs.businesses:
    fin['business_name'+str(x)] = bus.name
    fin['business_address'+str(x)] = bus.street
    fin['business_city'+str(x)] = bus.city
    fin['business_state'+str(x)] = bus.state
    fin['business_zip'+str(x)] = bus.zip
    fin['business_nature'+str(x)] = bus.nature
    fin['business_accountant'+str(x)] = bus.accountant
    fin['business_ein'+str(x)] = bus.ein
    fin['business_from'+str(x)] = format_date(bus.from_date, format='MM/dd/yyyy')
    fin['business_to'+str(x)] = format_date(bus.to, format='MM/dd/yyyy')

    x += 1

  fin['noFinancials'] = True if financial_affairs.has_statement == False else False
  fin['yesFinancials'] = True if financial_affairs.has_statement == True else False
  fin['financials_name'] = financial_affairs.statement_name
  fin['financials_date'] = format_date(financial_affairs.statement_date, format='MM/dd/yyyy')
  fin['financials_address'] = financial_affairs.statement_street
  fin['financials_state'] = financial_affairs.statement_state
  fin['financials_city'] = financial_affairs.statement_city
  fin['financials_zip'] = financial_affairs.statement_zip

