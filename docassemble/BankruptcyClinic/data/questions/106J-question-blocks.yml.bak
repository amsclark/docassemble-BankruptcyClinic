table: dependents_table
rows: debtor[0].expenses.dependents
columns:
  - Relationship: row_item.relationship
  - Age: row_item.age
  - Same Residence: row_item.same_residence
edit:
  - relationship
  - age
  - same_residence
---
section: schedule_j
question: Describe your household
fields:
  - Does debtor 2 live in a separate household: debtor[0].expenses.other_household
    datatype: yesnoradio
    default: True
    show if: debtor[0].expenses.joint_case
  - Do you have dependents?: debtor[0].expenses.dependents.there_are_any
    datatype: yesnoradio
    default: True
  - Do your expenses include expenses of people other than yourself and your dependents?: debtor[0].expenses.other_people_expenses
    datatype: yesnoradio
    default: True
---
section: schedule_j
question: Are there any more dependents?
yesno: debtor[0].expenses.dependents.there_is_another
---
section: schedule_j
question: Tell us about your dependent
fields:
  - Dependent relationship to debtor: debtor[0].expenses.dependents[i].relationship
    default: Child
  - Dependent age: debtor[0].expenses.dependents[i].age
    datatype: string
    default: 12
  - Does the dependent live with you?: debtor[0].expenses.dependents[i].same_residence
    datatype: yesnoradio
    default: True
---
section: schedule_j
question: Estimate your ongoing monthly expenses
subquestion: |
  Estimate your expenses as of your bankruptcy filing date. Include expenses paid for with non-cash government assistance if you know the value of such assistance and have included it on your income.
fields:
  - The rental or home ownership expenses for your residence: debtor[0].expenses.rent_expense
    datatype: currency
    default: 1000
  - note: If not included above
  - Real estate taxes: debtor[0].expenses.real_estate_taxes
    datatype: currency
    default: 0
    required: False
  - Property, homeowners, or renters insurance: debtor[0].expenses.renters_insurance
    datatype: currency
    default: 0
    required: False
  - Home maintenance, repair, and upkeep expenses: debtor[0].expenses.upkeep_expenses
    datatype: currency
    default: 0
    required: False
  - Homeowners association or condominium dues: debtor[0].expenses.owners_dues
    datatype: currency
    default: 0
    required: False
  - note: <br>
  - Additional mortgage payments for your residence: debtor[0].expenses.additional_mortgage_payments
    datatype: currency
    default: 0
    required: False
  - note: Utilities
  - Electricity, heat, natural gas: debtor[0].expenses.util_electric
    datatype: currency
    default: 0
    required: False
  - Water, sewer, garbage collection: debtor[0].expenses.util_garbage
    datatype: currency
    default: 0
    required: False
  - Telephone, cell phone, internet, satellite, and cable services: debtor[0].expenses.telephone
    datatype: currency
    default: 0
    required: False
  - Do you have other utility expenses: debtor[0].expenses.util_other
    datatype: yesnoradio
    default: True
  - Specify other utility: debtor[0].expenses.util_other_specify
    default: Other
    show if: debtor[0].expenses.util_other
  - Amount: debtor[0].expenses.util_other_amount
    default: 100
    datatype: currency
    show if: debtor[0].expenses.util_other
  - note: <br>
  - Food and housekeeping supplies: debtor[0].expenses.house_supplies
    default: 0
    datatype: currency
    required: False
  - Childcare and childrens education costs: debtor[0].expenses.childcare
    datatype: currency
    default: 0
    required: False
  - Clothing, laundry, and dry cleaning: debtor[0].expenses.clothing
    datatype: currency
    default: 0
    required: False
  - Personal care products and services: debtor[0].expenses.personal_care
    datatype: currency
    default: 0
    required: False
  - Medical and dental expenses: debtor[0].expenses.medical
    datatype: currency
    default: 0
    required: False
  - Transportation: debtor[0].expenses.transportation
    datatype: currency
    default: 0
    required: False
  - Entertainment, clubs, recreation, newspapers, magazines, and books: debtor[0].expenses.entertainment
    datatype: currency
    default: 0
    required: False
  - Charitable contributions and religious donations: debtor[0].expenses.charity
    datatype: currency
    default: 0
    required: False
  - note: Insurance
  - Life insurance: debtor[0].expenses.life_insurance
    datatype: currency
    default: 0
    required: False
  - Health insurance: debtor[0].expenses.health_insurance
    datatype: currency
    default: 0
    required: False
  - Vehicle insurance: debtor[0].expenses.vehicle_insurance
    datatype: currency
    default: 0
    required: False
  - Do you have other insurance?: debtor[0].expenses.other_insurance
    datatype: yesnoradio
    default: True
    required: False
  - Specify: debtor[0].expenses.other_insurance_specify
    default: Other insurance
    show if: debtor[0].expenses.other_insurance
  - Amount: debtor[0].expenses.other_insurance_amount
    datatype: currency
    default: 0
    required: False
    show if: debtor[0].expenses.other_insurance
  - note: |
      Taxes. Do not include taxes deducted from your pay or already included amounts
  - Specify: debtor[0].expenses.other_tax_specify
    default: Other taxes
    required: False
  - Amount: debtor[0].expenses.other_tax_amount
    datatype: currency
    default: 0
    required: False
  - note: |
      Installment or lease payments
  - Car payments for Vehicle 1: debtor[0].expenses.vehicle1_payments
    datatype: currency
    default: 300
    required: False
  - Car payments for Vehicle 2: debtor[0].expenses.vehicle2_payments
    datatype: currency
    default: 300
    required: False
  - Other Payment: debtor[0].expenses.other_payment1_specify
    default: Other Payment 1
    required: False
  - Other Amount: debtor[0].expenses.other_payment1_amount
    datatype: currency
    default: 0
    required: False
  - Other Payment: debtor[0].expenses.other_payment2_specify
    default: Other Payment 2
    required: False
  - Other Amount: debtor[0].expenses.other_payment2_amount
    datatype: currency
    default: 0
    required: False
  - note: <br>
  - Your payments of alimony, maintenance, and support that you did not report as deducted from pay: debtor[0].expenses.alimony
    datatype: currency
    default: 0
  - note: |
      Other payments you make to support others who do not live with you
    show if: debtor[0].expenses.other_people_expenses
  - Specify: debtor[0].expenses.other_support_specify
    default: Other payments
    show if: debtor[0].expenses.other_people_expenses
  - Amount: debtor[0].expenses.other_support_amount
    datatype: currency
    default: 0
    required: False
    show if: debtor[0].expenses.other_people_expenses

  - Do you have other custom expenses to add?: debtor[0].expenses.has_other_expenses
    datatype: yesnoradio
    default: False

  - note: Other Custom Expense 1
    show if: debtor[0].expenses.has_other_expenses
  - Custom Expense description: debtor[0].expenses.overall_other_description_1
    default: Other
    required: False
    show if: debtor[0].expenses.has_other_expenses
  - Amount: debtor[0].expenses.overall_other_amount_1
    default: 300
    datatype: currency
    required: False
    show if: debtor[0].expenses.has_other_expenses

  - note: Other Custom Expense 2
    show if: debtor[0].expenses.has_other_expenses
  - Custom Expense description: debtor[0].expenses.overall_other_description_2
    default: Other
    required: False
    show if: debtor[0].expenses.has_other_expenses
  - Amount: debtor[0].expenses.overall_other_amount_2
    default: 300
    datatype: currency
    required: False
    show if: debtor[0].expenses.has_other_expenses

  - note: Other Custom Expense 3
    show if: debtor[0].expenses.has_other_expenses
  - Custom Expense description: debtor[0].expenses.overall_other_description_3
    default: Other
    required: False
    show if: debtor[0].expenses.has_other_expenses
  - Amount: debtor[0].expenses.overall_other_amount_3
    default: 300
    datatype: currency
    required: False
    show if: debtor[0].expenses.has_other_expenses

  - note: Other Custom Expense 4
    show if: debtor[0].expenses.has_other_expenses
  - Custom Expense description: debtor[0].expenses.overall_other_description_4
    default: Other
    required: False
    show if: debtor[0].expenses.has_other_expenses
  - Amount: debtor[0].expenses.overall_other_amount_4
    default: 300
    datatype: currency
    required: False
    show if: debtor[0].expenses.has_other_expenses

  - note: Other Custom Expense 5
    show if: debtor[0].expenses.has_other_expenses
  - Custom Expense description: debtor[0].expenses.overall_other_description_5
    default: Other
    required: False
    show if: debtor[0].expenses.has_other_expenses
  - Amount: debtor[0].expenses.overall_other_amount_5
    default: 300
    datatype: currency
    required: False
    show if: debtor[0].expenses.has_other_expenses
---
section: schedule_j
question: |
  Do you expect an increase or decrease in your expenses within the year after you file this form?
subquestion: |
  For example, do you expect to finish paying for your car loan within the year or do you expect your mortgage payment to increase or decrease because of a modification to the terms of your mortgage?
fields:
  - Expect a change in expenses?: debtor[0].expenses.change_in_expense
    datatype: yesnoradio
    default: True
  - Explain: debtor[0].expenses.change_explainer
    default: Some expense to explain
    required: False
---
event: schedule_j
section: schedule_j
question: |
  Review Expenses
review:
  - Revisit: debtor[0].expenses.joint_case
    button: |
      % if debtor[0].expenses.joint_case:
        Joint Case: Yes
        % if debtor[0].expenses.other_household:
        Separate Households: Yes
        % else:
        Separate Households: No
        % endif
      % else:
        Joint Case: No
      % endif
      % if len(debtor[0].expenses.dependents) > 0:
        Has dependents: Yes
        ${ dependents_table }
        ${ debtor[0].expenses.dependents.add_action() }
      % else:
        Has dependents: No
        ${ debtor[0].expenses.dependents.add_action() }
      % endif
  - Revisit: debtor[0].expenses.rent_expense
    button: |
      Rental or home expenses: ${ debtor[0].expenses.rent_expense }
      Real estate taxes: ${ debtor[0].expenses.real_estate_taxes }
      Property Insurance: ${ debtor[0].expenses.renters_insurance }
      Home Maintenance: ${ debtor[0].expenses.upkeep_expenses }
      Homeowns Dues: ${ debtor[0].expenses.owners_dues }
      Additional Mortgage Payments: ${ debtor[0].expenses.additional_mortgage_payments }

      Utilities
      Electicity, heat, natural gas: ${ debtor[0].expenses.util_electric }
      Water, sewer, garbage collection: ${ debtor[0].expenses.util_garbage }
      Telephone, internet, cable: ${ debtor[0].expenses.telephone }

      % if debtor[0].expenses.util_other:
        Has other utility expenses: Yes
        Explain: ${ debtor[0].expenses.util_other_specify }
        Amount: ${ debtor[0].expenses.util_other_amount }
      % else:
        Has other utility expenses: No
      % endif

      Food and housekeeping supplies: ${ debtor[0].expenses.house_supplies }
      Childcare: ${ debtor[0].expenses.childcare }
      Clothing: ${ debtor[0].expenses.clothing }
      Personal Care: ${ debtor[0].expenses.personal_care }
      Medical and Dental: ${ debtor[0].expenses.medical }
      Entertainment: ${ debtor[0].expenses.entertainment }
      Charitable Contributions: ${ debtor[0].expenses.charity }

      Insurance
      Life insurance: ${ debtor[0].expenses.life_insurance }
      Health insurance: ${ debtor[0].expenses.health_insurance }
      Vehicle insurance: ${ debtor[0].expenses.vehicle_insurance }
      % if debtor[0].expenses.other_insurance:
        Has other insurance: Yes
        Explain: ${ debtor[0].expenses.other_insurance_specify }
        Amount: ${ debtor[0].expenses.other_insurance_amount }
      % else:
        Has other insurance: No
      % endif

      Taxes
      ${ debtor[0].expenses.other_tax_specify }
      Amount: ${ debtor[0].expenses.other_tax_amount }

      Installment or lease payments
      Car payment 1: ${ debtor[0].expenses.vehicle1_payments }
      Car payment 2: ${ debtor[0].expenses.vehicle2_payments }
      Other payment 1:
      ${ debtor[0].expenses.other_payment1_specify }
      Amount: ${ debtor[0].expenses.other_payment1_amount }
      Other payment 2:
      ${ debtor[0].expenses.other_payment2_specify }
      Amount: ${ debtor[0].expenses.other_payment2_amount }

      Payments of alimony: ${ debtor[0].expenses.alimony }

      Other types of support payments:
      ${ debtor[0].expenses.other_support_specify }
      Amount: ${ debtor[0].expenses.other_support_amount }

  - Revisit: debtor[0].expenses.change_in_expense
    button: |
      % if debtor[0].expenses.change_in_expense:
        Increase or decrease of expenses: Yes
        Explain: ${ debtor[0].expenses.change_explainer }
      % else:
        Increase or decrease of expenses: No
      % endif
---
attachment:
  - name: Form 106J
    filename: form_b106j.pdf
    pdf template file: form_b106j.pdf
    variable name: j_attach
    code: expenses
---
code: |
  debtor_name = debtor[0].name.first + " " + debtor[0].name.middle + " " + debtor[0].name.last
  if len(debtor) > 1:
    debtor2_name = debtor[1].name.first + " " + debtor[1].name.middle + " " + debtor[1].name.last
  else:
    debtor2_name = ''
  expenses = {}
  expenses['debtor1_name_1'] = debtor_name
  expenses['debtor1_name_2'] = debtor_name
  expenses['debtor1_name_3'] = debtor_name
  expenses['debtor2_name_1'] = debtor2_name
  expenses['bankruptcy_district'] = current_district
  expenses['case_number_1'] = case_number
  expenses['case_number_2'] = case_number
  expenses['case_number_3'] = case_number
  expenses['isAmended'] = amended_filing
  expenses['notJoint'] = True if debtor[0].expenses.joint_case == False else False
  expenses['isJoint'] = True if debtor[0].expenses.joint_case == True else False
  expenses['notSameHouse'] = True if debtor[0].expenses.other_household == False else False
  expenses['isSameHouse'] = True if debtor[0].expenses.other_household == True else False
  expenses['noDependents'] = True if len(debtor[0].expenses.dependents) == 0 else False
  expenses['hasDependents'] = True if len(debtor[0].expenses.dependents) > 0 else False

  i = 1
  for dep in debtor[0].expenses.dependents:
    expenses['relation'+str(i)] = dep.relationship
    expenses['age'+str(i)] = dep.age
    expenses['noLivesWith'+str(i)] = True if dep.same_residence == False else False
    expenses['yesLivesWith'+str(i)] = True if dep.same_residence == True else False

    i += 1

  expenses['rentExpense'] = currency(debtor[0].expenses.rent_expense)
  expenses['taxes'] = currency(debtor[0].expenses.real_estate_taxes)
  expenses['propInsurance'] = currency(debtor[0].expenses.renters_insurance)
  expenses['homeMaint'] = currency(debtor[0].expenses.upkeep_expenses)
  expenses['homeowners'] = currency(debtor[0].expenses.owners_dues)
  expenses['addMortgage'] = currency(debtor[0].expenses.additional_mortgage_payments)
  expenses['electric'] = currency(debtor[0].expenses.util_electric)
  expenses['water'] = currency(debtor[0].expenses.util_garbage)
  expenses['telephone'] = currency(debtor[0].expenses.telephone)
  expenses['otherUtilsDesc'] = debtor[0].expenses.util_other_specify if debtor[0].expenses.util_other == True else None
  expenses['otherUtilsAmount'] = currency(debtor[0].expenses.util_other_amount) if debtor[0].expenses.util_other == True else None
  expenses['food'] = currency(debtor[0].expenses.house_supplies)
  expenses['childcare'] = currency(debtor[0].expenses.childcare)
  expenses['clothing'] = currency(debtor[0].expenses.clothing)
  expenses['personal'] = currency(debtor[0].expenses.personal_care)
  expenses['medical'] = currency(debtor[0].expenses.medical)
  expenses['transport'] = currency(debtor[0].expenses.transportation)
  expenses['entertainment'] = currency(debtor[0].expenses.entertainment)
  expenses['charity'] = currency(debtor[0].expenses.charity)
  expenses['lifeIns'] = currency(debtor[0].expenses.life_insurance)
  expenses['healthIns'] = currency(debtor[0].expenses.health_insurance)
  expenses['vehicleIns'] = currency(debtor[0].expenses.vehicle_insurance)
  expenses['otherInsDesc'] = debtor[0].expenses.other_insurance_specify if debtor[0].expenses.other_insurance == True else None
  expenses['otherInsAmount'] = currency(debtor[0].expenses.other_insurance_amount) if debtor[0].expenses.other_insurance == True else None
  expenses['otherTaxDesc'] = debtor[0].expenses.other_tax_specify
  expenses['otherTaxAmount'] = currency(debtor[0].expenses.other_tax_amount)
  expenses['car1'] = currency(debtor[0].expenses.vehicle1_payments)
  expenses['car2'] = currency(debtor[0].expenses.vehicle2_payments)
  expenses['otherLeaseDesc1'] = debtor[0].expenses.other_payment1_specify
  expenses['otherLeaseAmount1'] = currency(debtor[0].expenses.other_payment1_amount)
  expenses['otherLeaseDesc2'] = debtor[0].expenses.other_payment2_specify
  expenses['otherLeaseAmount2'] = currency(debtor[0].expenses.other_payment2_amount)
  expenses['alimony'] = currency(debtor[0].expenses.alimony)
  expenses['otherOutsiderPayDesc'] = debtor[0].expenses.other_support_specify
  expenses['otherOutsiderPayAmount'] = currency(debtor[0].expenses.other_support_amount)
  overall_other_description = ";\n".join([debtor[0].expenses.overall_other_description_1, debtor[0].expenses.overall_other_description_2, debtor[0].expenses.overall_other_description_3, debtor[0].expenses.overall_other_description_4, debtor[0].expenses.overall_other_description_5])
  overall_other_amount = debtor[0].expenses.overall_other_amount_1 + debtor[0].expenses.overall_other_amount_2 + debtor[0].expenses.overall_other_amount_3 + debtor[0].expenses.overall_other_amount_4 + debtor[0].expenses.overall_other_amount_5
  expenses['otherCatchDesc'] = overall_other_description
  expenses['otherCatchAmount'] = overall_other_amount

  debtor[0].expenses.other_mortgage = 0
  debtor[0].expenses.other_real_estate_taxes = 0
  debtor[0].expenses.other_property_insurance = 0
  debtor[0].expenses.other_maintenance = 0
  debtor[0].expenses.other_homeowners_dues = 0

  debtor1Total = (debtor[0].expenses.rent_expense +
                  debtor[0].expenses.real_estate_taxes +
                  debtor[0].expenses.renters_insurance +
                  debtor[0].expenses.upkeep_expenses +
                  debtor[0].expenses.owners_dues +
                  debtor[0].expenses.additional_mortgage_payments +
                  debtor[0].expenses.util_electric +
                  debtor[0].expenses.util_garbage +
                  debtor[0].expenses.telephone +
                  debtor[0].expenses.util_other_amount +
                  debtor[0].expenses.house_supplies +
                  debtor[0].expenses.childcare +
                  debtor[0].expenses.clothing +
                  debtor[0].expenses.personal_care +
                  debtor[0].expenses.medical +
                  debtor[0].expenses.transportation +
                  debtor[0].expenses.entertainment +
                  debtor[0].expenses.charity +
                  debtor[0].expenses.life_insurance +
                  debtor[0].expenses.health_insurance +
                  debtor[0].expenses.vehicle_insurance +
                  debtor[0].expenses.other_insurance_amount +
                  debtor[0].expenses.other_tax_amount +
                  debtor[0].expenses.vehicle1_payments +
                  debtor[0].expenses.vehicle2_payments +
                  debtor[0].expenses.other_payment1_amount +
                  debtor[0].expenses.other_payment2_amount +
                  debtor[0].expenses.alimony +
                  debtor[0].expenses.other_support_amount +
                  debtor[0].expenses.other_mortgage +
                  debtor[0].expenses.other_real_estate_taxes +
                  debtor[0].expenses.other_property_insurance +
                  debtor[0].expenses.other_maintenance +
                  debtor[0].expenses.other_homeowners_dues +
                  overall_other_amount)
  expenses['debtor1Total'] = currency(debtor1Total)

  #TODO: redo form questions to interate over debtors if more than one.. Maybe just duplicate the question blocks and put the pdf after both?
  expenses['debtor2Total'] = currency(0)
  expenses['overallTotal'] = expenses['debtor1Total']
  expenses['overallTotal2'] = expenses['debtor1Total']
  incomeTotal = sum((debt.income.net_rental_business + debt.income.family_support + debt.income.interest_and_dividends + debt.income.unemployment + debt.income.social_security + debt.income.other_govt_assist + debt.income.pension + debt.income.other_monthly_amount) + (income_amount + overtime_pay) - (debt.income.tax_deduction + debt.income.mandatory_contributions + debt.income.voluntary_contributions + debt.income.fund_loans + debt.income.insurance + debt.income.domestic_support + debt.income.union_dues + debt.income.other_deduction_amount) for debt in debtor)
  expenses['incomeTotal'] = currency(incomeTotal)
  expenses['netTotal'] = currency(incomeTotal - debtor1Total)
  expenses['noDelta'] = True if debtor[0].expenses.change_in_expense == False else False
  expenses['yesDelta'] = True if debtor[0].expenses.change_in_expense == True else False
  expenses['deltaExplain'] = debtor[0].expenses.change_explainer if debtor[0].expenses.change_in_expense == True else None


